[
  {
    "name": "access-matrix",
    "type": "registry:ui",
    "dependencies": [
      "class-variance-authority",
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/access-matrix.tsx",
        "content": "import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { Check, X, Edit, MoreHorizontal } from \"lucide-react\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"./dropdown-menu\"\r\nimport { Button } from \"./button\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./table\"\r\n\r\nconst accessMatrixVariants = cva(\r\n  \"w-full\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"text-xs\",\r\n        default: \"text-sm\",\r\n        lg: \"text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst accessCellVariants = cva(\r\n  \"relative transition-all duration-200 group\",\r\n  {\r\n    variants: {\r\n      interactive: {\r\n        true: \"cursor-pointer hover:bg-muted/50\",\r\n        false: \"cursor-default\",\r\n      },\r\n      highlighted: {\r\n        true: \"bg-accent/20\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      interactive: false,\r\n      highlighted: false,\r\n    },\r\n  }\r\n)\r\n\r\nexport type PermissionValue = string | boolean | number | {\r\n  value: any\r\n  label: string\r\n  color?: string\r\n  icon?: React.ReactNode\r\n}\r\n\r\nexport interface PermissionType {\r\n  value: string\r\n  label: string\r\n  color?: string\r\n  backgroundColor?: string\r\n  icon?: React.ReactNode\r\n}\r\n\r\nexport interface AccessMatrixCell {\r\n  value: string\r\n  metadata?: Record<string, any>\r\n}\r\n\r\nexport interface AccessMatrixData {\r\n  rows: {\r\n    id: string\r\n    label: string\r\n    description?: string\r\n  }[]\r\n  columns: {\r\n    id: string\r\n    label: string\r\n    description?: string\r\n  }[]\r\n  cells: Record<string, Record<string, AccessMatrixCell>>\r\n}\r\n\r\nexport interface AccessMatrixProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof accessMatrixVariants> {\r\n  data: AccessMatrixData\r\n  permissions?: PermissionType[]\r\n  clickBehavior?: \"cycle\" | \"toggle\" | \"menu\" | \"custom\"\r\n  onCellChange?: (rowId: string, columnId: string, value: string) => void\r\n  onCellClick?: (rowId: string, columnId: string, cell: AccessMatrixCell) => void\r\n  renderRowActions?: (row: AccessMatrixData[\"rows\"][0]) => React.ReactNode\r\n  renderColumnActions?: (column: AccessMatrixData[\"columns\"][0]) => React.ReactNode\r\n  editable?: boolean\r\n  defaultValue?: string\r\n  isDisabled?: (rowId: string, columnId: string) => boolean\r\n  isHidden?: (rowId: string, columnId: string) => boolean\r\n  columnTitle?: string\r\n  rowTitle?: string\r\n  flipLabels?: boolean\r\n  displayMode?: \"icon\" | \"text\" | \"both\"\r\n  verticalHeaders?: boolean\r\n}\r\n\r\n// Default permission types for ACL-style permissions with better theme support\r\nconst defaultPermissions: PermissionType[] = [\r\n  { \r\n    value: \"allow\", \r\n    label: \"Allow\", \r\n    color: \"hsl(142 71% 45%)\", // Better contrast in both themes\r\n    backgroundColor: \"hsl(142 71% 45% / 0.15)\", \r\n    icon: <Check className=\"h-4 w-4\" /> \r\n  },\r\n  { \r\n    value: \"deny\", \r\n    label: \"Deny\", \r\n    color: \"hsl(0 84% 60%)\", // Softer red that works in both themes\r\n    backgroundColor: \"hsl(0 84% 60% / 0.15)\", \r\n    icon: <X className=\"h-4 w-4\" /> \r\n  },\r\n  { \r\n    value: \"inherit\", \r\n    label: \"Inherit\", \r\n    color: \"hsl(var(--muted-foreground))\", \r\n    backgroundColor: \"hsl(var(--muted))\", \r\n    icon: null \r\n  }\r\n]\r\n\r\nconst permissionIconVariants = cva(\r\n  \"flex items-center justify-center transition-all duration-200 rounded-md\",\r\n  {\r\n    variants: {\r\n      displayMode: {\r\n        icon: \"w-8 h-8 group-hover:scale-110\",\r\n        text: \"min-w-[80px] px-3 py-1.5 text-xs font-medium whitespace-nowrap\",\r\n        both: \"gap-1.5 min-w-[90px] px-3 py-1.5\",\r\n      },\r\n      empty: {\r\n        true: \"min-w-[2rem] min-h-[2rem] p-1\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      displayMode: \"icon\",\r\n      empty: false,\r\n    },\r\n  }\r\n)\r\n\r\ninterface PermissionIconProps {\r\n  permission: PermissionType | undefined;\r\n  displayMode?: \"icon\" | \"text\" | \"both\";\r\n  ariaLabel?: string;\r\n}\r\n\r\nconst PermissionIcon = React.memo<PermissionIconProps>(\r\n  ({ permission, displayMode = \"icon\", ariaLabel }) => {\r\n    if (!permission) {\r\n      return (\r\n        <div className={permissionIconVariants({ empty: true })}>\r\n          <span className=\"text-xs text-muted-foreground\" aria-hidden=\"true\">—</span>\r\n          <span className=\"sr-only\">No permission set</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const iconContent = permission.icon && React.cloneElement(\r\n      permission.icon as React.ReactElement, \r\n      { \r\n        className: displayMode === \"both\" ? \"h-3.5 w-3.5\" : \"h-4 w-4\",\r\n        \"aria-hidden\": \"true\"\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div \r\n        className={permissionIconVariants({ displayMode })}\r\n        style={{ \r\n          backgroundColor: permission.backgroundColor || 'hsl(var(--muted))',\r\n          color: permission.color || 'hsl(var(--muted-foreground))'\r\n        }}\r\n        role=\"img\"\r\n        aria-label={ariaLabel || permission.label}\r\n      >\r\n        {displayMode === \"icon\" && (\r\n          <>\r\n            {iconContent}\r\n            {!permission.icon && (\r\n              <span className=\"text-xs font-medium\" aria-hidden=\"true\">\r\n                {permission.label.charAt(0)}\r\n              </span>\r\n            )}\r\n          </>\r\n        )}\r\n        {displayMode === \"text\" && permission.label}\r\n        {displayMode === \"both\" && (\r\n          <>\r\n            {iconContent}\r\n            <span className=\"text-xs font-medium whitespace-nowrap\">\r\n              {permission.label}\r\n            </span>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nPermissionIcon.displayName = \"PermissionIcon\"\r\n\r\n// Responsive hook\r\nconst useMediaQuery = (query: string): boolean => {\r\n  const [matches, setMatches] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    const media = window.matchMedia(query)\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches)\r\n    }\r\n    const listener = () => setMatches(media.matches)\r\n    media.addEventListener(\"change\", listener)\r\n    return () => media.removeEventListener(\"change\", listener)\r\n  }, [matches, query])\r\n\r\n  return matches\r\n}\r\n\r\nconst AccessMatrix = React.memo(React.forwardRef<HTMLDivElement, AccessMatrixProps>(\r\n  ({ \r\n    className, \r\n    size, \r\n    data, \r\n    permissions = defaultPermissions,\r\n    clickBehavior = \"cycle\",\r\n    onCellChange,\r\n    onCellClick,\r\n    renderRowActions,\r\n    renderColumnActions,\r\n    editable = false,\r\n    defaultValue = \"inherit\",\r\n    isDisabled,\r\n    isHidden,\r\n    columnTitle,\r\n    rowTitle,\r\n    flipLabels = false,\r\n    displayMode = \"icon\",\r\n    verticalHeaders = false,\r\n    ...props \r\n  }, ref) => {\r\n    \r\n    // Responsive display mode\r\n    const isMobile = useMediaQuery(\"(max-width: 640px)\")\r\n    const isTablet = useMediaQuery(\"(max-width: 1024px)\")\r\n    \r\n    const responsiveDisplayMode = React.useMemo(() => {\r\n      if (displayMode) return displayMode // Respect explicit displayMode prop\r\n      if (isMobile) return \"icon\"\r\n      if (isTablet) return \"text\"\r\n      return \"both\"\r\n    }, [displayMode, isMobile, isTablet])\r\n    \r\n    // Create a Map for O(1) permission lookups\r\n    const permissionMap = React.useMemo(() => \r\n      new Map(permissions.map(p => [p.value, p])),\r\n      [permissions]\r\n    )\r\n    \r\n    const handleCellClick = React.useCallback((rowId: string, columnId: string) => {\r\n      // Check if cell is disabled\r\n      if (isDisabled && isDisabled(rowId, columnId)) {\r\n        return\r\n      }\r\n      \r\n      const cell = data.cells[rowId]?.[columnId] || { value: defaultValue }\r\n      \r\n      if (clickBehavior === \"custom\" && onCellClick) {\r\n        onCellClick(rowId, columnId, cell)\r\n        return\r\n      }\r\n      \r\n      if ((editable || clickBehavior === \"cycle\") && onCellChange) {\r\n        const currentValue = cell.value\r\n        const currentIndex = permissions.findIndex(p => p.value === currentValue)\r\n        const nextIndex = currentIndex === -1 ? 0 : (currentIndex + 1) % permissions.length\r\n        const nextValue = permissions[nextIndex].value\r\n        onCellChange(rowId, columnId, nextValue)\r\n      } else if (clickBehavior === \"toggle\" && onCellChange && permissions.length >= 2) {\r\n        const currentValue = cell.value\r\n        // For toggle, if current value is first permission, switch to second, otherwise switch to first\r\n        const newValue = currentValue === permissions[0].value ? permissions[1].value : permissions[0].value\r\n        onCellChange(rowId, columnId, newValue)\r\n      }\r\n    }, [clickBehavior, data.cells, defaultValue, editable, isDisabled, onCellChange, onCellClick, permissions])\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(accessMatrixVariants({ size, className }))}\r\n        {...props}\r\n      >\r\n        <div className=\"rounded-lg border\">\r\n          <div className=\"overflow-auto max-w-full\">\r\n            {columnTitle && verticalHeaders && (\r\n              <div className=\"flex border-b bg-muted/30\">\r\n                {!flipLabels && <div className=\"w-40 shrink-0\" />}\r\n                <div className=\"flex-1 flex items-center justify-center p-3\">\r\n                  <span className=\"text-sm font-medium text-muted-foreground\">\r\n                    {columnTitle}\r\n                  </span>\r\n                </div>\r\n                {flipLabels && <div className=\"w-40 shrink-0\" />}\r\n              </div>\r\n            )}\r\n            <Table>\r\n            {columnTitle && !verticalHeaders && (\r\n              <caption className=\"text-sm font-medium text-muted-foreground mb-2 text-center\">\r\n                {columnTitle}\r\n              </caption>\r\n            )}\r\n            <TableHeader>\r\n              <TableRow>\r\n                {!flipLabels && (\r\n                  <TableHead className={cn(\r\n                    \"font-semibold sticky left-0 bg-background z-10\",\r\n                    isMobile ? \"w-32\" : \"w-40\"\r\n                  )}>\r\n                    {rowTitle || \"Resources\"}\r\n                  </TableHead>\r\n                )}\r\n              {data.columns.map((column) => (\r\n                <TableHead key={column.id} className={cn(\r\n                  \"text-center border-l\",\r\n                  isMobile ? \"min-w-[80px]\" : \"min-w-[100px]\"\r\n                )}>\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <span className=\"font-medium\" title={column.description}>\r\n                      {column.label}\r\n                    </span>\r\n                    {renderColumnActions && (\r\n                      <DropdownMenu>\r\n                        <DropdownMenuTrigger asChild>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                          >\r\n                            <MoreHorizontal className=\"h-3 w-3\" />\r\n                          </Button>\r\n                        </DropdownMenuTrigger>\r\n                        <DropdownMenuContent align=\"end\">\r\n                          {renderColumnActions(column)}\r\n                        </DropdownMenuContent>\r\n                      </DropdownMenu>\r\n                    )}\r\n                  </div>\r\n                </TableHead>\r\n              ))}\r\n              {flipLabels && (\r\n                <TableHead className={cn(\r\n                  \"font-semibold sticky right-0 bg-background z-10\",\r\n                  isMobile ? \"w-32\" : \"w-40\"\r\n                )}>\r\n                  {rowTitle || \"Resources\"}\r\n                </TableHead>\r\n              )}\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {data.rows.map((row) => (\r\n              <TableRow key={row.id}>\r\n                {!flipLabels && (\r\n                  <TableCell className={cn(\r\n                    \"font-medium sticky left-0 bg-background z-10\",\r\n                    isMobile ? \"w-32\" : \"w-40\"\r\n                  )}>\r\n                    <div className=\"flex items-center justify-between gap-2 pr-2\">\r\n                      <span title={row.description}>{row.label}</span>\r\n                      {renderRowActions && (\r\n                        <DropdownMenu>\r\n                          <DropdownMenuTrigger asChild>\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                            >\r\n                              <MoreHorizontal className=\"h-3 w-3\" />\r\n                            </Button>\r\n                          </DropdownMenuTrigger>\r\n                          <DropdownMenuContent align=\"end\">\r\n                            {renderRowActions(row)}\r\n                          </DropdownMenuContent>\r\n                        </DropdownMenu>\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                )}\r\n                {data.columns.map((column) => {\r\n                  const cell = data.cells[row.id]?.[column.id] || { value: defaultValue }\r\n                  const permission = permissionMap.get(cell.value) || \r\n                    permissionMap.get(defaultValue)\r\n                  const isDisabledCell = isDisabled && isDisabled(row.id, column.id)\r\n                  const isHiddenCell = isHidden && isHidden(row.id, column.id)\r\n                  \r\n                  if (isHiddenCell) {\r\n                    return (\r\n                      <TableCell key={column.id} className=\"bg-muted/10 border-l\" />\r\n                    )\r\n                  }\r\n                  \r\n                  return (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      className={cn(\r\n                        \"text-center transition-all p-2 border-l\",\r\n                        accessCellVariants({ \r\n                          interactive: !isDisabledCell && (editable || clickBehavior !== \"custom\"),\r\n                          highlighted: false\r\n                        }),\r\n                        isDisabledCell && \"opacity-50 cursor-not-allowed\"\r\n                      )}\r\n                      onClick={() => !isDisabledCell && handleCellClick(row.id, column.id)}\r\n                    >\r\n                      <div className=\"flex items-center justify-center min-h-[40px]\">\r\n                        {!isDisabledCell && (editable || clickBehavior !== \"custom\") ? (\r\n                          <button\r\n                            className=\"focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 rounded-md\"\r\n                            aria-label={`${row.label} ${column.label}: ${permission?.label || 'No permission'}`}\r\n                            type=\"button\"\r\n                          >\r\n                            <PermissionIcon \r\n                              permission={permission} \r\n                              displayMode={responsiveDisplayMode}\r\n                              ariaLabel={`Set to ${permission?.label || 'default'}`}\r\n                            />\r\n                          </button>\r\n                        ) : (\r\n                          <PermissionIcon permission={permission} displayMode={responsiveDisplayMode} />\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n                {flipLabels && (\r\n                  <TableCell className={cn(\r\n                    \"font-medium sticky right-0 bg-background z-10\",\r\n                    isMobile ? \"w-32\" : \"w-40\"\r\n                  )}>\r\n                    <div className=\"flex items-center justify-between gap-2 pl-2\">\r\n                      {renderRowActions && (\r\n                        <DropdownMenu>\r\n                          <DropdownMenuTrigger asChild>\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                            >\r\n                              <MoreHorizontal className=\"h-3 w-3\" />\r\n                            </Button>\r\n                          </DropdownMenuTrigger>\r\n                          <DropdownMenuContent align=\"end\">\r\n                            {renderRowActions(row)}\r\n                          </DropdownMenuContent>\r\n                        </DropdownMenu>\r\n                      )}\r\n                      <span title={row.description}>{row.label}</span>\r\n                    </div>\r\n                  </TableCell>\r\n                )}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n))\r\nAccessMatrix.displayName = \"AccessMatrix\"\r\n\r\nexport { AccessMatrix, accessMatrixVariants, accessCellVariants }",
        "type": "registry:ui",
        "target": "components/ui/access-matrix.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "variants"
    ]
  },
  {
    "name": "alert",
    "type": "registry:ui",
    "dependencies": [
      "class-variance-authority",
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/alert.tsx",
        "content": "import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 transition-all duration-200 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground border-border\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive bg-destructive/10\",\r\n        warning:\r\n          \"border-yellow-500/50 text-yellow-900 dark:text-yellow-100 dark:border-yellow-500 [&>svg]:text-yellow-600 dark:[&>svg]:text-yellow-400 bg-yellow-50 dark:bg-yellow-950/30\",\r\n        success:\r\n          \"border-green-500/50 text-green-900 dark:text-green-100 dark:border-green-500 [&>svg]:text-green-600 dark:[&>svg]:text-green-400 bg-green-50 dark:bg-green-950/30\",\r\n        info:\r\n          \"border-blue-500/50 text-blue-900 dark:text-blue-100 dark:border-blue-500 [&>svg]:text-blue-600 dark:[&>svg]:text-blue-400 bg-blue-50 dark:bg-blue-950/30\",\r\n      },\r\n      size: {\r\n        default: \"p-4\",\r\n        sm: \"p-3 text-sm\",\r\n        lg: \"p-6 text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface AlertProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof alertVariants> {\r\n  dismissible?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\r\n  ({ className, variant, size, dismissible = false, onDismiss, children, ...props }, ref) => {\r\n    const [isVisible, setIsVisible] = React.useState(true)\r\n\r\n    const handleDismiss = React.useCallback(() => {\r\n      setIsVisible(false)\r\n      onDismiss?.()\r\n    }, [onDismiss])\r\n\r\n    if (!isVisible) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        role=\"alert\"\r\n        className={cn(alertVariants({ variant, size }), className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n        {dismissible && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDismiss}\r\n            className=\"absolute right-2 top-2 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\"\r\n            aria-label=\"Dismiss alert\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Close</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription, alertVariants }",
        "type": "registry:ui",
        "target": "components/ui/alert.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "variants"
    ]
  },
  {
    "name": "avatar",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-avatar"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/avatar.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatar.displayName = AvatarPrimitive.Root.displayName\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback }",
        "type": "registry:ui",
        "target": "components/ui/avatar.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "client",
      "radix"
    ]
  },
  {
    "name": "badge",
    "type": "registry:ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/badge.tsx",
        "content": "import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }",
        "type": "registry:ui",
        "target": "components/ui/badge.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "variants"
    ]
  },
  {
    "name": "button",
    "type": "registry:ui",
    "description": "@component Button @description Displays a button or a component that looks like a button @category form @complexity simple @status stable @tags button, interactive, action, form",
    "dependencies": [
      "@radix-ui/react-slot",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/button.tsx",
        "content": "/**\r\n * @component Button\r\n * @description Displays a button or a component that looks like a button\r\n * @category form\r\n * @complexity simple\r\n * @status stable\r\n * @tags button, interactive, action, form\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }",
        "type": "registry:ui",
        "target": "components/ui/button.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "card",
    "type": "registry:ui",
    "description": "@component Card @description Displays a card with header, content, and footer sections @category display @complexity simple @status stable @tags card, container, layout, content",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/card.tsx",
        "content": "/**\r\n * @component Card\r\n * @description Displays a card with header, content, and footer sections\r\n * @category display\r\n * @complexity simple\r\n * @status stable\r\n * @tags card, container, layout, content\r\n */\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }",
        "type": "registry:ui",
        "target": "components/ui/card.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef"
    ]
  },
  {
    "name": "checkbox",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-checkbox",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/checkbox.tsx",
        "content": "import * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check, Minus } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst checkboxVariants = cva(\r\n  \"peer shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=indeterminate]:bg-primary data-[state=indeterminate]:text-primary-foreground\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-3 w-3\",\r\n        default: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst checkboxIconVariants = cva(\"flex items-center justify-center text-current\", {\r\n  variants: {\r\n    size: {\r\n      sm: \"h-2.5 w-2.5\",\r\n      default: \"h-3.5 w-3.5\",\r\n      lg: \"h-4 w-4\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"default\",\r\n  },\r\n})\r\n\r\nexport interface CheckboxProps\r\n  extends React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\r\n    VariantProps<typeof checkboxVariants> {\r\n  indeterminate?: boolean\r\n}\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  CheckboxProps\r\n>(({ className, size, indeterminate, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(checkboxVariants({ size, className }))}\r\n    {...props}\r\n    data-state={\r\n      indeterminate ? \"indeterminate\" : props.checked ? \"checked\" : \"unchecked\"\r\n    }\r\n  >\r\n    <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\r\n      {indeterminate ? (\r\n        <Minus className={cn(checkboxIconVariants({ size }))} />\r\n      ) : (\r\n        <Check className={cn(checkboxIconVariants({ size }))} />\r\n      )}\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox, checkboxVariants }",
        "type": "registry:ui",
        "target": "components/ui/checkbox.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "dialog",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-dialog",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/dialog.tsx",
        "content": "import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst dialogContentVariants = cva(\r\n  \"fixed left-[50%] top-[50%] z-50 grid w-full translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"max-w-sm\",\r\n        default: \"max-w-lg\",\r\n        lg: \"max-w-2xl\",\r\n        xl: \"max-w-4xl\",\r\n        full: \"max-w-[95vw] max-h-[95vh]\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface DialogContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>,\r\n    VariantProps<typeof dialogContentVariants> {}\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  DialogContentProps\r\n>(({ className, children, size, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(dialogContentVariants({ size, className }))}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/dialog.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "dropdown-menu",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-dropdown-menu",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/dropdown-menu.tsx",
        "content": "import * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst dropdownMenuContentVariants = cva(\r\n  \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"min-w-[6rem] text-xs\",\r\n        default: \"min-w-[8rem] text-sm\",\r\n        lg: \"min-w-[12rem] text-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface DropdownMenuContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>,\r\n    VariantProps<typeof dropdownMenuContentVariants> {}\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  DropdownMenuContentProps\r\n>(({ className, sideOffset = 4, size, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(dropdownMenuContentVariants({ size, className }))}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold text-muted-foreground\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/dropdown-menu.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "input",
    "type": "registry:ui",
    "description": "@component Input @description Displays a text input field @category form @complexity simple @status stable @tags input, form, text, field",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/input.tsx",
        "content": "/**\r\n * @component Input\r\n * @description Displays a text input field\r\n * @category form\r\n * @complexity simple\r\n * @status stable\r\n * @tags input, form, text, field\r\n */\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }",
        "type": "registry:ui",
        "target": "components/ui/input.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef"
    ]
  },
  {
    "name": "label",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-label",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/label.tsx",
        "content": "import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"text-foreground\",\r\n        secondary: \"text-muted-foreground\",\r\n        muted: \"text-muted-foreground/80\",\r\n        destructive: \"text-destructive\",\r\n      },\r\n      size: {\r\n        sm: \"text-xs\",\r\n        default: \"text-sm\",\r\n        lg: \"text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface LabelProps\r\n  extends React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>,\r\n    VariantProps<typeof labelVariants> {}\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  LabelProps\r\n>(({ className, variant, size, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants({ variant, size, className }))}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label, labelVariants }",
        "type": "registry:ui",
        "target": "components/ui/label.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "popover",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-popover",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/popover.tsx",
        "content": "import * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\nimport { X } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor\r\n\r\nconst PopoverClose = PopoverPrimitive.Close\r\n\r\nconst popoverContentVariants = cva(\r\n  \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"w-56 p-3\",\r\n        default: \"w-72 p-4\",\r\n        lg: \"w-80 p-5\",\r\n        xl: \"w-96 p-6\",\r\n        auto: \"w-auto min-w-56 p-4\",\r\n      },\r\n      variant: {\r\n        default: \"bg-popover text-popover-foreground border\",\r\n        card: \"bg-card text-card-foreground border shadow-lg\",\r\n        accent: \"bg-accent text-accent-foreground border-accent\",\r\n        destructive: \"bg-destructive text-destructive-foreground border-destructive\",\r\n        success: \"bg-green-50 text-green-900 border-green-200 dark:bg-green-950 dark:text-green-100 dark:border-green-800\",\r\n        warning: \"bg-yellow-50 text-yellow-900 border-yellow-200 dark:bg-yellow-950 dark:text-yellow-100 dark:border-yellow-800\",\r\n        info: \"bg-blue-50 text-blue-900 border-blue-200 dark:bg-blue-950 dark:text-blue-100 dark:border-blue-800\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface PopoverContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>,\r\n    VariantProps<typeof popoverContentVariants> {\r\n  sideOffset?: number\r\n  showClose?: boolean\r\n}\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  PopoverContentProps\r\n>(({ className, align = \"center\", sideOffset = 4, size, variant, showClose = false, children, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(popoverContentVariants({ size, variant, className }))}\r\n      {...props}\r\n    >\r\n      {showClose && (\r\n        <PopoverPrimitive.Close className=\"absolute right-2 top-2 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n          <X className=\"h-4 w-4\" />\r\n          <span className=\"sr-only\">Close</span>\r\n        </PopoverPrimitive.Close>\r\n      )}\r\n      {children}\r\n    </PopoverPrimitive.Content>\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nconst PopoverArrow = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Arrow>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Arrow>\r\n>(({ className, ...props }, ref) => (\r\n  <PopoverPrimitive.Arrow\r\n    ref={ref}\r\n    className={cn(\"fill-popover border-t border-l border-border\", className)}\r\n    {...props}\r\n  />\r\n))\r\nPopoverArrow.displayName = PopoverPrimitive.Arrow.displayName\r\n\r\nconst PopoverHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"mb-4 space-y-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nPopoverHeader.displayName = \"PopoverHeader\"\r\n\r\nconst PopoverTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h4\r\n    ref={ref}\r\n    className={cn(\"font-medium leading-none\", className)}\r\n    {...props}\r\n  />\r\n))\r\nPopoverTitle.displayName = \"PopoverTitle\"\r\n\r\nconst PopoverDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nPopoverDescription.displayName = \"PopoverDescription\"\r\n\r\nconst PopoverFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"mt-4 flex items-center justify-end space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nPopoverFooter.displayName = \"PopoverFooter\"\r\n\r\nexport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverAnchor,\r\n  PopoverClose,\r\n  PopoverArrow,\r\n  PopoverHeader,\r\n  PopoverTitle,\r\n  PopoverDescription,\r\n  PopoverFooter,\r\n  popoverContentVariants,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/popover.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "radio-group",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-radio-group",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/radio-group.tsx",
        "content": "import * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst radioGroupVariants = cva(\r\n  \"grid gap-2\",\r\n  {\r\n    variants: {\r\n      orientation: {\r\n        vertical: \"grid-cols-1\",\r\n        horizontal: \"grid-flow-col grid-cols-none\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      orientation: \"vertical\",\r\n    },\r\n  }\r\n)\r\n\r\nconst radioGroupItemVariants = cva(\r\n  \"aspect-square rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-3 w-3\",\r\n        default: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst radioGroupIndicatorVariants = cva(\r\n  \"flex items-center justify-center\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-1.5 w-1.5\",\r\n        default: \"h-2 w-2\",\r\n        lg: \"h-2.5 w-2.5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface RadioGroupProps\r\n  extends Omit<React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>, 'orientation'>,\r\n    VariantProps<typeof radioGroupVariants> {}\r\n\r\nexport interface RadioGroupItemProps\r\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>,\r\n    VariantProps<typeof radioGroupItemVariants> {}\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  RadioGroupProps\r\n>(({ className, orientation, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(radioGroupVariants({ orientation, className }))}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  RadioGroupItemProps\r\n>(({ className, size, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(radioGroupItemVariants({ size, className }))}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className={cn(radioGroupIndicatorVariants({ size }), \"fill-current text-current\")} />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem, radioGroupVariants, radioGroupItemVariants }",
        "type": "registry:ui",
        "target": "components/ui/radio-group.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "select",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-select",
      "lucide-react",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/select.tsx",
        "content": "import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst selectTriggerVariants = cva(\r\n  \"flex w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-8 px-2 text-xs\",\r\n        default: \"h-10 px-3 py-2 text-sm\",\r\n        lg: \"h-12 px-4 py-3 text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst selectContentVariants = cva(\r\n  \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"min-w-[6rem] text-xs\",\r\n        default: \"min-w-[8rem] text-sm\",\r\n        lg: \"min-w-[12rem] text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface SelectTriggerProps\r\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>,\r\n    VariantProps<typeof selectTriggerVariants> {}\r\n\r\nexport interface SelectContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>,\r\n    VariantProps<typeof selectContentVariants> {}\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  SelectTriggerProps\r\n>(({ className, children, size, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(selectTriggerVariants({ size, className }))}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  SelectContentProps\r\n>(({ className, children, position = \"popper\", size, ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(selectContentVariants({ size, className }))}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n  selectTriggerVariants,\r\n  selectContentVariants,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/select.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "separator",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-separator"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/separator.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }",
        "type": "registry:ui",
        "target": "components/ui/separator.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "client",
      "radix"
    ]
  },
  {
    "name": "stat-card",
    "type": "registry:ui",
    "description": "@component StatCard @description A card component for displaying statistics with trends and icons @category display @complexity simple @status stable @tags statistics, dashboard, analytics, metrics",
    "dependencies": [
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/stat-card.tsx",
        "content": "/**\r\n * @component StatCard\r\n * @description A card component for displaying statistics with trends and icons\r\n * @category display\r\n * @complexity simple\r\n * @status stable\r\n * @tags statistics, dashboard, analytics, metrics\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { cn } from \"../lib/utils\"\r\nimport { Card, CardContent, CardHeader } from \"./card\"\r\nimport { ArrowUpRight, ArrowDownRight, Minus } from \"lucide-react\"\r\n\r\nexport interface StatCardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  title: string\r\n  value: string | number\r\n  description?: string\r\n  trend?: {\r\n    value: number\r\n    label?: string\r\n  }\r\n  icon?: React.ReactNode\r\n}\r\n\r\nexport function StatCard({\r\n  title,\r\n  value,\r\n  description,\r\n  trend,\r\n  icon,\r\n  className,\r\n  ...props\r\n}: StatCardProps) {\r\n  const trendIcon = trend ? (\r\n    trend.value > 0 ? (\r\n      <ArrowUpRight className=\"h-4 w-4\" />\r\n    ) : trend.value < 0 ? (\r\n      <ArrowDownRight className=\"h-4 w-4\" />\r\n    ) : (\r\n      <Minus className=\"h-4 w-4\" />\r\n    )\r\n  ) : null\r\n\r\n  const trendColor = trend\r\n    ? trend.value > 0\r\n      ? \"text-green-600\"\r\n      : trend.value < 0\r\n      ? \"text-red-600\"\r\n      : \"text-muted-foreground\"\r\n    : \"\"\r\n\r\n  return (\r\n    <Card className={cn(\"\", className)} {...props}>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <h3 className=\"text-sm font-medium text-muted-foreground\">{title}</h3>\r\n        {icon && <div className=\"text-muted-foreground\">{icon}</div>}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"text-2xl font-bold\">{value}</div>\r\n        {(description || trend) && (\r\n          <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\r\n            {trend && (\r\n              <span className={cn(\"flex items-center gap-0.5\", trendColor)}>\r\n                {trendIcon}\r\n                <span className=\"font-medium\">{Math.abs(trend.value)}%</span>\r\n                {trend.label && <span className=\"text-muted-foreground\">{trend.label}</span>}\r\n              </span>\r\n            )}\r\n            {description && <p>{description}</p>}\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}",
        "type": "registry:ui",
        "target": "components/ui/stat-card.tsx"
      }
    ],
    "category": "ui",
    "tags": []
  },
  {
    "name": "switch",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-switch",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/switch.tsx",
        "content": "import * as React from \"react\"\r\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst switchVariants = cva(\r\n  \"peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-4 w-7\",\r\n        default: \"h-6 w-11\",\r\n        lg: \"h-7 w-12\",\r\n      },\r\n      variant: {\r\n        default: \"data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n        destructive: \"data-[state=checked]:bg-destructive data-[state=unchecked]:bg-input\",\r\n        success: \"data-[state=checked]:bg-green-600 data-[state=unchecked]:bg-input\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst switchThumbVariants = cva(\r\n  \"pointer-events-none block rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=unchecked]:translate-x-0\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-3 w-3 data-[state=checked]:translate-x-3\",\r\n        default: \"h-5 w-5 data-[state=checked]:translate-x-5\",\r\n        lg: \"h-5 w-5 data-[state=checked]:translate-x-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst switchIconVariants = cva(\r\n  \"absolute inset-0 flex items-center justify-center transition-opacity\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"text-[8px]\",\r\n        default: \"text-xs\",\r\n        lg: \"text-sm\",\r\n      },\r\n      state: {\r\n        checked: \"opacity-100\",\r\n        unchecked: \"opacity-0\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      state: \"unchecked\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface SwitchProps\r\n  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root>,\r\n    VariantProps<typeof switchVariants> {\r\n  checkedIcon?: React.ReactNode\r\n  uncheckedIcon?: React.ReactNode\r\n}\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitive.Root>,\r\n  SwitchProps\r\n>(({ className, size, variant, checkedIcon, uncheckedIcon, checked, ...props }, ref) => {\r\n  const [isChecked, setIsChecked] = React.useState(checked || false)\r\n\r\n  React.useEffect(() => {\r\n    if (checked !== undefined) {\r\n      setIsChecked(checked)\r\n    }\r\n  }, [checked])\r\n\r\n  const handleCheckedChange = (newChecked: boolean) => {\r\n    setIsChecked(newChecked)\r\n    props.onCheckedChange?.(newChecked)\r\n  }\r\n\r\n  return (\r\n    <SwitchPrimitive.Root\r\n      className={cn(switchVariants({ size, variant }), className)}\r\n      checked={checked}\r\n      onCheckedChange={handleCheckedChange}\r\n      {...props}\r\n      ref={ref}\r\n    >\r\n      {/* Background icons */}\r\n      {checkedIcon && (\r\n        <div className={cn(\r\n          switchIconVariants({ \r\n            size, \r\n            state: isChecked ? \"checked\" : \"unchecked\" \r\n          }),\r\n          \"left-1 text-primary-foreground\"\r\n        )}>\r\n          {checkedIcon}\r\n        </div>\r\n      )}\r\n      {uncheckedIcon && (\r\n        <div className={cn(\r\n          switchIconVariants({ \r\n            size, \r\n            state: isChecked ? \"unchecked\" : \"checked\" \r\n          }),\r\n          \"right-1 text-muted-foreground\"\r\n        )}>\r\n          {uncheckedIcon}\r\n        </div>\r\n      )}\r\n      \r\n      <SwitchPrimitive.Thumb\r\n        className={cn(switchThumbVariants({ size }))}\r\n      />\r\n    </SwitchPrimitive.Root>\r\n  )\r\n})\r\nSwitch.displayName = SwitchPrimitive.Root.displayName\r\n\r\nexport { Switch, switchVariants }",
        "type": "registry:ui",
        "target": "components/ui/switch.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "table",
    "type": "registry:ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/table.tsx",
        "content": "import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst tableVariants = cva(\r\n  \"w-full caption-bottom text-sm\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"text-xs\",\r\n        default: \"text-sm\", \r\n        lg: \"text-base\",\r\n      },\r\n      variant: {\r\n        default: \"\",\r\n        striped: \"[&_tbody_tr:nth-child(odd)]:bg-muted/50\",\r\n        bordered: \"border border-border\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst tableHeaderVariants = cva(\r\n  \"\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"[&_tr]:h-8\",\r\n        default: \"[&_tr]:h-10\",\r\n        lg: \"[&_tr]:h-12\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst tableBodyVariants = cva(\r\n  \"\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"[&_tr]:h-8\",\r\n        default: \"[&_tr]:h-10\", \r\n        lg: \"[&_tr]:h-12\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst tableRowVariants = cva(\r\n  \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"\",\r\n        bordered: \"border-l border-r border-border first:border-l-0 last:border-r-0\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst tableHeadVariants = cva(\r\n  \"text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-8 px-2\",\r\n        default: \"h-10 px-4\",\r\n        lg: \"h-12 px-6\",\r\n      },\r\n      sortable: {\r\n        true: \"cursor-pointer select-none hover:text-foreground\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      sortable: false,\r\n    },\r\n  }\r\n)\r\n\r\nconst tableCellVariants = cva(\r\n  \"align-middle [&:has([role=checkbox])]:pr-0\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"p-2\",\r\n        default: \"p-4\",\r\n        lg: \"p-6\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface TableProps\r\n  extends React.TableHTMLAttributes<HTMLTableElement>,\r\n    VariantProps<typeof tableVariants> {}\r\n\r\nexport interface TableHeaderProps\r\n  extends React.HTMLAttributes<HTMLTableSectionElement>,\r\n    VariantProps<typeof tableHeaderVariants> {}\r\n\r\nexport interface TableBodyProps\r\n  extends React.HTMLAttributes<HTMLTableSectionElement>,\r\n    VariantProps<typeof tableBodyVariants> {}\r\n\r\nexport interface TableRowProps\r\n  extends React.HTMLAttributes<HTMLTableRowElement>,\r\n    VariantProps<typeof tableRowVariants> {}\r\n\r\nexport interface TableHeadProps\r\n  extends React.ThHTMLAttributes<HTMLTableCellElement>,\r\n    VariantProps<typeof tableHeadVariants> {\r\n  sortable?: boolean\r\n  sortDirection?: \"asc\" | \"desc\" | null\r\n  onSort?: () => void\r\n}\r\n\r\nexport interface TableCellProps\r\n  extends React.TdHTMLAttributes<HTMLTableCellElement>,\r\n    VariantProps<typeof tableCellVariants> {}\r\n\r\nconst Table = React.forwardRef<HTMLTableElement, TableProps>(\r\n  ({ className, size, variant, ...props }, ref) => (\r\n    <div className=\"relative w-full overflow-auto\">\r\n      <table\r\n        ref={ref}\r\n        className={cn(tableVariants({ size, variant, className }))}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n)\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<HTMLTableSectionElement, TableHeaderProps>(\r\n  ({ className, size, ...props }, ref) => (\r\n    <thead\r\n      ref={ref}\r\n      className={cn(tableHeaderVariants({ size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<HTMLTableSectionElement, TableBodyProps>(\r\n  ({ className, size, ...props }, ref) => (\r\n    <tbody\r\n      ref={ref}\r\n      className={cn(tableBodyVariants({ size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<HTMLTableRowElement, TableRowProps>(\r\n  ({ className, variant, ...props }, ref) => (\r\n    <tr\r\n      ref={ref}\r\n      className={cn(tableRowVariants({ variant, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<HTMLTableCellElement, TableHeadProps>(\r\n  ({ className, size, sortable, sortDirection, onSort, children, ...props }, ref) => (\r\n    <th\r\n      ref={ref}\r\n      className={cn(tableHeadVariants({ size, sortable, className }))}\r\n      onClick={sortable ? onSort : undefined}\r\n      role={sortable ? \"button\" : undefined}\r\n      tabIndex={sortable ? 0 : undefined}\r\n      onKeyDown={\r\n        sortable\r\n          ? (e) => {\r\n              if (e.key === \"Enter\" || e.key === \" \") {\r\n                e.preventDefault()\r\n                onSort?.()\r\n              }\r\n            }\r\n          : undefined\r\n      }\r\n      aria-sort={\r\n        sortable\r\n          ? sortDirection === \"asc\"\r\n            ? \"ascending\"\r\n            : sortDirection === \"desc\"\r\n            ? \"descending\"\r\n            : \"none\"\r\n          : undefined\r\n      }\r\n      {...props}\r\n    >\r\n      <div className=\"flex items-center gap-2\">\r\n        {children}\r\n        {sortable && (\r\n          <div className=\"flex flex-col\">\r\n            <svg\r\n              className={cn(\r\n                \"h-3 w-3 transition-colors\",\r\n                sortDirection === \"asc\" ? \"text-foreground\" : \"text-muted-foreground/50\"\r\n              )}\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n            <svg\r\n              className={cn(\r\n                \"h-3 w-3 -mt-1 transition-colors\",\r\n                sortDirection === \"desc\" ? \"text-foreground\" : \"text-muted-foreground/50\"\r\n              )}\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </th>\r\n  )\r\n)\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<HTMLTableCellElement, TableCellProps>(\r\n  ({ className, size, ...props }, ref) => (\r\n    <td\r\n      ref={ref}\r\n      className={cn(tableCellVariants({ size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n  tableVariants,\r\n  tableHeadVariants,\r\n  tableCellVariants,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/table.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "variants"
    ]
  },
  {
    "name": "tabs",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-tabs"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/tabs.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }",
        "type": "registry:ui",
        "target": "components/ui/tabs.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "client",
      "radix"
    ]
  },
  {
    "name": "textarea",
    "type": "registry:ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/textarea.tsx",
        "content": "import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst textareaVariants = cva(\r\n  \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"min-h-[60px] px-2 py-1 text-xs\",\r\n        default: \"min-h-[80px] px-3 py-2 text-sm\",\r\n        lg: \"min-h-[120px] px-4 py-3 text-base\",\r\n      },\r\n      resize: {\r\n        none: \"resize-none\",\r\n        both: \"resize\",\r\n        horizontal: \"resize-x\",\r\n        vertical: \"resize-y\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      resize: \"vertical\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n    VariantProps<typeof textareaVariants> {\r\n  autoResize?: boolean\r\n  minRows?: number\r\n  maxRows?: number\r\n  characterCount?: boolean\r\n  maxLength?: number\r\n}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  (\r\n    {\r\n      className,\r\n      size,\r\n      resize,\r\n      autoResize = false,\r\n      minRows = 3,\r\n      maxRows,\r\n      characterCount = false,\r\n      maxLength,\r\n      value,\r\n      onChange,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalValue, setInternalValue] = React.useState(value || \"\")\r\n    const textareaRef = React.useRef<HTMLTextAreaElement | null>(null)\r\n    const mergedRef = React.useMemo(\r\n      () => (node: HTMLTextAreaElement) => {\r\n        textareaRef.current = node\r\n        if (typeof ref === \"function\") {\r\n          ref(node)\r\n        } else if (ref && \"current\" in ref) {\r\n          ;(ref as React.MutableRefObject<HTMLTextAreaElement | null>).current = node\r\n        }\r\n      },\r\n      [ref]\r\n    )\r\n\r\n    // Auto-resize functionality\r\n    const adjustHeight = React.useCallback(() => {\r\n      const textarea = textareaRef.current\r\n      if (!textarea || !autoResize) return\r\n\r\n      textarea.style.height = \"auto\"\r\n      const scrollHeight = textarea.scrollHeight\r\n      \r\n      let newHeight = scrollHeight\r\n      \r\n      if (minRows) {\r\n        const lineHeight = parseInt(getComputedStyle(textarea).lineHeight)\r\n        const minHeight = lineHeight * minRows\r\n        newHeight = Math.max(newHeight, minHeight)\r\n      }\r\n      \r\n      if (maxRows) {\r\n        const lineHeight = parseInt(getComputedStyle(textarea).lineHeight)\r\n        const maxHeight = lineHeight * maxRows\r\n        newHeight = Math.min(newHeight, maxHeight)\r\n      }\r\n      \r\n      textarea.style.height = `${newHeight}px`\r\n    }, [autoResize, minRows, maxRows])\r\n\r\n    // Handle value changes\r\n    const handleChange = React.useCallback(\r\n      (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newValue = e.target.value\r\n        setInternalValue(newValue)\r\n        onChange?.(e)\r\n        \r\n        if (autoResize) {\r\n          // Use setTimeout to ensure the value is set before adjusting height\r\n          setTimeout(adjustHeight, 0)\r\n        }\r\n      },\r\n      [onChange, autoResize, adjustHeight]\r\n    )\r\n\r\n    // Adjust height on mount and when value changes externally\r\n    React.useEffect(() => {\r\n      if (autoResize) {\r\n        adjustHeight()\r\n      }\r\n    }, [autoResize, adjustHeight, value])\r\n\r\n    // Update internal value when value prop changes\r\n    React.useEffect(() => {\r\n      if (value !== undefined) {\r\n        setInternalValue(value as string)\r\n      }\r\n    }, [value])\r\n\r\n    const currentValue = value !== undefined ? value : internalValue\r\n    const charCount = typeof currentValue === \"string\" ? currentValue.length : 0\r\n\r\n    return (\r\n      <div className=\"relative w-full\">\r\n        <textarea\r\n          className={cn(\r\n            textareaVariants({ size, resize: autoResize ? \"none\" : resize }),\r\n            autoResize && \"overflow-hidden\",\r\n            className\r\n          )}\r\n          ref={mergedRef}\r\n          value={currentValue}\r\n          onChange={handleChange}\r\n          maxLength={maxLength}\r\n          {...props}\r\n        />\r\n        {characterCount && (\r\n          <div className=\"absolute bottom-2 right-2 text-xs text-muted-foreground\">\r\n            {charCount}\r\n            {maxLength && `/${maxLength}`}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea, textareaVariants }",
        "type": "registry:ui",
        "target": "components/ui/textarea.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "variants"
    ]
  },
  {
    "name": "tooltip",
    "type": "registry:ui",
    "dependencies": [
      "@radix-ui/react-tooltip",
      "class-variance-authority"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/ui/tooltip.tsx",
        "content": "import * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst tooltipContentVariants = cva(\r\n  \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-popover text-popover-foreground border\",\r\n        inverse: \"bg-primary text-primary-foreground border-primary\",\r\n        destructive: \"bg-destructive text-destructive-foreground border-destructive\",\r\n        success: \"bg-green-600 text-white border-green-600\",\r\n        warning: \"bg-yellow-600 text-white border-yellow-600\",\r\n      },\r\n      size: {\r\n        sm: \"px-2 py-1 text-xs\",\r\n        default: \"px-3 py-1.5 text-sm\",\r\n        lg: \"px-4 py-2 text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface TooltipContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>,\r\n    VariantProps<typeof tooltipContentVariants> {\r\n  sideOffset?: number\r\n}\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  TooltipContentProps\r\n>(({ className, sideOffset = 4, variant, size, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(tooltipContentVariants({ variant, size, className }))}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nconst TooltipArrow = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Arrow>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Arrow>\r\n>(({ className, ...props }, ref) => (\r\n  <TooltipPrimitive.Arrow\r\n    ref={ref}\r\n    className={cn(\"fill-popover\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTooltipArrow.displayName = TooltipPrimitive.Arrow.displayName\r\n\r\nexport {\r\n  Tooltip,\r\n  TooltipTrigger,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipArrow,\r\n  tooltipContentVariants,\r\n}",
        "type": "registry:ui",
        "target": "components/ui/tooltip.tsx"
      }
    ],
    "category": "ui",
    "tags": [
      "forwardRef",
      "radix",
      "variants"
    ]
  },
  {
    "name": "access-matrix-simple.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/access-matrix-simple.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { AccessMatrix, type AccessMatrixData } from \"@lightmind/ui\"\r\n\r\nconst data: AccessMatrixData = {\r\n  rows: [\r\n    { id: \"read\", label: \"Read\" },\r\n    { id: \"write\", label: \"Write\" },\r\n  ],\r\n  columns: [\r\n    { id: \"user\", label: \"User\" },\r\n    { id: \"admin\", label: \"Admin\" },\r\n  ],\r\n  cells: {\r\n    read: { user: { value: \"allowed\" }, admin: { value: \"allowed\" } },\r\n    write: { user: { value: \"denied\" }, admin: { value: \"allowed\" } },\r\n  },\r\n}\r\n\r\nexport function AccessMatrixSimpleDemo() {\r\n  const [matrixData, setMatrixData] = React.useState(data)\r\n  \r\n  return (\r\n    <AccessMatrix\r\n      data={matrixData}\r\n      onCellChange={(rowId, colId, value) => {\r\n        setMatrixData(prev => ({\r\n          ...prev,\r\n          cells: {\r\n            ...prev.cells,\r\n            [rowId]: {\r\n              ...prev.cells[rowId],\r\n              [colId]: { value }\r\n            }\r\n          }\r\n        }))\r\n      }}\r\n    />\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "access-matrix.demo",
    "type": "registry:example",
    "dependencies": [
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/access-matrix.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  AccessMatrix, \r\n  type AccessMatrixData, \r\n  type PermissionType,\r\n} from \"@lightmind/ui\"\r\nimport { Check, X, Shield, ArrowLeftRight, Ban, CheckCircle2, Activity } from \"lucide-react\"\r\n\r\n// Firewall Rules Matrix\r\nconst firewallData: AccessMatrixData = {\r\n  rows: [\r\n    { id: \"internal\", label: \"Internal\", description: \"Internal network zone\" },\r\n    { id: \"external\", label: \"External\", description: \"External/Internet zone\" },\r\n    { id: \"gateway\", label: \"Gateway\", description: \"Gateway/Router zone\" },\r\n    { id: \"vpn\", label: \"VPN\", description: \"VPN client zone\" },\r\n    { id: \"hotspot\", label: \"Hotspot\", description: \"Guest WiFi zone\" },\r\n    { id: \"dmz\", label: \"DMZ\", description: \"Demilitarized zone\" },\r\n  ],\r\n  columns: [\r\n    { id: \"internal\", label: \"Internal\" },\r\n    { id: \"external\", label: \"External\" },\r\n    { id: \"gateway\", label: \"Gateway\" },\r\n    { id: \"vpn\", label: \"VPN\" },\r\n    { id: \"hotspot\", label: \"Hotspot\" },\r\n    { id: \"dmz\", label: \"DMZ\" },\r\n  ],\r\n  cells: {\r\n    internal: { \r\n      internal: { value: \"allow-all\" }, \r\n      external: { value: \"policy\" }, \r\n      gateway: { value: \"allow-all\" }, \r\n      vpn: { value: \"allow-all\" }, \r\n      hotspot: { value: \"block\" }, \r\n      dmz: { value: \"policy\" } \r\n    },\r\n    external: { \r\n      internal: { value: \"return\" }, \r\n      external: { value: \"block\" }, \r\n      gateway: { value: \"return\" }, \r\n      vpn: { value: \"block\" }, \r\n      hotspot: { value: \"block\" }, \r\n      dmz: { value: \"policy\" } \r\n    },\r\n    gateway: { \r\n      internal: { value: \"allow-all\" }, \r\n      external: { value: \"policy\" }, \r\n      gateway: { value: \"allow-all\" }, \r\n      vpn: { value: \"allow-all\" }, \r\n      hotspot: { value: \"policy\" }, \r\n      dmz: { value: \"policy\" } \r\n    },\r\n    vpn: { \r\n      internal: { value: \"allow-all\" }, \r\n      external: { value: \"block\" }, \r\n      gateway: { value: \"allow-all\" }, \r\n      vpn: { value: \"allow-all\" }, \r\n      hotspot: { value: \"block\" }, \r\n      dmz: { value: \"block\" } \r\n    },\r\n    hotspot: { \r\n      internal: { value: \"block\" }, \r\n      external: { value: \"policy\" }, \r\n      gateway: { value: \"policy\" }, \r\n      vpn: { value: \"block\" }, \r\n      hotspot: { value: \"allow-all\" }, \r\n      dmz: { value: \"block\" } \r\n    },\r\n    dmz: { \r\n      internal: { value: \"return\" }, \r\n      external: { value: \"policy\" }, \r\n      gateway: { value: \"policy\" }, \r\n      vpn: { value: \"block\" }, \r\n      hotspot: { value: \"block\" }, \r\n      dmz: { value: \"allow-all\" } \r\n    },\r\n  }\r\n}\r\n\r\nconst firewallPermissions: PermissionType[] = [\r\n  { value: \"allow-all\", label: \"Allow All\", color: \"hsl(142 71% 45%)\", backgroundColor: \"hsl(142 71% 45% / 0.15)\", icon: <CheckCircle2 className=\"h-4 w-4\" /> },\r\n  { value: \"policy\", label: \"Policies\", color: \"hsl(217 91% 60%)\", backgroundColor: \"hsl(217 91% 60% / 0.15)\", icon: <Shield className=\"h-4 w-4\" /> },\r\n  { value: \"return\", label: \"Return Traffic\", color: \"hsl(38 92% 50%)\", backgroundColor: \"hsl(38 92% 50% / 0.15)\", icon: <ArrowLeftRight className=\"h-4 w-4\" /> },\r\n  { value: \"block\", label: \"Block All\", color: \"hsl(0 84% 60%)\", backgroundColor: \"hsl(0 84% 60% / 0.15)\", icon: <Ban className=\"h-4 w-4\" /> },\r\n]\r\n\r\n// NAS File Share ACL\r\nconst nasData: AccessMatrixData = {\r\n  rows: [\r\n    { id: \"documents\", label: \"Documents\", description: \"Shared documents folder\" },\r\n    { id: \"media\", label: \"Media Library\", description: \"Photos, videos, music\" },\r\n    { id: \"backups\", label: \"Backups\", description: \"System and user backups\" },\r\n    { id: \"software\", label: \"Software\", description: \"Applications and installers\" },\r\n    { id: \"personal\", label: \"Personal Folders\", description: \"User home directories\" },\r\n    { id: \"archive\", label: \"Archive\", description: \"Old project files\" },\r\n  ],\r\n  columns: [\r\n    { id: \"admin\", label: \"Admin\", description: \"System administrators\" },\r\n    { id: \"users\", label: \"Users\", description: \"Regular users\" },\r\n    { id: \"guests\", label: \"Guests\", description: \"Guest access\" },\r\n    { id: \"backup-service\", label: \"Backup Service\", description: \"Automated backup\" },\r\n    { id: \"media-server\", label: \"Media Server\", description: \"Plex/Jellyfin\" },\r\n  ],\r\n  cells: {\r\n    documents: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"read-write\" },\r\n      guests: { value: \"read\" },\r\n      \"backup-service\": { value: \"read\" },\r\n      \"media-server\": { value: \"deny\" },\r\n    },\r\n    media: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"read-write\" },\r\n      guests: { value: \"read\" },\r\n      \"backup-service\": { value: \"read\" },\r\n      \"media-server\": { value: \"read\" },\r\n    },\r\n    backups: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"deny\" },\r\n      guests: { value: \"deny\" },\r\n      \"backup-service\": { value: \"read-write\" },\r\n      \"media-server\": { value: \"deny\" },\r\n    },\r\n    software: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"read\" },\r\n      guests: { value: \"deny\" },\r\n      \"backup-service\": { value: \"read\" },\r\n      \"media-server\": { value: \"deny\" },\r\n    },\r\n    personal: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"owner\" },\r\n      guests: { value: \"deny\" },\r\n      \"backup-service\": { value: \"read\" },\r\n      \"media-server\": { value: \"deny\" },\r\n    },\r\n    archive: {\r\n      admin: { value: \"read-write\" },\r\n      users: { value: \"read\" },\r\n      guests: { value: \"deny\" },\r\n      \"backup-service\": { value: \"read\" },\r\n      \"media-server\": { value: \"deny\" },\r\n    },\r\n  }\r\n}\r\n\r\nconst nasPermissions: PermissionType[] = [\r\n  { value: \"read-write\", label: \"Read/Write\", color: \"hsl(142 71% 45%)\", backgroundColor: \"hsl(142 71% 45% / 0.15)\", icon: <Check className=\"h-4 w-4\" /> },\r\n  { value: \"read\", label: \"Read Only\", color: \"hsl(217 91% 60%)\", backgroundColor: \"hsl(217 91% 60% / 0.15)\", icon: <Shield className=\"h-4 w-4\" /> },\r\n  { value: \"owner\", label: \"Owner Only\", color: \"hsl(38 92% 50%)\", backgroundColor: \"hsl(38 92% 50% / 0.15)\", icon: <Activity className=\"h-4 w-4\" /> },\r\n  { value: \"deny\", label: \"No Access\", color: \"hsl(0 84% 60%)\", backgroundColor: \"hsl(0 84% 60% / 0.15)\", icon: <X className=\"h-4 w-4\" /> },\r\n]\r\n\r\n// Audio Routing Matrix (Flipped - outputs as rows, inputs as columns)\r\nconst audioData: AccessMatrixData = {\r\n  rows: [\r\n    { id: \"headphones\", label: \"Headphones\", description: \"Main headphone output\" },\r\n    { id: \"stream\", label: \"Broadcast Stream Mix\", description: \"Streaming software mix\" },\r\n    { id: \"line-out\", label: \"Line Out\", description: \"Line output\" },\r\n    { id: \"chat-mic\", label: \"Chat Mic\", description: \"Voice chat microphone\" },\r\n  ],\r\n  columns: [\r\n    { id: \"mic\", label: \"Mic\", description: \"Microphone input\" },\r\n    { id: \"chat\", label: \"Chat\", description: \"Voice chat audio\" },\r\n    { id: \"music\", label: \"Music\", description: \"Music/Media playback\" },\r\n    { id: \"game\", label: \"Game\", description: \"Game audio\" },\r\n    { id: \"console\", label: \"Console\", description: \"Console input\" },\r\n    { id: \"line-in\", label: \"Line In\", description: \"Line input\" },\r\n    { id: \"system\", label: \"System\", description: \"System sounds\" },\r\n    { id: \"samples\", label: \"Samples\", description: \"Sample pad/soundboard\" },\r\n  ],\r\n  cells: {\r\n    headphones: {\r\n      mic: { value: \"monitor\" },\r\n      chat: { value: \"on\" },\r\n      music: { value: \"on\" },\r\n      game: { value: \"on\" },\r\n      console: { value: \"on\" },\r\n      \"line-in\": { value: \"monitor\" },\r\n      system: { value: \"on\" },\r\n      samples: { value: \"on\" },\r\n    },\r\n    stream: {\r\n      mic: { value: \"on\" },\r\n      chat: { value: \"off\" },\r\n      music: { value: \"on\" },\r\n      game: { value: \"on\" },\r\n      console: { value: \"on\" },\r\n      \"line-in\": { value: \"off\" },\r\n      system: { value: \"off\" },\r\n      samples: { value: \"on\" },\r\n    },\r\n    \"line-out\": {\r\n      mic: { value: \"off\" },\r\n      chat: { value: \"off\" },\r\n      music: { value: \"on\" },\r\n      game: { value: \"off\" },\r\n      console: { value: \"off\" },\r\n      \"line-in\": { value: \"off\" },\r\n      system: { value: \"on\" },\r\n      samples: { value: \"off\" },\r\n    },\r\n    \"chat-mic\": {\r\n      mic: { value: \"on\" },\r\n      chat: { value: \"off\" },\r\n      music: { value: \"off\" },\r\n      game: { value: \"off\" },\r\n      console: { value: \"off\" },\r\n      \"line-in\": { value: \"off\" },\r\n      system: { value: \"off\" },\r\n      samples: { value: \"off\" },\r\n    },\r\n  }\r\n}\r\n\r\nconst audioPermissions: PermissionType[] = [\r\n  { value: \"on\", label: \"On\", color: \"hsl(142 71% 45%)\", backgroundColor: \"hsl(142 71% 45% / 0.15)\", icon: <CheckCircle2 className=\"h-4 w-4\" /> },\r\n  { value: \"monitor\", label: \"Monitor\", color: \"hsl(280 65% 60%)\", backgroundColor: \"hsl(280 65% 60% / 0.15)\", icon: <Activity className=\"h-4 w-4\" /> },\r\n  { value: \"off\", label: \"Off\", color: \"hsl(var(--muted-foreground))\", backgroundColor: \"hsl(var(--muted))\", icon: <X className=\"h-4 w-4\" /> },\r\n]\r\n\r\nexport function AccessMatrixDemo() {\r\n  const [firewallMatrix, setFirewallMatrix] = React.useState<AccessMatrixData>(firewallData)\r\n  const [nasMatrix, setNasMatrix] = React.useState<AccessMatrixData>(nasData)\r\n  const [audioMatrix, setAudioMatrix] = React.useState<AccessMatrixData>(audioData)\r\n\r\n  const handleFirewallChange = (rowId: string, columnId: string, newValue: string) => {\r\n    setFirewallMatrix((prevData) => ({\r\n      ...prevData,\r\n      cells: {\r\n        ...prevData.cells,\r\n        [rowId]: {\r\n          ...prevData.cells[rowId],\r\n          [columnId]: { value: newValue },\r\n        },\r\n      },\r\n    }))\r\n  }\r\n\r\n  const handleNasChange = (rowId: string, columnId: string, newValue: string) => {\r\n    setNasMatrix((prevData) => ({\r\n      ...prevData,\r\n      cells: {\r\n        ...prevData.cells,\r\n        [rowId]: {\r\n          ...prevData.cells[rowId],\r\n          [columnId]: { value: newValue },\r\n        },\r\n      },\r\n    }))\r\n  }\r\n\r\n  const handleAudioChange = (rowId: string, columnId: string, newValue: string) => {\r\n    setAudioMatrix((prevData) => ({\r\n      ...prevData,\r\n      cells: {\r\n        ...prevData.cells,\r\n        [rowId]: {\r\n          ...prevData.cells[rowId],\r\n          [columnId]: { value: newValue },\r\n        },\r\n      },\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-12\">\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Firewall Zone Matrix</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Configure traffic flow between network zones\r\n        </p>\r\n        <AccessMatrix\r\n          data={firewallMatrix}\r\n          permissions={firewallPermissions}\r\n          onCellChange={handleFirewallChange}\r\n          clickBehavior=\"cycle\"\r\n          defaultValue=\"block\"\r\n          displayMode=\"text\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">NAS File Share Permissions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Manage access rights for shared folders\r\n        </p>\r\n        <AccessMatrix\r\n          data={nasMatrix}\r\n          permissions={nasPermissions}\r\n          onCellChange={handleNasChange}\r\n          clickBehavior=\"cycle\"\r\n          defaultValue=\"deny\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Audio Routing Matrix</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Configure audio sources and output destinations\r\n        </p>\r\n        <AccessMatrix\r\n          data={audioMatrix}\r\n          permissions={audioPermissions}\r\n          onCellChange={handleAudioChange}\r\n          clickBehavior=\"cycle\"\r\n          defaultValue=\"off\"\r\n          rowTitle=\"Outputs\"\r\n          columnTitle=\"Audio Sources\"\r\n          verticalHeaders={true}\r\n          isHidden={(rowId, columnId) => rowId === \"chat-mic\" && columnId === \"chat\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "alert.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/alert.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Alert, AlertDescription, AlertTitle } from \"@lightmind/ui\"\r\nimport { \r\n  AlertCircle, \r\n  AlertTriangle, \r\n  CheckCircle2, \r\n  Info, \r\n  Terminal,\r\n  Zap,\r\n  Bell,\r\n  Shield,\r\n  Rocket,\r\n  Heart,\r\n  Star,\r\n  Sparkles,\r\n  Activity,\r\n  Coffee,\r\n  Download,\r\n  AlertOctagon,\r\n  XCircle,\r\n  ShieldCheck,\r\n  BellRing,\r\n  MessageSquare,\r\n  ArrowRight\r\n} from \"lucide-react\"\r\nimport { Button } from \"@lightmind/ui\"\r\n\r\nexport function AlertDemo() {\r\n  const [dismissedAlerts, setDismissedAlerts] = React.useState<Set<string>>(new Set())\r\n  \r\n  const handleDismiss = (alertId: string) => {\r\n    setDismissedAlerts(prev => new Set(prev).add(alertId))\r\n  }\r\n\r\n  const resetDismissed = () => {\r\n    setDismissedAlerts(new Set())\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Alert Variants */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Alert Variants</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Five distinct visual styles for different types of messages\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert>\r\n            <Terminal className=\"h-4 w-4\" />\r\n            <AlertTitle>Default Alert</AlertTitle>\r\n            <AlertDescription>\r\n              This is a default alert with neutral styling for general information.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"destructive\">\r\n            <AlertOctagon className=\"h-4 w-4\" />\r\n            <AlertTitle>Destructive Alert</AlertTitle>\r\n            <AlertDescription>\r\n              This alert indicates a destructive action or critical error that requires attention.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"warning\">\r\n            <AlertTriangle className=\"h-4 w-4\" />\r\n            <AlertTitle>Warning Alert</AlertTitle>\r\n            <AlertDescription>\r\n              This alert warns users about potentially problematic situations or actions.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"success\">\r\n            <CheckCircle2 className=\"h-4 w-4\" />\r\n            <AlertTitle>Success Alert</AlertTitle>\r\n            <AlertDescription>\r\n              This alert confirms successful operations or positive outcomes.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"info\">\r\n            <Info className=\"h-4 w-4\" />\r\n            <AlertTitle>Info Alert</AlertTitle>\r\n            <AlertDescription>\r\n              This alert provides helpful information or tips to the user.\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Alert Sizes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Alert Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Three size options for different contexts\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert size=\"sm\" variant=\"info\">\r\n            <Info className=\"h-3 w-3\" />\r\n            <AlertTitle>Small Alert</AlertTitle>\r\n            <AlertDescription>\r\n              Compact alert for constrained spaces.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert size=\"default\" variant=\"success\">\r\n            <CheckCircle2 className=\"h-4 w-4\" />\r\n            <AlertTitle>Default Size Alert</AlertTitle>\r\n            <AlertDescription>\r\n              Standard alert size suitable for most use cases.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert size=\"lg\" variant=\"warning\">\r\n            <AlertTriangle className=\"h-5 w-5\" />\r\n            <AlertTitle>Large Alert</AlertTitle>\r\n            <AlertDescription>\r\n              Larger alert with more prominent text for important messages.\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Title Only Alerts */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Title Only Alerts</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple alerts with just a title for brief messages\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert>\r\n            <Rocket className=\"h-4 w-4\" />\r\n            <AlertTitle>Your deployment is now live!</AlertTitle>\r\n          </Alert>\r\n\r\n          <Alert variant=\"destructive\">\r\n            <XCircle className=\"h-4 w-4\" />\r\n            <AlertTitle>Payment failed - please try again</AlertTitle>\r\n          </Alert>\r\n\r\n          <Alert variant=\"success\">\r\n            <CheckCircle2 className=\"h-4 w-4\" />\r\n            <AlertTitle>Changes saved successfully</AlertTitle>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Custom Icons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Custom Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Alerts with different icons to match your content\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert>\r\n            <Zap className=\"h-4 w-4\" />\r\n            <AlertTitle>Performance Update</AlertTitle>\r\n            <AlertDescription>\r\n              Your app is now 50% faster after the latest optimization.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"info\">\r\n            <Bell className=\"h-4 w-4\" />\r\n            <AlertTitle>New Notifications</AlertTitle>\r\n            <AlertDescription>\r\n              You have 3 unread messages in your inbox.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"success\">\r\n            <Shield className=\"h-4 w-4\" />\r\n            <AlertTitle>Security Status</AlertTitle>\r\n            <AlertDescription>\r\n              All systems are secure and running normally.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"warning\">\r\n            <Coffee className=\"h-4 w-4\" />\r\n            <AlertTitle>Maintenance Mode</AlertTitle>\r\n            <AlertDescription>\r\n              The system will be down for maintenance from 2-4 AM.\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Alerts with Actions */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Alerts with Actions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Include actionable buttons within alerts\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert>\r\n            <Download className=\"h-4 w-4\" />\r\n            <AlertTitle>Update Available</AlertTitle>\r\n            <AlertDescription>\r\n              <span className=\"block mb-2\">\r\n                A new version of the application is available. Download now to get the latest features.\r\n              </span>\r\n              <div className=\"flex gap-2\">\r\n                <Button size=\"sm\">Download Update</Button>\r\n                <Button size=\"sm\" variant=\"outline\">Learn More</Button>\r\n              </div>\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"warning\">\r\n            <AlertTriangle className=\"h-4 w-4\" />\r\n            <AlertTitle>Subscription Expiring</AlertTitle>\r\n            <AlertDescription>\r\n              <span className=\"block mb-2\">\r\n                Your subscription will expire in 7 days. Renew now to avoid service interruption.\r\n              </span>\r\n              <div className=\"flex gap-2\">\r\n                <Button size=\"sm\" variant=\"default\">\r\n                  Renew Subscription\r\n                </Button>\r\n                <Button size=\"sm\" variant=\"ghost\">\r\n                  Remind Me Later\r\n                </Button>\r\n              </div>\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"info\">\r\n            <Sparkles className=\"h-4 w-4\" />\r\n            <AlertTitle>New Feature</AlertTitle>\r\n            <AlertDescription>\r\n              <span className=\"block mb-2\">\r\n                Try our new AI-powered search feature for faster results.\r\n              </span>\r\n              <Button size=\"sm\" variant=\"outline\">\r\n                Try it now\r\n                <ArrowRight className=\"ml-2 h-3 w-3\" />\r\n              </Button>\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dismissible Alerts */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Dismissible Alerts</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Alerts that users can dismiss when no longer needed\r\n        </p>\r\n        {dismissedAlerts.size > 0 && (\r\n          <Button onClick={resetDismissed} variant=\"outline\" size=\"sm\" className=\"mb-4\">\r\n            Reset dismissed alerts\r\n          </Button>\r\n        )}\r\n        <div className=\"space-y-4\">\r\n          {!dismissedAlerts.has('promo') && (\r\n            <Alert dismissible onDismiss={() => handleDismiss('promo')}>\r\n              <Star className=\"h-4 w-4\" />\r\n              <AlertTitle>Special Offer</AlertTitle>\r\n              <AlertDescription>\r\n                Get 20% off your first purchase with code WELCOME20\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {!dismissedAlerts.has('tip') && (\r\n            <Alert variant=\"info\" dismissible onDismiss={() => handleDismiss('tip')}>\r\n              <Activity className=\"h-4 w-4\" />\r\n              <AlertTitle>Pro Tip</AlertTitle>\r\n              <AlertDescription>\r\n                Press Ctrl+K to open the command palette for quick navigation\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {!dismissedAlerts.has('welcome') && (\r\n            <Alert variant=\"success\" dismissible onDismiss={() => handleDismiss('welcome')}>\r\n              <Heart className=\"h-4 w-4\" />\r\n              <AlertTitle>Welcome!</AlertTitle>\r\n              <AlertDescription>\r\n                Thanks for joining us. Check your email for a welcome gift.\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Complex Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Complex Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Real-world alert patterns and use cases\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <Alert>\r\n            <ShieldCheck className=\"h-4 w-4\" />\r\n            <AlertTitle>Security Alert</AlertTitle>\r\n            <AlertDescription>\r\n              <div className=\"space-y-2\">\r\n                <p>We noticed a new login from an unrecognized device:</p>\r\n                <div className=\"text-sm bg-muted rounded p-2\">\r\n                  <div>Device: Chrome on Windows</div>\r\n                  <div>Location: New York, USA</div>\r\n                  <div>Time: 2 minutes ago</div>\r\n                </div>\r\n                <div className=\"flex gap-2 pt-2\">\r\n                  <Button size=\"sm\" variant=\"default\">Yes, it was me</Button>\r\n                  <Button size=\"sm\" variant=\"destructive\">Not me</Button>\r\n                </div>\r\n              </div>\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"info\">\r\n            <MessageSquare className=\"h-4 w-4\" />\r\n            <AlertTitle>Survey Request</AlertTitle>\r\n            <AlertDescription>\r\n              <div className=\"space-y-2\">\r\n                <p>Help us improve! How would you rate your experience?</p>\r\n                <div className=\"flex gap-1\">\r\n                  {[1, 2, 3, 4, 5].map((rating) => (\r\n                    <Button key={rating} size=\"sm\" variant=\"outline\">\r\n                      <Star className=\"h-3 w-3\" />\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <Alert variant=\"warning\" dismissible>\r\n            <BellRing className=\"h-4 w-4\" />\r\n            <AlertTitle>Scheduled Maintenance</AlertTitle>\r\n            <AlertDescription>\r\n              <div className=\"space-y-2\">\r\n                <p>Our services will be temporarily unavailable due to scheduled maintenance:</p>\r\n                <ul className=\"list-disc list-inside text-sm space-y-1\">\r\n                  <li>Date: Sunday, March 24, 2024</li>\r\n                  <li>Time: 2:00 AM - 4:00 AM EST</li>\r\n                  <li>Affected Services: API, Dashboard, Reports</li>\r\n                </ul>\r\n                <p className=\"text-sm pt-2\">\r\n                  We apologize for any inconvenience. For urgent matters, please contact support.\r\n                </p>\r\n              </div>\r\n            </AlertDescription>\r\n          </Alert>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "badge.demo",
    "type": "registry:example",
    "dependencies": [
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/badge.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Badge } from \"@lightmind/ui\"\r\nimport { \r\n  Check,\r\n  X,\r\n  AlertCircle,\r\n  Clock,\r\n  Star,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  User,\r\n  Users,\r\n  Mail,\r\n  Bell,\r\n  ShoppingCart,\r\n  Package,\r\n  Zap,\r\n  Shield,\r\n  Lock,\r\n  Unlock,\r\n  Coffee,\r\n  Heart,\r\n  MessageSquare,\r\n  Calendar,\r\n  Download,\r\n  Upload,\r\n  Eye,\r\n  EyeOff,\r\n  Sparkles,\r\n  Rocket,\r\n  Bug,\r\n  GitBranch,\r\n  GitCommit,\r\n  GitPullRequest,\r\n  Circle,\r\n  CheckCircle2,\r\n  XCircle,\r\n  AlertTriangle,\r\n  Info,\r\n  Activity,\r\n  Wifi,\r\n  WifiOff,\r\n  Cloud,\r\n  CloudOff,\r\n  Server,\r\n  Database,\r\n  Code,\r\n  FileText,\r\n  Image,\r\n  Video,\r\n  Music,\r\n  DollarSign,\r\n  CreditCard,\r\n  Tag,\r\n  Hash,\r\n  AtSign,\r\n  Phone,\r\n  MapPin,\r\n  Globe,\r\n  Award,\r\n  Trophy,\r\n  Flag,\r\n  Bookmark,\r\n  Archive,\r\n  Inbox,\r\n  Send,\r\n  ExternalLink,\r\n  Link,\r\n  Paperclip,\r\n  Timer,\r\n  RefreshCw,\r\n  RotateCw,\r\n  Loader2,\r\n  MoreHorizontal\r\n} from \"lucide-react\"\r\nimport { Button } from \"@lightmind/ui\"\r\n\r\nexport function BadgeDemo() {\r\n  const [notificationCount, setNotificationCount] = React.useState(5)\r\n  const [cartItems, setCartItems] = React.useState(3)\r\n  const [selectedTags, setSelectedTags] = React.useState<string[]>([\"react\", \"typescript\"])\r\n\r\n  const toggleTag = (tag: string) => {\r\n    setSelectedTags(prev => \r\n      prev.includes(tag) \r\n        ? prev.filter(t => t !== tag)\r\n        : [...prev, tag]\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Badge Variants */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Badge Variants</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Four distinct visual styles for different use cases\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Badge>Default</Badge>\r\n          <Badge variant=\"secondary\">Secondary</Badge>\r\n          <Badge variant=\"destructive\">Destructive</Badge>\r\n          <Badge variant=\"outline\">Outline</Badge>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Badges with Icons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Badges with Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Combine icons with text for enhanced visual communication\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Badge>\r\n              <Check className=\"mr-1 h-3 w-3\" />\r\n              Active\r\n            </Badge>\r\n            <Badge variant=\"secondary\">\r\n              <Clock className=\"mr-1 h-3 w-3\" />\r\n              Pending\r\n            </Badge>\r\n            <Badge variant=\"destructive\">\r\n              <X className=\"mr-1 h-3 w-3\" />\r\n              Failed\r\n            </Badge>\r\n            <Badge variant=\"outline\">\r\n              <AlertCircle className=\"mr-1 h-3 w-3\" />\r\n              Warning\r\n            </Badge>\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Badge variant=\"secondary\">\r\n              <Star className=\"mr-1 h-3 w-3\" />\r\n              Featured\r\n            </Badge>\r\n            <Badge>\r\n              <Zap className=\"mr-1 h-3 w-3\" />\r\n              Pro\r\n            </Badge>\r\n            <Badge variant=\"outline\">\r\n              <Shield className=\"mr-1 h-3 w-3\" />\r\n              Verified\r\n            </Badge>\r\n            <Badge variant=\"secondary\">\r\n              <Sparkles className=\"mr-1 h-3 w-3\" />\r\n              New\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Badges */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Status Badges</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common status indicators for various states\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          {/* Connection Status */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Badge className=\"bg-green-500 hover:bg-green-600\">\r\n              <Circle className=\"mr-1 h-2 w-2 fill-current\" />\r\n              Online\r\n            </Badge>\r\n            <Badge className=\"bg-yellow-500 hover:bg-yellow-600\">\r\n              <Circle className=\"mr-1 h-2 w-2 fill-current\" />\r\n              Away\r\n            </Badge>\r\n            <Badge className=\"bg-red-500 hover:bg-red-600\">\r\n              <Circle className=\"mr-1 h-2 w-2 fill-current\" />\r\n              Busy\r\n            </Badge>\r\n            <Badge variant=\"secondary\">\r\n              <Circle className=\"mr-1 h-2 w-2\" />\r\n              Offline\r\n            </Badge>\r\n          </div>\r\n\r\n          {/* Task Status */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Badge className=\"bg-blue-500 hover:bg-blue-600\">\r\n              <Activity className=\"mr-1 h-3 w-3\" />\r\n              In Progress\r\n            </Badge>\r\n            <Badge className=\"bg-green-500 hover:bg-green-600\">\r\n              <CheckCircle2 className=\"mr-1 h-3 w-3\" />\r\n              Completed\r\n            </Badge>\r\n            <Badge className=\"bg-orange-500 hover:bg-orange-600\">\r\n              <AlertTriangle className=\"mr-1 h-3 w-3\" />\r\n              Review\r\n            </Badge>\r\n            <Badge className=\"bg-red-500 hover:bg-red-600\">\r\n              <XCircle className=\"mr-1 h-3 w-3\" />\r\n              Blocked\r\n            </Badge>\r\n          </div>\r\n\r\n          {/* Server Status */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\r\n              <Wifi className=\"mr-1 h-3 w-3\" />\r\n              Connected\r\n            </Badge>\r\n            <Badge variant=\"outline\" className=\"text-red-600 border-red-600\">\r\n              <WifiOff className=\"mr-1 h-3 w-3\" />\r\n              Disconnected\r\n            </Badge>\r\n            <Badge variant=\"outline\" className=\"text-blue-600 border-blue-600\">\r\n              <Cloud className=\"mr-1 h-3 w-3\" />\r\n              Synced\r\n            </Badge>\r\n            <Badge variant=\"outline\" className=\"text-yellow-600 border-yellow-600\">\r\n              <RefreshCw className=\"mr-1 h-3 w-3\" />\r\n              Syncing\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notification Badges */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Notification Badges</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Badges for displaying counts and notifications\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-wrap items-center gap-6\">\r\n            <div className=\"relative inline-flex\">\r\n              <Button variant=\"ghost\" size=\"icon\">\r\n                <Bell className=\"h-5 w-5\" />\r\n              </Button>\r\n              <Badge className=\"absolute -top-1 -right-1 h-5 w-5 p-0 flex items-center justify-center\">\r\n                {notificationCount}\r\n              </Badge>\r\n            </div>\r\n\r\n            <div className=\"relative inline-flex\">\r\n              <Button variant=\"ghost\" size=\"icon\">\r\n                <Mail className=\"h-5 w-5\" />\r\n              </Button>\r\n              <Badge variant=\"destructive\" className=\"absolute -top-1 -right-1 h-5 w-5 p-0 flex items-center justify-center\">\r\n                2\r\n              </Badge>\r\n            </div>\r\n\r\n            <div className=\"relative inline-flex\">\r\n              <Button variant=\"ghost\" size=\"icon\">\r\n                <ShoppingCart className=\"h-5 w-5\" />\r\n              </Button>\r\n              <Badge variant=\"secondary\" className=\"absolute -top-1 -right-1 h-5 w-5 p-0 flex items-center justify-center\">\r\n                {cartItems}\r\n              </Badge>\r\n            </div>\r\n\r\n            <div className=\"relative inline-flex\">\r\n              <Button variant=\"ghost\" size=\"icon\">\r\n                <MessageSquare className=\"h-5 w-5\" />\r\n              </Button>\r\n              <Badge className=\"absolute -top-1 -right-1 h-2 w-2 p-0 bg-red-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-4\">\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\"\r\n              onClick={() => setNotificationCount(prev => prev + 1)}\r\n            >\r\n              Add Notification\r\n            </Button>\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\"\r\n              onClick={() => setCartItems(prev => prev + 1)}\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n            <Button \r\n              variant=\"ghost\" \r\n              size=\"sm\"\r\n              onClick={() => {\r\n                setNotificationCount(0)\r\n                setCartItems(0)\r\n              }}\r\n            >\r\n              Clear All\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Badge Groups */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Badge Groups</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Collections of related badges\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          {/* Technology Stack */}\r\n          <div>\r\n            <p className=\"text-sm font-medium mb-2\">Technology Stack</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge variant=\"outline\">\r\n                <Code className=\"mr-1 h-3 w-3\" />\r\n                React\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Code className=\"mr-1 h-3 w-3\" />\r\n                TypeScript\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Code className=\"mr-1 h-3 w-3\" />\r\n                Next.js\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Database className=\"mr-1 h-3 w-3\" />\r\n                PostgreSQL\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Server className=\"mr-1 h-3 w-3\" />\r\n                Docker\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* File Types */}\r\n          <div>\r\n            <p className=\"text-sm font-medium mb-2\">Supported File Types</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge variant=\"secondary\">\r\n                <FileText className=\"mr-1 h-3 w-3\" />\r\n                PDF\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Image className=\"mr-1 h-3 w-3\" />\r\n                JPG\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Image className=\"mr-1 h-3 w-3\" />\r\n                PNG\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Video className=\"mr-1 h-3 w-3\" />\r\n                MP4\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Music className=\"mr-1 h-3 w-3\" />\r\n                MP3\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* User Roles */}\r\n          <div>\r\n            <p className=\"text-sm font-medium mb-2\">User Roles & Permissions</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge className=\"bg-purple-500 hover:bg-purple-600\">\r\n                <Shield className=\"mr-1 h-3 w-3\" />\r\n                Admin\r\n              </Badge>\r\n              <Badge className=\"bg-blue-500 hover:bg-blue-600\">\r\n                <User className=\"mr-1 h-3 w-3\" />\r\n                Editor\r\n              </Badge>\r\n              <Badge className=\"bg-green-500 hover:bg-green-600\">\r\n                <Users className=\"mr-1 h-3 w-3\" />\r\n                Contributor\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Eye className=\"mr-1 h-3 w-3\" />\r\n                Viewer\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Interactive Tags */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Interactive Tags</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Clickable badges for filtering and selection\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {[\"react\", \"vue\", \"angular\", \"svelte\", \"typescript\", \"javascript\", \"python\", \"rust\"].map((tag) => (\r\n              <Badge\r\n                key={tag}\r\n                variant={selectedTags.includes(tag) ? \"default\" : \"outline\"}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => toggleTag(tag)}\r\n              >\r\n                <Hash className=\"mr-1 h-3 w-3\" />\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </div>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Selected: {selectedTags.length > 0 ? selectedTags.join(\", \") : \"None\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-world Use Cases */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Use Cases</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Practical examples of badge usage in applications\r\n        </p>\r\n        <div className=\"space-y-6\">\r\n          {/* E-commerce Product Card */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex items-start justify-between mb-2\">\r\n              <h4 className=\"font-semibold\">Premium Headphones</h4>\r\n              <div className=\"flex gap-2\">\r\n                <Badge variant=\"destructive\">\r\n                  <Tag className=\"mr-1 h-3 w-3\" />\r\n                  -30%\r\n                </Badge>\r\n                <Badge>\r\n                  <Sparkles className=\"mr-1 h-3 w-3\" />\r\n                  New\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground mb-3\">\r\n              Wireless noise-cancelling headphones with premium sound quality\r\n            </p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge variant=\"outline\">\r\n                <Package className=\"mr-1 h-3 w-3\" />\r\n                In Stock\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Truck className=\"mr-1 h-3 w-3\" />\r\n                Free Shipping\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <Award className=\"mr-1 h-3 w-3\" />\r\n                Best Seller\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* GitHub-style Issue/PR */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex items-start justify-between mb-2\">\r\n              <h4 className=\"font-semibold\">Fix navigation menu on mobile devices</h4>\r\n              <Badge className=\"bg-green-500 hover:bg-green-600\">\r\n                <GitPullRequest className=\"mr-1 h-3 w-3\" />\r\n                Open\r\n              </Badge>\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground mb-3\">\r\n              The navigation menu doesn't close properly on mobile devices when clicking outside\r\n            </p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge variant=\"outline\" className=\"text-red-600 border-red-600\">\r\n                <Bug className=\"mr-1 h-3 w-3\" />\r\n                bug\r\n              </Badge>\r\n              <Badge variant=\"outline\" className=\"text-orange-600 border-orange-600\">\r\n                <AlertCircle className=\"mr-1 h-3 w-3\" />\r\n                priority: high\r\n              </Badge>\r\n              <Badge variant=\"outline\">\r\n                <GitBranch className=\"mr-1 h-3 w-3\" />\r\n                feature/mobile-nav\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <User className=\"mr-1 h-3 w-3\" />\r\n                assigned\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dashboard Metrics */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <h4 className=\"font-semibold mb-3\">System Health</h4>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              <div className=\"text-center\">\r\n                <Badge className=\"bg-green-500 hover:bg-green-600 mb-1\">\r\n                  <Activity className=\"mr-1 h-3 w-3\" />\r\n                  Operational\r\n                </Badge>\r\n                <p className=\"text-xs text-muted-foreground\">API Status</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Badge className=\"bg-green-500 hover:bg-green-600 mb-1\">\r\n                  <TrendingUp className=\"mr-1 h-3 w-3\" />\r\n                  99.9%\r\n                </Badge>\r\n                <p className=\"text-xs text-muted-foreground\">Uptime</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Badge variant=\"secondary\" className=\"mb-1\">\r\n                  <Timer className=\"mr-1 h-3 w-3\" />\r\n                  45ms\r\n                </Badge>\r\n                <p className=\"text-xs text-muted-foreground\">Response Time</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Badge variant=\"outline\" className=\"mb-1\">\r\n                  <Users className=\"mr-1 h-3 w-3\" />\r\n                  1.2k\r\n                </Badge>\r\n                <p className=\"text-xs text-muted-foreground\">Active Users</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* User Profile */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex items-center gap-4 mb-3\">\r\n              <div className=\"h-12 w-12 rounded-full bg-muted\" />\r\n              <div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <h4 className=\"font-semibold\">Sarah Johnson</h4>\r\n                  <Badge variant=\"outline\" className=\"text-blue-600 border-blue-600\">\r\n                    <Shield className=\"mr-1 h-3 w-3\" />\r\n                    Pro\r\n                  </Badge>\r\n                  <Badge className=\"bg-green-500 hover:bg-green-600\">\r\n                    <CheckCircle2 className=\"mr-1 h-3 w-3\" />\r\n                    Verified\r\n                  </Badge>\r\n                </div>\r\n                <p className=\"text-sm text-muted-foreground\">Senior Developer</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Badge variant=\"secondary\">\r\n                <MapPin className=\"mr-1 h-3 w-3\" />\r\n                San Francisco\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Calendar className=\"mr-1 h-3 w-3\" />\r\n                Joined 2022\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Trophy className=\"mr-1 h-3 w-3\" />\r\n                Top Contributor\r\n              </Badge>\r\n              <Badge variant=\"secondary\">\r\n                <Heart className=\"mr-1 h-3 w-3\" />\r\n                2.5k followers\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Import missing icon\r\nimport { Truck } from \"lucide-react\"",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "button.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/button.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Button } from \"@lightmind/ui\"\r\nimport { \r\n  ChevronRight, \r\n  Download, \r\n  Mail, \r\n  Loader2, \r\n  Plus, \r\n  Trash2, \r\n  Heart,\r\n  Share2,\r\n  Settings,\r\n  Check,\r\n  X,\r\n  AlertCircle,\r\n  ArrowRight,\r\n  ExternalLink,\r\n  Copy,\r\n  Save,\r\n  RefreshCw,\r\n  LogOut,\r\n  Upload,\r\n  Search,\r\n  Filter,\r\n  Edit,\r\n  MoreHorizontal\r\n} from \"lucide-react\"\r\n\r\nexport function ButtonDemo() {\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [loadingStates, setLoadingStates] = React.useState({\r\n    save: false,\r\n    upload: false,\r\n    refresh: false,\r\n  })\r\n\r\n  const handleLoadingClick = (action: keyof typeof loadingStates) => {\r\n    setLoadingStates(prev => ({ ...prev, [action]: true }))\r\n    setTimeout(() => {\r\n      setLoadingStates(prev => ({ ...prev, [action]: false }))\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Variants Section */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Button Variants</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Six distinct visual styles for different use cases\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Button>Default</Button>\r\n          <Button variant=\"secondary\">Secondary</Button>\r\n          <Button variant=\"destructive\">Destructive</Button>\r\n          <Button variant=\"outline\">Outline</Button>\r\n          <Button variant=\"ghost\">Ghost</Button>\r\n          <Button variant=\"link\">Link</Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sizes Section */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Button Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Four size options including icon-only buttons\r\n        </p>\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          <Button size=\"lg\">Large</Button>\r\n          <Button size=\"default\">Default</Button>\r\n          <Button size=\"sm\">Small</Button>\r\n          <Button size=\"icon\">\r\n            <Heart className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* With Icons Section */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Buttons with Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Combine icons with text for enhanced visual communication\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button>\r\n              <Mail className=\"mr-2 h-4 w-4\" />\r\n              Login with Email\r\n            </Button>\r\n            <Button variant=\"secondary\">\r\n              <Download className=\"mr-2 h-4 w-4\" />\r\n              Download\r\n            </Button>\r\n            <Button variant=\"outline\">\r\n              Continue\r\n              <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"destructive\">\r\n              <Trash2 className=\"mr-2 h-4 w-4\" />\r\n              Delete\r\n            </Button>\r\n          </div>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button size=\"sm\">\r\n              <Plus className=\"mr-2 h-3 w-3\" />\r\n              Add Item\r\n            </Button>\r\n            <Button size=\"sm\" variant=\"ghost\">\r\n              <Share2 className=\"mr-2 h-3 w-3\" />\r\n              Share\r\n            </Button>\r\n            <Button size=\"sm\" variant=\"outline\">\r\n              <Settings className=\"mr-2 h-3 w-3\" />\r\n              Settings\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Icon Only Buttons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Icon Buttons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Compact buttons for toolbars and space-constrained interfaces\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Button variant=\"outline\" size=\"icon\">\r\n            <Search className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button variant=\"ghost\" size=\"icon\">\r\n            <Filter className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button variant=\"secondary\" size=\"icon\">\r\n            <Edit className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button size=\"icon\">\r\n            <Plus className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button variant=\"destructive\" size=\"icon\">\r\n            <X className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button variant=\"ghost\" size=\"icon\">\r\n            <MoreHorizontal className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Loading States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Show loading indicators for async operations\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button \r\n              onClick={() => handleLoadingClick('save')}\r\n              disabled={loadingStates.save}\r\n            >\r\n              {loadingStates.save && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n              {loadingStates.save ? \"Saving...\" : \"Save Changes\"}\r\n            </Button>\r\n            <Button \r\n              variant=\"secondary\"\r\n              onClick={() => handleLoadingClick('upload')}\r\n              disabled={loadingStates.upload}\r\n            >\r\n              {loadingStates.upload ? (\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <Upload className=\"mr-2 h-4 w-4\" />\r\n              )}\r\n              {loadingStates.upload ? \"Uploading...\" : \"Upload File\"}\r\n            </Button>\r\n            <Button \r\n              variant=\"outline\"\r\n              onClick={() => handleLoadingClick('refresh')}\r\n              disabled={loadingStates.refresh}\r\n            >\r\n              <RefreshCw className={cn(\r\n                \"mr-2 h-4 w-4\",\r\n                loadingStates.refresh && \"animate-spin\"\r\n              )} />\r\n              {loadingStates.refresh ? \"Refreshing...\" : \"Refresh\"}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button disabled>\r\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n              Please wait\r\n            </Button>\r\n            <Button variant=\"secondary\" size=\"sm\" disabled>\r\n              <Loader2 className=\"mr-2 h-3 w-3 animate-spin\" />\r\n              Processing\r\n            </Button>\r\n            <Button size=\"icon\" disabled>\r\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Disabled States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Disabled States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Disabled buttons for unavailable actions\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Button disabled>Default</Button>\r\n          <Button variant=\"secondary\" disabled>Secondary</Button>\r\n          <Button variant=\"destructive\" disabled>Destructive</Button>\r\n          <Button variant=\"outline\" disabled>Outline</Button>\r\n          <Button variant=\"ghost\" disabled>Ghost</Button>\r\n          <Button variant=\"link\" disabled>Link</Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Button Groups */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Button Groups</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common button combinations and patterns\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          {/* Dialog Actions */}\r\n          <div className=\"flex gap-2\">\r\n            <Button variant=\"outline\">Cancel</Button>\r\n            <Button>Save Changes</Button>\r\n          </div>\r\n\r\n          {/* Destructive Confirmation */}\r\n          <div className=\"flex gap-2\">\r\n            <Button variant=\"ghost\">Cancel</Button>\r\n            <Button variant=\"destructive\">\r\n              <Trash2 className=\"mr-2 h-4 w-4\" />\r\n              Delete Item\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Navigation */}\r\n          <div className=\"flex gap-2\">\r\n            <Button variant=\"outline\">Back</Button>\r\n            <Button>\r\n              Next\r\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Form Actions */}\r\n          <div className=\"flex gap-2\">\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <X className=\"mr-2 h-3 w-3\" />\r\n              Reset\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              <Save className=\"mr-2 h-3 w-3\" />\r\n              Save Draft\r\n            </Button>\r\n            <Button size=\"sm\">\r\n              <Check className=\"mr-2 h-3 w-3\" />\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Special Use Cases */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Special Use Cases</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Buttons for specific contexts and actions\r\n        </p>\r\n        <div className=\"space-y-4\">\r\n          {/* External Links */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button variant=\"link\" asChild>\r\n              <a href=\"https://example.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                View Documentation\r\n                <ExternalLink className=\"ml-2 h-3 w-3\" />\r\n              </a>\r\n            </Button>\r\n            <Button variant=\"ghost\" size=\"sm\" asChild>\r\n              <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                GitHub\r\n                <ExternalLink className=\"ml-1 h-3 w-3\" />\r\n              </a>\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Status Indicators */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button variant=\"outline\" className=\"text-green-600 border-green-600 hover:bg-green-50\">\r\n              <Check className=\"mr-2 h-4 w-4\" />\r\n              Approved\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"text-yellow-600 border-yellow-600 hover:bg-yellow-50\">\r\n              <AlertCircle className=\"mr-2 h-4 w-4\" />\r\n              Pending Review\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"text-red-600 border-red-600 hover:bg-red-50\">\r\n              <X className=\"mr-2 h-4 w-4\" />\r\n              Rejected\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Utility Actions */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Button variant=\"secondary\" size=\"sm\">\r\n              <Copy className=\"mr-2 h-3 w-3\" />\r\n              Copy to Clipboard\r\n            </Button>\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <LogOut className=\"mr-2 h-3 w-3\" />\r\n              Sign Out\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Helper function for class names (if not imported from utils)\r\nfunction cn(...inputs: (string | undefined | null | false)[]) {\r\n  return inputs.filter(Boolean).join(' ')\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "card.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [
      "avatar",
      "progress",
      "separator"
    ],
    "files": [
      {
        "path": "registry/examples/card.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  Card, \r\n  CardContent, \r\n  CardDescription, \r\n  CardFooter, \r\n  CardHeader, \r\n  CardTitle,\r\n  Button,\r\n  Badge,\r\n  Input,\r\n  Label,\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  Checkbox,\r\n  Switch\r\n} from \"@lightmind/ui\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { \r\n  Heart,\r\n  MessageCircle,\r\n  Share2,\r\n  MoreHorizontal,\r\n  Star,\r\n  Clock,\r\n  Calendar,\r\n  MapPin,\r\n  Users,\r\n  Download,\r\n  ExternalLink,\r\n  TrendingUp,\r\n  DollarSign,\r\n  Activity,\r\n  CreditCard,\r\n  ShoppingCart,\r\n  Package,\r\n  CheckCircle2,\r\n  XCircle,\r\n  AlertCircle,\r\n  ArrowRight,\r\n  Github,\r\n  Twitter,\r\n  Linkedin,\r\n  Mail,\r\n  Phone,\r\n  Globe,\r\n  BarChart3,\r\n  PieChart,\r\n  LineChart,\r\n  FileText,\r\n  Image as ImageIcon,\r\n  Play,\r\n  Pause,\r\n  SkipForward,\r\n  Volume2,\r\n  Shield,\r\n  Rocket\r\n} from \"lucide-react\"\r\n\r\nexport function CardDemo() {\r\n  const [liked, setLiked] = React.useState(false)\r\n  const [selectedPlan, setSelectedPlan] = React.useState(\"pro\")\r\n  const [notifications, setNotifications] = React.useState({\r\n    email: true,\r\n    sms: false,\r\n    push: true\r\n  })\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Cards */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Cards</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Essential card layouts with header, content, and footer sections\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          {/* Basic card with all sections */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Card Title</CardTitle>\r\n              <CardDescription>Card description goes here</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p>This is the card content. You can put any content here including forms, lists, images, or other components.</p>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">Action</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Card with description only */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Enhanced Description</CardTitle>\r\n              <CardDescription>\r\n                This card demonstrates a more detailed description that provides context about the card's purpose and what users can expect to find within it.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-2\">\r\n                <p className=\"text-sm\">Additional content that expands on the description above.</p>\r\n                <p className=\"text-sm text-muted-foreground\">Supporting text with muted styling.</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Card without header */}\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-semibold\">Direct Content Card</h4>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  This card skips the header section and goes straight to content, useful for simpler layouts.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button variant=\"secondary\" size=\"sm\">Learn More</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Card without footer */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>No Footer Card</CardTitle>\r\n              <CardDescription>Sometimes you don't need action buttons</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p className=\"text-sm\">This card has no footer section, making it ideal for informational content that doesn't require user interaction.</p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Type Cards */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Content Types</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Cards with different types of content including forms, lists, and media\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n          {/* Form Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Sign In</CardTitle>\r\n              <CardDescription>Enter your credentials to continue</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input id=\"password\" type=\"password\" />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"remember\" />\r\n                  <Label htmlFor=\"remember\" className=\"text-sm font-normal\">Remember me</Label>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">Sign In</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* List Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recent Activity</CardTitle>\r\n              <CardDescription>Your latest actions</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {[\r\n                  { icon: FileText, text: \"Document updated\", time: \"2 min ago\" },\r\n                  { icon: Users, text: \"Team member added\", time: \"1 hour ago\" },\r\n                  { icon: CheckCircle2, text: \"Task completed\", time: \"3 hours ago\" },\r\n                ].map((item, index) => (\r\n                  <div key={index} className=\"flex items-center space-x-3\">\r\n                    <item.icon className=\"h-4 w-4 text-muted-foreground\" />\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <p className=\"text-sm font-medium\">{item.text}</p>\r\n                      <p className=\"text-xs text-muted-foreground\">{item.time}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Image Card */}\r\n          <Card className=\"overflow-hidden\">\r\n            <div className=\"aspect-video bg-muted relative\">\r\n              <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                <ImageIcon className=\"h-12 w-12 text-muted-foreground\" />\r\n              </div>\r\n            </div>\r\n            <CardHeader>\r\n              <CardTitle>Beautiful Landscape</CardTitle>\r\n              <CardDescription>Captured at sunset</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p className=\"text-sm\">A stunning view of mountains during golden hour, showcasing nature's beauty.</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Stats Card */}\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\r\n              <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">$45,231.89</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                +20.1% from last month\r\n              </p>\r\n              <Progress value={65} className=\"mt-3\" />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Settings Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Notifications</CardTitle>\r\n              <CardDescription>Configure how you receive updates</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"email-notif\">Email</Label>\r\n                  <p className=\"text-xs text-muted-foreground\">Receive email notifications</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"email-notif\"\r\n                  checked={notifications.email}\r\n                  onCheckedChange={(checked) => setNotifications(prev => ({ ...prev, email: checked }))}\r\n                />\r\n              </div>\r\n              <Separator />\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"sms-notif\">SMS</Label>\r\n                  <p className=\"text-xs text-muted-foreground\">Receive SMS notifications</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"sms-notif\"\r\n                  checked={notifications.sms}\r\n                  onCheckedChange={(checked) => setNotifications(prev => ({ ...prev, sms: checked }))}\r\n                />\r\n              </div>\r\n              <Separator />\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"push-notif\">Push</Label>\r\n                  <p className=\"text-xs text-muted-foreground\">Receive push notifications</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"push-notif\"\r\n                  checked={notifications.push}\r\n                  onCheckedChange={(checked) => setNotifications(prev => ({ ...prev, push: checked }))}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Media Player Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Now Playing</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"aspect-square bg-muted rounded-md relative\">\r\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                    <Play className=\"h-12 w-12 text-muted-foreground\" />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold\">Song Title</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">Artist Name</p>\r\n                </div>\r\n                <div className=\"flex items-center justify-center space-x-4\">\r\n                  <Button size=\"icon\" variant=\"ghost\">\r\n                    <SkipForward className=\"h-4 w-4 rotate-180\" />\r\n                  </Button>\r\n                  <Button size=\"icon\">\r\n                    <Play className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button size=\"icon\" variant=\"ghost\">\r\n                    <SkipForward className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Interactive Cards */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Interactive Cards</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Cards with interactive elements and state management\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n          {/* Social Media Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Avatar>\r\n                  <AvatarImage src=\"/placeholder-avatar.jpg\" />\r\n                  <AvatarFallback>JD</AvatarFallback>\r\n                </Avatar>\r\n                <div>\r\n                  <CardTitle className=\"text-base\">John Doe</CardTitle>\r\n                  <CardDescription className=\"text-xs\">2 hours ago</CardDescription>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p className=\"text-sm\">Just launched my new project! Excited to share it with the community. 🚀</p>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button \r\n                variant=\"ghost\" \r\n                size=\"sm\"\r\n                onClick={() => setLiked(!liked)}\r\n                className={liked ? \"text-red-500\" : \"\"}\r\n              >\r\n                <Heart className={`h-4 w-4 mr-1 ${liked ? \"fill-current\" : \"\"}`} />\r\n                {liked ? \"124\" : \"123\"}\r\n              </Button>\r\n              <Button variant=\"ghost\" size=\"sm\">\r\n                <MessageCircle className=\"h-4 w-4 mr-1\" />\r\n                45\r\n              </Button>\r\n              <Button variant=\"ghost\" size=\"sm\">\r\n                <Share2 className=\"h-4 w-4 mr-1\" />\r\n                Share\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Pricing Card */}\r\n          <Card className={selectedPlan === \"pro\" ? \"border-primary\" : \"\"}>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Pro Plan</CardTitle>\r\n                <Badge variant={selectedPlan === \"pro\" ? \"default\" : \"secondary\"}>\r\n                  {selectedPlan === \"pro\" ? \"Current\" : \"Upgrade\"}\r\n                </Badge>\r\n              </div>\r\n              <CardDescription>Perfect for growing teams</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"text-3xl font-bold\">\r\n                  $29<span className=\"text-lg font-normal text-muted-foreground\">/month</span>\r\n                </div>\r\n                <ul className=\"space-y-2 text-sm\">\r\n                  <li className=\"flex items-center\">\r\n                    <CheckCircle2 className=\"h-4 w-4 mr-2 text-green-500\" />\r\n                    Unlimited projects\r\n                  </li>\r\n                  <li className=\"flex items-center\">\r\n                    <CheckCircle2 className=\"h-4 w-4 mr-2 text-green-500\" />\r\n                    Advanced analytics\r\n                  </li>\r\n                  <li className=\"flex items-center\">\r\n                    <CheckCircle2 className=\"h-4 w-4 mr-2 text-green-500\" />\r\n                    24/7 support\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button \r\n                className=\"w-full\" \r\n                variant={selectedPlan === \"pro\" ? \"secondary\" : \"default\"}\r\n                onClick={() => setSelectedPlan(\"pro\")}\r\n              >\r\n                {selectedPlan === \"pro\" ? \"Current Plan\" : \"Select Plan\"}\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Product Card */}\r\n          <Card className=\"overflow-hidden\">\r\n            <div className=\"aspect-square bg-muted relative\">\r\n              <Badge className=\"absolute top-2 right-2\">New</Badge>\r\n              <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                <Package className=\"h-12 w-12 text-muted-foreground\" />\r\n              </div>\r\n            </div>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle className=\"text-lg\">Premium Headphones</CardTitle>\r\n                <div className=\"flex items-center\">\r\n                  {[...Array(5)].map((_, i) => (\r\n                    <Star key={i} className={`h-3 w-3 ${i < 4 ? \"fill-yellow-400 text-yellow-400\" : \"text-muted-foreground\"}`} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <CardDescription>Wireless, Noise-Cancelling</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-2xl font-bold\">$299</span>\r\n                <Badge variant=\"secondary\">In Stock</Badge>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex gap-2\">\r\n              <Button className=\"flex-1\">\r\n                <ShoppingCart className=\"h-4 w-4 mr-2\" />\r\n                Add to Cart\r\n              </Button>\r\n              <Button size=\"icon\" variant=\"outline\">\r\n                <Heart className=\"h-4 w-4\" />\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Task Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle className=\"text-base\">Design System Update</CardTitle>\r\n                <Button size=\"icon\" variant=\"ghost\" className=\"h-8 w-8\">\r\n                  <MoreHorizontal className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n              <CardDescription>Due in 3 days</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center text-sm text-muted-foreground\">\r\n                  <Calendar className=\"h-4 w-4 mr-2\" />\r\n                  March 20, 2024\r\n                </div>\r\n                <div className=\"flex items-center text-sm text-muted-foreground\">\r\n                  <Users className=\"h-4 w-4 mr-2\" />\r\n                  3 members assigned\r\n                </div>\r\n                <Progress value={75} className=\"h-2\" />\r\n                <p className=\"text-xs text-muted-foreground\">75% Complete</p>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex gap-2\">\r\n              <Button size=\"sm\" variant=\"secondary\">View Details</Button>\r\n              <Button size=\"sm\">Mark Complete</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Profile Card */}\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"flex flex-col items-center space-y-4\">\r\n                <Avatar className=\"h-20 w-20\">\r\n                  <AvatarImage src=\"/placeholder-avatar.jpg\" />\r\n                  <AvatarFallback>AB</AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"text-lg font-semibold\">Alice Brown</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">Product Designer</p>\r\n                </div>\r\n                <div className=\"flex space-x-1\">\r\n                  <Button size=\"icon\" variant=\"ghost\" className=\"h-8 w-8\">\r\n                    <Github className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button size=\"icon\" variant=\"ghost\" className=\"h-8 w-8\">\r\n                    <Twitter className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button size=\"icon\" variant=\"ghost\" className=\"h-8 w-8\">\r\n                    <Linkedin className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex gap-2\">\r\n              <Button className=\"flex-1\" variant=\"outline\">Message</Button>\r\n              <Button className=\"flex-1\">Follow</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Event Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <Badge className=\"w-fit mb-2\" variant=\"secondary\">Upcoming</Badge>\r\n              <CardTitle>Design Workshop</CardTitle>\r\n              <CardDescription>Learn the latest design trends</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"flex items-center text-muted-foreground\">\r\n                  <Calendar className=\"h-4 w-4 mr-2\" />\r\n                  March 25, 2024\r\n                </div>\r\n                <div className=\"flex items-center text-muted-foreground\">\r\n                  <Clock className=\"h-4 w-4 mr-2\" />\r\n                  2:00 PM - 5:00 PM\r\n                </div>\r\n                <div className=\"flex items-center text-muted-foreground\">\r\n                  <MapPin className=\"h-4 w-4 mr-2\" />\r\n                  Online Event\r\n                </div>\r\n                <div className=\"flex items-center text-muted-foreground\">\r\n                  <Users className=\"h-4 w-4 mr-2\" />\r\n                  47 attending\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">\r\n                Register Now\r\n                <ArrowRight className=\"h-4 w-4 ml-2\" />\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Card Grids and Layouts */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Card Layouts</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Different grid layouts and card arrangements\r\n        </p>\r\n        \r\n        {/* Dashboard Grid */}\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold mb-4\">Dashboard Layout</h4>\r\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n              {[\r\n                { title: \"Total Revenue\", value: \"$45,231\", change: \"+20.1%\", icon: DollarSign, trend: \"up\" },\r\n                { title: \"Active Users\", value: \"2,350\", change: \"+15.3%\", icon: Users, trend: \"up\" },\r\n                { title: \"Sales\", value: \"12,234\", change: \"-4.5%\", icon: CreditCard, trend: \"down\" },\r\n                { title: \"Performance\", value: \"96.5%\", change: \"+2.1%\", icon: Activity, trend: \"up\" },\r\n              ].map((stat, index) => (\r\n                <Card key={index}>\r\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\r\n                    <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{stat.value}</div>\r\n                    <p className={`text-xs ${stat.trend === \"up\" ? \"text-green-600\" : \"text-red-600\"}`}>\r\n                      {stat.change} from last month\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Feature Cards */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold mb-4\">Feature Cards</h4>\r\n            <div className=\"grid gap-6 md:grid-cols-3\">\r\n              {[\r\n                { \r\n                  icon: BarChart3, \r\n                  title: \"Advanced Analytics\", \r\n                  description: \"Get detailed insights into your data with our powerful analytics tools.\" \r\n                },\r\n                { \r\n                  icon: Shield, \r\n                  title: \"Enterprise Security\", \r\n                  description: \"Bank-level security to keep your data safe and compliant.\" \r\n                },\r\n                { \r\n                  icon: Rocket, \r\n                  title: \"Fast Performance\", \r\n                  description: \"Lightning-fast response times with our optimized infrastructure.\" \r\n                },\r\n              ].map((feature, index) => (\r\n                <Card key={index} className=\"relative overflow-hidden\">\r\n                  <CardHeader>\r\n                    <feature.icon className=\"h-10 w-10 text-primary mb-2\" />\r\n                    <CardTitle>{feature.title}</CardTitle>\r\n                    <CardDescription>{feature.description}</CardDescription>\r\n                  </CardHeader>\r\n                  <CardFooter>\r\n                    <Button variant=\"ghost\" className=\"group\">\r\n                      Learn more \r\n                      <ArrowRight className=\"h-4 w-4 ml-2 transition-transform group-hover:translate-x-1\" />\r\n                    </Button>\r\n                  </CardFooter>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Contact Cards */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold mb-4\">Contact Cards</h4>\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Get in Touch</CardTitle>\r\n                  <CardDescription>We'd love to hear from you</CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Mail className=\"h-5 w-5 text-muted-foreground\" />\r\n                    <span className=\"text-sm\">contact@example.com</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Phone className=\"h-5 w-5 text-muted-foreground\" />\r\n                    <span className=\"text-sm\">+1 (555) 123-4567</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Globe className=\"h-5 w-5 text-muted-foreground\" />\r\n                    <span className=\"text-sm\">www.example.com</span>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Office Hours</CardTitle>\r\n                  <CardDescription>When we're available</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-muted-foreground\">Monday - Friday</span>\r\n                      <span>9:00 AM - 6:00 PM</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-muted-foreground\">Saturday</span>\r\n                      <span>10:00 AM - 4:00 PM</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-muted-foreground\">Sunday</span>\r\n                      <span>Closed</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Complex Card Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Complex Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Advanced card compositions for real-world use cases\r\n        </p>\r\n        <div className=\"grid gap-6 lg:grid-cols-2\">\r\n          {/* Invoice Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Invoice #12345</CardTitle>\r\n                  <CardDescription>Issued on March 15, 2024</CardDescription>\r\n                </div>\r\n                <Badge>Paid</Badge>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-muted-foreground\">Bill to</p>\r\n                    <p className=\"font-medium\">Acme Corporation</p>\r\n                    <p className=\"text-muted-foreground\">123 Business St.</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-muted-foreground\">Payment Method</p>\r\n                    <p className=\"font-medium\">Credit Card ending in 4242</p>\r\n                  </div>\r\n                </div>\r\n                <Separator />\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Professional Services</span>\r\n                    <span>$2,500.00</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Consultation Fee</span>\r\n                    <span>$500.00</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm text-muted-foreground\">\r\n                    <span>Tax (10%)</span>\r\n                    <span>$300.00</span>\r\n                  </div>\r\n                  <Separator />\r\n                  <div className=\"flex justify-between font-semibold\">\r\n                    <span>Total</span>\r\n                    <span>$3,300.00</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex gap-2\">\r\n              <Button variant=\"outline\">\r\n                <Download className=\"h-4 w-4 mr-2\" />\r\n                Download\r\n              </Button>\r\n              <Button variant=\"outline\">\r\n                <Mail className=\"h-4 w-4 mr-2\" />\r\n                Email\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Chart Card */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Revenue Overview</CardTitle>\r\n                  <CardDescription>Monthly revenue for 2024</CardDescription>\r\n                </div>\r\n                <Select defaultValue=\"2024\">\r\n                  <SelectTrigger className=\"w-[100px]\">\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"2024\">2024</SelectItem>\r\n                    <SelectItem value=\"2023\">2023</SelectItem>\r\n                    <SelectItem value=\"2022\">2022</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"h-[200px] flex items-center justify-center bg-muted rounded\">\r\n                <LineChart className=\"h-16 w-16 text-muted-foreground\" />\r\n              </div>\r\n              <div className=\"grid grid-cols-3 gap-4 mt-4\">\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-muted-foreground\">Total</p>\r\n                  <p className=\"text-xl font-bold\">$124.5K</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-muted-foreground\">Average</p>\r\n                  <p className=\"text-xl font-bold\">$10.4K</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-muted-foreground\">Growth</p>\r\n                  <p className=\"text-xl font-bold text-green-600\">+12.5%</p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "checkbox.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/checkbox.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  Checkbox,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Badge,\r\n  Separator,\r\n  Switch,\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n  ScrollArea,\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n  Alert,\r\n  AlertDescription\r\n} from \"@lightmind/ui\"\r\nimport { \r\n  Check,\r\n  X,\r\n  Minus,\r\n  Settings,\r\n  Bell,\r\n  Shield,\r\n  Eye,\r\n  Mail,\r\n  MessageSquare,\r\n  Phone,\r\n  Globe,\r\n  Lock,\r\n  Sparkles,\r\n  Zap,\r\n  Star,\r\n  Heart,\r\n  Bookmark,\r\n  Filter,\r\n  Package,\r\n  Truck,\r\n  CreditCard,\r\n  Gift,\r\n  FileText,\r\n  Download,\r\n  Upload,\r\n  AlertCircle,\r\n  Info,\r\n  CheckCircle2,\r\n  XCircle,\r\n  Users,\r\n  UserCheck,\r\n  FolderOpen,\r\n  Calendar,\r\n  Clock,\r\n  Palette,\r\n  Layout,\r\n  Code,\r\n  Database,\r\n  Cloud,\r\n  Smartphone,\r\n  Monitor,\r\n  Headphones,\r\n  Mic,\r\n  Camera,\r\n  Video,\r\n  Music,\r\n  Image,\r\n  File,\r\n  Archive,\r\n  Trash2,\r\n  RefreshCw,\r\n  Save,\r\n  Share2,\r\n  Printer,\r\n  Wifi,\r\n  Bluetooth,\r\n  Battery,\r\n  Sun,\r\n  Moon,\r\n  ArrowRight,\r\n  BarChart3,\r\n  Volume2\r\n} from \"lucide-react\"\r\n\r\nexport function CheckboxDemo() {\r\n  // State for controlled examples\r\n  const [checkedStates, setCheckedStates] = React.useState({\r\n    basic: false,\r\n    terms: false,\r\n    marketing: true,\r\n    updates: false,\r\n  })\r\n  \r\n  // State for checkbox groups\r\n  const [selectedFeatures, setSelectedFeatures] = React.useState<string[]>(['analytics', 'security'])\r\n  const [selectedCategories, setSelectedCategories] = React.useState<string[]>(['electronics', 'books'])\r\n  const [selectedPermissions, setSelectedPermissions] = React.useState<string[]>(['read', 'write'])\r\n  \r\n  // State for indeterminate example\r\n  const [parentChecked, setParentChecked] = React.useState<boolean | 'indeterminate'>('indeterminate')\r\n  const [childChecked, setChildChecked] = React.useState({\r\n    option1: true,\r\n    option2: false,\r\n    option3: true,\r\n  })\r\n  \r\n  // State for preferences\r\n  const [preferences, setPreferences] = React.useState({\r\n    notifications: {\r\n      email: true,\r\n      sms: false,\r\n      push: true,\r\n      desktop: true,\r\n    },\r\n    privacy: {\r\n      publicProfile: false,\r\n      showEmail: false,\r\n      showPhone: false,\r\n      allowMessages: true,\r\n    },\r\n    features: {\r\n      darkMode: true,\r\n      autoSave: true,\r\n      soundEffects: false,\r\n      animations: true,\r\n    }\r\n  })\r\n\r\n  // Helper function for parent-child checkbox logic\r\n  React.useEffect(() => {\r\n    const childValues = Object.values(childChecked)\r\n    if (childValues.every(v => v === true)) {\r\n      setParentChecked(true)\r\n    } else if (childValues.every(v => v === false)) {\r\n      setParentChecked(false)\r\n    } else {\r\n      setParentChecked('indeterminate')\r\n    }\r\n  }, [childChecked])\r\n\r\n  const handleParentChange = (checked: boolean | 'indeterminate') => {\r\n    if (checked === true) {\r\n      setChildChecked({ option1: true, option2: true, option3: true })\r\n    } else {\r\n      setChildChecked({ option1: false, option2: false, option3: false })\r\n    }\r\n  }\r\n\r\n  const handleFeatureToggle = (feature: string) => {\r\n    setSelectedFeatures(prev => \r\n      prev.includes(feature) \r\n        ? prev.filter(f => f !== feature)\r\n        : [...prev, feature]\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Checkboxes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Checkboxes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple checkbox components with different sizes and states\r\n        </p>\r\n        <div className=\"grid gap-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Sizes</CardTitle>\r\n              <CardDescription>Available checkbox sizes</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex flex-wrap gap-6\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"size-sm\" size=\"sm\" />\r\n                  <Label htmlFor=\"size-sm\" className=\"text-sm\">Small checkbox</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"size-default\" />\r\n                  <Label htmlFor=\"size-default\">Default checkbox</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"size-lg\" size=\"lg\" />\r\n                  <Label htmlFor=\"size-lg\" className=\"text-lg\">Large checkbox</Label>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">States</CardTitle>\r\n              <CardDescription>Different checkbox states</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"unchecked\" />\r\n                <Label htmlFor=\"unchecked\">Unchecked state</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"checked\" defaultChecked />\r\n                <Label htmlFor=\"checked\">Checked state</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"disabled\" disabled />\r\n                <Label htmlFor=\"disabled\" className=\"opacity-50\">Disabled unchecked</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"disabled-checked\" disabled defaultChecked />\r\n                <Label htmlFor=\"disabled-checked\" className=\"opacity-50\">Disabled checked</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"indeterminate\" indeterminate />\r\n                <Label htmlFor=\"indeterminate\">Indeterminate state</Label>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controlled vs Uncontrolled */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Controlled vs Uncontrolled</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Examples of controlled and uncontrolled checkbox implementations\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Uncontrolled</CardTitle>\r\n              <CardDescription>Using defaultChecked prop</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"uncontrolled-1\" defaultChecked />\r\n                <Label htmlFor=\"uncontrolled-1\">Subscribe to newsletter</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"uncontrolled-2\" />\r\n                <Label htmlFor=\"uncontrolled-2\">Receive SMS notifications</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"uncontrolled-3\" defaultChecked />\r\n                <Label htmlFor=\"uncontrolled-3\">Enable auto-updates</Label>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Controlled</CardTitle>\r\n              <CardDescription>Using checked prop and state</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox \r\n                  id=\"controlled-1\" \r\n                  checked={checkedStates.basic}\r\n                  onCheckedChange={(checked) => \r\n                    setCheckedStates(prev => ({ ...prev, basic: !!checked }))\r\n                  }\r\n                />\r\n                <Label htmlFor=\"controlled-1\">\r\n                  Enable feature {checkedStates.basic && <Badge className=\"ml-2\">Active</Badge>}\r\n                </Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox \r\n                  id=\"controlled-2\" \r\n                  checked={checkedStates.marketing}\r\n                  onCheckedChange={(checked) => \r\n                    setCheckedStates(prev => ({ ...prev, marketing: !!checked }))\r\n                  }\r\n                />\r\n                <Label htmlFor=\"controlled-2\">\r\n                  Marketing emails {checkedStates.marketing && <Badge variant=\"secondary\" className=\"ml-2\">Enabled</Badge>}\r\n                </Label>\r\n              </div>\r\n              <div className=\"text-sm text-muted-foreground mt-4\">\r\n                Current state: {JSON.stringify({ basic: checkedStates.basic, marketing: checkedStates.marketing })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Checkbox with Descriptions */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">With Descriptions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Checkboxes with labels and additional description text\r\n        </p>\r\n        <Card>\r\n          <CardContent className=\"pt-6 space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <Checkbox id=\"desc-1\" className=\"mt-0.5\" />\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"desc-1\" className=\"font-medium\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Bell className=\"h-4 w-4\" />\r\n                      Email Notifications\r\n                    </span>\r\n                  </Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Receive email notifications about your account activity\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <Checkbox id=\"desc-2\" defaultChecked className=\"mt-0.5\" />\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"desc-2\" className=\"font-medium\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Shield className=\"h-4 w-4\" />\r\n                      Two-Factor Authentication\r\n                    </span>\r\n                  </Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Add an extra layer of security to your account by requiring a code in addition to your password\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <Checkbox id=\"desc-3\" className=\"mt-0.5\" />\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"desc-3\" className=\"font-medium\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Eye className=\"h-4 w-4\" />\r\n                      Public Profile\r\n                    </span>\r\n                  </Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Make your profile visible to other users and allow them to find you in search results\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Checkbox Groups */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Checkbox Groups</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Multiple checkboxes for selecting multiple options\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Features Selection</CardTitle>\r\n              <CardDescription>Choose the features you want to enable</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-3\">\r\n                {[\r\n                  { id: 'analytics', label: 'Analytics Dashboard', icon: BarChart3 },\r\n                  { id: 'security', label: 'Advanced Security', icon: Shield },\r\n                  { id: 'api', label: 'API Access', icon: Code },\r\n                  { id: 'support', label: 'Priority Support', icon: Headphones },\r\n                ].map((feature) => (\r\n                  <div key={feature.id} className=\"flex items-center space-x-2\">\r\n                    <Checkbox \r\n                      id={feature.id}\r\n                      checked={selectedFeatures.includes(feature.id)}\r\n                      onCheckedChange={() => handleFeatureToggle(feature.id)}\r\n                    />\r\n                    <Label \r\n                      htmlFor={feature.id} \r\n                      className=\"flex items-center gap-2 cursor-pointer\"\r\n                    >\r\n                      <feature.icon className=\"h-4 w-4\" />\r\n                      {feature.label}\r\n                    </Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"pt-2\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Selected: {selectedFeatures.length} features\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Category Filters</CardTitle>\r\n              <CardDescription>Filter products by categories</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {[\r\n                  { id: 'electronics', label: 'Electronics', count: 234 },\r\n                  { id: 'clothing', label: 'Clothing', count: 189 },\r\n                  { id: 'books', label: 'Books', count: 156 },\r\n                  { id: 'home', label: 'Home & Garden', count: 97 },\r\n                  { id: 'sports', label: 'Sports & Outdoors', count: 64 },\r\n                ].map((category) => (\r\n                  <div key={category.id} className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox \r\n                        id={category.id}\r\n                        checked={selectedCategories.includes(category.id)}\r\n                        onCheckedChange={(checked) => {\r\n                          setSelectedCategories(prev =>\r\n                            checked\r\n                              ? [...prev, category.id]\r\n                              : prev.filter(c => c !== category.id)\r\n                          )\r\n                        }}\r\n                      />\r\n                      <Label htmlFor={category.id} className=\"cursor-pointer\">\r\n                        {category.label}\r\n                      </Label>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">{category.count}</Badge>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Indeterminate State (Parent-Child) */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Indeterminate State</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Parent checkbox with indeterminate state when children are partially selected\r\n        </p>\r\n        <Card className=\"max-w-md\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-base\">Select Permissions</CardTitle>\r\n            <CardDescription>Choose which permissions to grant</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Checkbox \r\n                id=\"parent\"\r\n                checked={parentChecked === true}\r\n                indeterminate={parentChecked === 'indeterminate'}\r\n                onCheckedChange={handleParentChange}\r\n              />\r\n              <Label htmlFor=\"parent\" className=\"font-medium\">\r\n                Select All Permissions\r\n              </Label>\r\n            </div>\r\n            <Separator />\r\n            <div className=\"ml-6 space-y-3\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox \r\n                  id=\"child-1\"\r\n                  checked={childChecked.option1}\r\n                  onCheckedChange={(checked) => \r\n                    setChildChecked(prev => ({ ...prev, option1: !!checked }))\r\n                  }\r\n                />\r\n                <Label htmlFor=\"child-1\">Read files</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox \r\n                  id=\"child-2\"\r\n                  checked={childChecked.option2}\r\n                  onCheckedChange={(checked) => \r\n                    setChildChecked(prev => ({ ...prev, option2: !!checked }))\r\n                  }\r\n                />\r\n                <Label htmlFor=\"child-2\">Write files</Label>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox \r\n                  id=\"child-3\"\r\n                  checked={childChecked.option3}\r\n                  onCheckedChange={(checked) => \r\n                    setChildChecked(prev => ({ ...prev, option3: !!checked }))\r\n                  }\r\n                />\r\n                <Label htmlFor=\"child-3\">Delete files</Label>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Real-World Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-World Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common checkbox patterns used in applications\r\n        </p>\r\n        \r\n        {/* Terms and Conditions */}\r\n        <div className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Create Account</CardTitle>\r\n              <CardDescription>Complete your registration</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input id=\"email\" placeholder=\"m@example.com\" />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input id=\"password\" type=\"password\" />\r\n              </div>\r\n              <Separator />\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                  <Checkbox \r\n                    id=\"terms\" \r\n                    checked={checkedStates.terms}\r\n                    onCheckedChange={(checked) => \r\n                      setCheckedStates(prev => ({ ...prev, terms: !!checked }))\r\n                    }\r\n                  />\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"terms\" className=\"text-sm font-normal leading-relaxed\">\r\n                      I agree to the{\" \"}\r\n                      <a href=\"#\" className=\"underline underline-offset-2\">\r\n                        Terms of Service\r\n                      </a>{\" \"}\r\n                      and{\" \"}\r\n                      <a href=\"#\" className=\"underline underline-offset-2\">\r\n                        Privacy Policy\r\n                      </a>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-start space-x-2\">\r\n                  <Checkbox \r\n                    id=\"newsletter\"\r\n                    checked={checkedStates.updates}\r\n                    onCheckedChange={(checked) => \r\n                      setCheckedStates(prev => ({ ...prev, updates: !!checked }))\r\n                    }\r\n                  />\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"newsletter\" className=\"text-sm font-normal\">\r\n                      Send me product updates and special offers\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button \r\n                className=\"w-full\" \r\n                disabled={!checkedStates.terms}\r\n              >\r\n                Create Account\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Settings Panel */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Notification Preferences</CardTitle>\r\n              <CardDescription>Choose how you want to be notified</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Tabs defaultValue=\"notifications\" className=\"w-full\">\r\n                <TabsList className=\"grid w-full grid-cols-3\">\r\n                  <TabsTrigger value=\"notifications\">Notifications</TabsTrigger>\r\n                  <TabsTrigger value=\"privacy\">Privacy</TabsTrigger>\r\n                  <TabsTrigger value=\"features\">Features</TabsTrigger>\r\n                </TabsList>\r\n                <TabsContent value=\"notifications\" className=\"space-y-4 mt-4\">\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(preferences.notifications).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <Checkbox \r\n                            id={`notif-${key}`}\r\n                            checked={value}\r\n                            onCheckedChange={(checked) => \r\n                              setPreferences(prev => ({\r\n                                ...prev,\r\n                                notifications: {\r\n                                  ...prev.notifications,\r\n                                  [key]: !!checked\r\n                                }\r\n                              }))\r\n                            }\r\n                          />\r\n                          <Label htmlFor={`notif-${key}`} className=\"capitalize\">\r\n                            {key === 'sms' ? 'SMS' : key.replace(/([A-Z])/g, ' $1').trim()} notifications\r\n                          </Label>\r\n                        </div>\r\n                        {key === 'email' && <Mail className=\"h-4 w-4 text-muted-foreground\" />}\r\n                        {key === 'sms' && <MessageSquare className=\"h-4 w-4 text-muted-foreground\" />}\r\n                        {key === 'push' && <Smartphone className=\"h-4 w-4 text-muted-foreground\" />}\r\n                        {key === 'desktop' && <Monitor className=\"h-4 w-4 text-muted-foreground\" />}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </TabsContent>\r\n                <TabsContent value=\"privacy\" className=\"space-y-4 mt-4\">\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(preferences.privacy).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-start space-x-2\">\r\n                        <Checkbox \r\n                          id={`privacy-${key}`}\r\n                          checked={value}\r\n                          onCheckedChange={(checked) => \r\n                            setPreferences(prev => ({\r\n                              ...prev,\r\n                              privacy: {\r\n                                ...prev.privacy,\r\n                                [key]: !!checked\r\n                              }\r\n                            }))\r\n                          }\r\n                          className=\"mt-0.5\"\r\n                        />\r\n                        <div className=\"space-y-1\">\r\n                          <Label htmlFor={`privacy-${key}`}>\r\n                            {key.replace(/([A-Z])/g, ' $1').trim()}\r\n                          </Label>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            {key === 'publicProfile' && 'Allow others to find and view your profile'}\r\n                            {key === 'showEmail' && 'Display your email address on your profile'}\r\n                            {key === 'showPhone' && 'Display your phone number on your profile'}\r\n                            {key === 'allowMessages' && 'Let other users send you direct messages'}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </TabsContent>\r\n                <TabsContent value=\"features\" className=\"space-y-4 mt-4\">\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(preferences.features).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <Checkbox \r\n                            id={`feature-${key}`}\r\n                            checked={value}\r\n                            onCheckedChange={(checked) => \r\n                              setPreferences(prev => ({\r\n                                ...prev,\r\n                                features: {\r\n                                  ...prev.features,\r\n                                  [key]: !!checked\r\n                                }\r\n                              }))\r\n                            }\r\n                          />\r\n                          <Label htmlFor={`feature-${key}`}>\r\n                            {key.replace(/([A-Z])/g, ' $1').trim()}\r\n                          </Label>\r\n                        </div>\r\n                        {key === 'darkMode' && (value ? <Moon className=\"h-4 w-4\" /> : <Sun className=\"h-4 w-4\" />)}\r\n                        {key === 'autoSave' && <Save className=\"h-4 w-4 text-muted-foreground\" />}\r\n                        {key === 'soundEffects' && <Volume2 className=\"h-4 w-4 text-muted-foreground\" />}\r\n                        {key === 'animations' && <Sparkles className=\"h-4 w-4 text-muted-foreground\" />}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </TabsContent>\r\n              </Tabs>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Shopping Cart Example */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Shopping Cart</CardTitle>\r\n              <CardDescription>Review and select items for checkout</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {[\r\n                  { id: 1, name: 'Wireless Headphones', price: '$99.99', inStock: true },\r\n                  { id: 2, name: 'Smart Watch', price: '$249.99', inStock: true },\r\n                  { id: 3, name: 'USB-C Cable', price: '$19.99', inStock: false },\r\n                ].map((item) => (\r\n                  <div key={item.id} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\r\n                    <Checkbox \r\n                      id={`item-${item.id}`}\r\n                      defaultChecked={item.inStock}\r\n                      disabled={!item.inStock}\r\n                    />\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor={`item-${item.id}`} className=\"font-medium\">\r\n                        {item.name}\r\n                      </Label>\r\n                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n                        <span>{item.price}</span>\r\n                        {!item.inStock && (\r\n                          <Badge variant=\"secondary\" className=\"text-xs\">\r\n                            Out of Stock\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <Button variant=\"ghost\" size=\"sm\">\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <Separator className=\"my-4\" />\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"gift\" />\r\n                  <Label htmlFor=\"gift\" className=\"text-sm\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Gift className=\"h-4 w-4\" />\r\n                      This order is a gift\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"insurance\" />\r\n                  <Label htmlFor=\"insurance\" className=\"text-sm\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Shield className=\"h-4 w-4\" />\r\n                      Add shipping insurance (+$4.99)\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">\r\n                Proceed to Checkout\r\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Accessibility */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Accessibility</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Checkbox components are built with accessibility in mind\r\n        </p>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-base\">Keyboard Navigation</CardTitle>\r\n            <CardDescription>All checkboxes support keyboard interaction</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <Alert>\r\n              <Info className=\"h-4 w-4\" />\r\n              <AlertDescription>\r\n                <strong>Keyboard shortcuts:</strong>\r\n                <ul className=\"mt-2 space-y-1 text-sm\">\r\n                  <li>• <kbd>Tab</kbd> - Navigate between checkboxes</li>\r\n                  <li>• <kbd>Space</kbd> - Toggle checkbox state</li>\r\n                  <li>• <kbd>Enter</kbd> - Submit form (when in a form)</li>\r\n                </ul>\r\n              </AlertDescription>\r\n            </Alert>\r\n            \r\n            <div className=\"space-y-4 pt-4\">\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"text-sm font-medium\">Screen Reader Support</h4>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  All checkboxes include proper ARIA labels and states for screen readers\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"a11y-1\" aria-label=\"Enable screen reader announcements\" />\r\n                  <Label htmlFor=\"a11y-1\">With aria-label attribute</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"a11y-2\" aria-describedby=\"a11y-2-desc\" />\r\n                  <Label htmlFor=\"a11y-2\">With description</Label>\r\n                </div>\r\n                <p id=\"a11y-2-desc\" className=\"text-sm text-muted-foreground ml-6\">\r\n                  This checkbox has additional context via aria-describedby\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Form Integration Example */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Integration</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Using checkboxes within forms with validation\r\n        </p>\r\n        <Card className=\"max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle>Subscription Preferences</CardTitle>\r\n            <CardDescription>Manage your email subscriptions</CardDescription>\r\n          </CardHeader>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            alert('Form submitted! Check console for values')\r\n            console.log('Form values:', preferences)\r\n          }}>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"text-sm font-medium\">Content Types</h4>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"news\" name=\"content\" value=\"news\" defaultChecked />\r\n                      <Label htmlFor=\"news\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <FileText className=\"h-4 w-4\" />\r\n                          News & Updates\r\n                        </span>\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"tutorials\" name=\"content\" value=\"tutorials\" />\r\n                      <Label htmlFor=\"tutorials\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Code className=\"h-4 w-4\" />\r\n                          Tutorials & Guides\r\n                        </span>\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"offers\" name=\"content\" value=\"offers\" defaultChecked />\r\n                      <Label htmlFor=\"offers\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Gift className=\"h-4 w-4\" />\r\n                          Special Offers\r\n                        </span>\r\n                      </Label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <Separator />\r\n\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"text-sm font-medium\">Frequency</h4>\r\n                  <RadioGroup defaultValue=\"weekly\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"daily\" id=\"daily\" />\r\n                      <Label htmlFor=\"daily\">Daily digest</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"weekly\" id=\"weekly\" />\r\n                      <Label htmlFor=\"weekly\">Weekly summary</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"monthly\" id=\"monthly\" />\r\n                      <Label htmlFor=\"monthly\">Monthly newsletter</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button type=\"button\" variant=\"ghost\">Cancel</Button>\r\n              <Button type=\"submit\">Save Preferences</Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "dialog.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/dialog.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  Textarea,\r\n  Switch,\r\n  Badge,\r\n  Alert,\r\n  AlertDescription,\r\n  Checkbox,\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@lightmind/ui\"\r\nimport { \r\n  Trash2,\r\n  AlertCircle,\r\n  Save,\r\n  X,\r\n  Plus,\r\n  Edit,\r\n  Settings,\r\n  User,\r\n  Upload,\r\n  Download,\r\n  Share2,\r\n  Copy,\r\n  Check,\r\n  Info,\r\n  FileText,\r\n  Image as ImageIcon,\r\n  Video,\r\n  Music,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  ZoomIn,\r\n  ZoomOut,\r\n  RotateCw,\r\n  Maximize2,\r\n  LogOut,\r\n  UserX,\r\n  AlertTriangle,\r\n  HelpCircle,\r\n  Terminal,\r\n  Code,\r\n  Database,\r\n  CreditCard,\r\n  Mail,\r\n  Phone,\r\n  MapPin,\r\n  Calendar,\r\n  Clock,\r\n  RefreshCw,\r\n  Loader2,\r\n  CheckCircle2,\r\n  XCircle,\r\n  Archive,\r\n  Eye,\r\n  EyeOff,\r\n  Shield,\r\n  Key,\r\n  Globe,\r\n  Palette,\r\n  Moon,\r\n  Sun,\r\n  Monitor,\r\n  Smartphone,\r\n  Tablet,\r\n  Laptop,\r\n  MessageSquare,\r\n  Heart,\r\n  Star,\r\n  Flag,\r\n  Bookmark,\r\n  Send,\r\n  Paperclip\r\n} from \"lucide-react\"\r\n\r\nexport function DialogDemo() {\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false)\r\n  const [saveChangesOpen, setSaveChangesOpen] = React.useState(false)\r\n  const [profileOpen, setProfileOpen] = React.useState(false)\r\n  const [settingsOpen, setSettingsOpen] = React.useState(false)\r\n  const [imageViewerOpen, setImageViewerOpen] = React.useState(false)\r\n  const [nestedParentOpen, setNestedParentOpen] = React.useState(false)\r\n  const [nestedChildOpen, setNestedChildOpen] = React.useState(false)\r\n  const [fullScreenOpen, setFullScreenOpen] = React.useState(false)\r\n  const [alertDialogOpen, setAlertDialogOpen] = React.useState(false)\r\n  const [formData, setFormData] = React.useState({\r\n    name: \"John Doe\",\r\n    email: \"john@example.com\",\r\n    bio: \"Software developer passionate about creating great user experiences.\",\r\n    notifications: true,\r\n    theme: \"system\",\r\n    language: \"en\",\r\n    privacy: \"friends\"\r\n  })\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [showPassword, setShowPassword] = React.useState(false)\r\n  const [currentImageIndex, setCurrentImageIndex] = React.useState(0)\r\n  const [termsAccepted, setTermsAccepted] = React.useState(false)\r\n\r\n  const images = [\r\n    { src: \"/api/placeholder/800/600\", title: \"Mountain Landscape\" },\r\n    { src: \"/api/placeholder/800/600\", title: \"Ocean View\" },\r\n    { src: \"/api/placeholder/800/600\", title: \"Forest Path\" },\r\n  ]\r\n\r\n  const handleSaveProfile = async () => {\r\n    setIsLoading(true)\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n    setIsLoading(false)\r\n    setProfileOpen(false)\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    setIsLoading(true)\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n    setIsLoading(false)\r\n    setDeleteDialogOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Dialogs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Dialogs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple dialog examples with different triggers and content\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Basic Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button>Open Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Are you absolutely sure?</DialogTitle>\r\n                <DialogDescription>\r\n                  This action cannot be undone. This will permanently delete your account\r\n                  and remove your data from our servers.\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>Continue</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Dialog without description */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">Simple Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Welcome back!</DialogTitle>\r\n              </DialogHeader>\r\n              <div className=\"py-6\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Your session has been restored. You can continue where you left off.\r\n                </p>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button className=\"w-full\">Got it</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Dialog with custom trigger */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Card className=\"cursor-pointer hover:bg-accent transition-colors\">\r\n                <CardHeader className=\"pb-3\">\r\n                  <CardTitle className=\"text-sm\">Click to open</CardTitle>\r\n                  <CardDescription className=\"text-xs\">\r\n                    Custom trigger example\r\n                  </CardDescription>\r\n                </CardHeader>\r\n              </Card>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Custom Trigger</DialogTitle>\r\n                <DialogDescription>\r\n                  You can use any component as a dialog trigger\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dialog Sizes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Dialog Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Different dialog sizes for various content needs\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Small Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">Small Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"sm\">\r\n              <DialogHeader>\r\n                <DialogTitle>Small Dialog</DialogTitle>\r\n                <DialogDescription>\r\n                  Perfect for quick confirmations\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <p className=\"text-sm\">This is a small dialog with minimal content.</p>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button size=\"sm\" variant=\"outline\">Cancel</Button>\r\n                <Button size=\"sm\">Confirm</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Default Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">Default Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Default Size Dialog</DialogTitle>\r\n                <DialogDescription>\r\n                  The standard dialog size for most use cases\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4 space-y-4\">\r\n                <p className=\"text-sm\">This is the default dialog size, suitable for forms and moderate content.</p>\r\n                <div className=\"grid gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"example\">Example Field</Label>\r\n                    <Input id=\"example\" placeholder=\"Enter something...\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>Save</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Large Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">Large Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"lg\">\r\n              <DialogHeader>\r\n                <DialogTitle>Large Dialog</DialogTitle>\r\n                <DialogDescription>\r\n                  More space for complex forms and content\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4 space-y-4\">\r\n                <div className=\"grid gap-4 md:grid-cols-2\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"firstName\">First Name</Label>\r\n                    <Input id=\"firstName\" placeholder=\"John\" />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"lastName\">Last Name</Label>\r\n                    <Input id=\"lastName\" placeholder=\"Doe\" />\r\n                  </div>\r\n                  <div className=\"grid gap-2 md:col-span-2\">\r\n                    <Label htmlFor=\"address\">Address</Label>\r\n                    <Textarea id=\"address\" placeholder=\"Enter your address...\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>Save Changes</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Extra Large Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">Extra Large Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"xl\">\r\n              <DialogHeader>\r\n                <DialogTitle>Extra Large Dialog</DialogTitle>\r\n                <DialogDescription>\r\n                  Maximum space for detailed content and complex layouts\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <div className=\"grid gap-6 md:grid-cols-3\">\r\n                  {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                    <Card key={i}>\r\n                      <CardHeader>\r\n                        <CardTitle className=\"text-base\">Card {i}</CardTitle>\r\n                        <CardDescription className=\"text-sm\">\r\n                          Example content in a grid layout\r\n                        </CardDescription>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          This demonstrates how extra large dialogs can contain complex layouts.\r\n                        </p>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Close</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Dialogs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Dialogs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Dialogs with form inputs and validation\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Contact Form Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Mail className=\"mr-2 h-4 w-4\" />\r\n                Contact Form\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Contact Us</DialogTitle>\r\n                <DialogDescription>\r\n                  Send us a message and we'll get back to you soon.\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-4 py-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"contact-name\">Name</Label>\r\n                  <Input id=\"contact-name\" placeholder=\"Your name\" />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"contact-email\">Email</Label>\r\n                  <Input id=\"contact-email\" type=\"email\" placeholder=\"you@example.com\" />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"contact-subject\">Subject</Label>\r\n                  <Select>\r\n                    <SelectTrigger id=\"contact-subject\">\r\n                      <SelectValue placeholder=\"Select a subject\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"general\">General Inquiry</SelectItem>\r\n                      <SelectItem value=\"support\">Technical Support</SelectItem>\r\n                      <SelectItem value=\"billing\">Billing Question</SelectItem>\r\n                      <SelectItem value=\"feedback\">Feedback</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"contact-message\">Message</Label>\r\n                  <Textarea \r\n                    id=\"contact-message\" \r\n                    placeholder=\"Type your message here...\" \r\n                    className=\"min-h-[100px]\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>\r\n                  <Send className=\"mr-2 h-4 w-4\" />\r\n                  Send Message\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Login Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <User className=\"mr-2 h-4 w-4\" />\r\n                Login\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"sm\">\r\n              <DialogHeader>\r\n                <DialogTitle>Welcome back</DialogTitle>\r\n                <DialogDescription>\r\n                  Enter your credentials to access your account\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-4 py-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"login-email\">Email</Label>\r\n                  <Input \r\n                    id=\"login-email\" \r\n                    type=\"email\" \r\n                    placeholder=\"name@example.com\" \r\n                    autoComplete=\"email\"\r\n                  />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label htmlFor=\"login-password\">Password</Label>\r\n                    <Button variant=\"link\" className=\"px-0 font-normal\" size=\"sm\">\r\n                      Forgot password?\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"relative\">\r\n                    <Input \r\n                      id=\"login-password\" \r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                    >\r\n                      {showPassword ? (\r\n                        <EyeOff className=\"h-4 w-4\" />\r\n                      ) : (\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"remember\" />\r\n                  <Label \r\n                    htmlFor=\"remember\" \r\n                    className=\"text-sm font-normal cursor-pointer\"\r\n                  >\r\n                    Remember me\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n              <DialogFooter className=\"flex-col space-y-2\">\r\n                <Button className=\"w-full\">Sign in</Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <Globe className=\"mr-2 h-4 w-4\" />\r\n                  Sign in with Google\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Payment Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <CreditCard className=\"mr-2 h-4 w-4\" />\r\n                Payment\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Payment Information</DialogTitle>\r\n                <DialogDescription>\r\n                  Add your payment details to complete the purchase\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-4 py-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"card-number\">Card Number</Label>\r\n                  <Input \r\n                    id=\"card-number\" \r\n                    placeholder=\"1234 5678 9012 3456\"\r\n                    maxLength={19}\r\n                  />\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"expiry\">Expiry Date</Label>\r\n                    <Input \r\n                      id=\"expiry\" \r\n                      placeholder=\"MM/YY\"\r\n                      maxLength={5}\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"cvc\">CVC</Label>\r\n                    <Input \r\n                      id=\"cvc\" \r\n                      placeholder=\"123\"\r\n                      maxLength={3}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"card-name\">Name on Card</Label>\r\n                  <Input id=\"card-name\" placeholder=\"John Doe\" />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"save-card\" />\r\n                  <Label \r\n                    htmlFor=\"save-card\" \r\n                    className=\"text-sm font-normal cursor-pointer\"\r\n                  >\r\n                    Save card for future purchases\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>\r\n                  <Shield className=\"mr-2 h-4 w-4\" />\r\n                  Pay Securely\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirmation Dialogs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Confirmation Dialogs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Important actions that require user confirmation\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Delete Confirmation */}\r\n          <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"destructive\">\r\n                <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                Delete Account\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Delete Account</DialogTitle>\r\n                <DialogDescription>\r\n                  Are you sure you want to delete your account? This action is permanent and cannot be undone.\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <Alert variant=\"destructive\" className=\"my-4\">\r\n                <AlertTriangle className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  All your data will be permanently deleted. This includes your profile, settings, and all associated content.\r\n                </AlertDescription>\r\n              </Alert>\r\n              <div className=\"grid gap-2 py-4\">\r\n                <Label htmlFor=\"confirm-delete\">\r\n                  Type <span className=\"font-mono text-destructive\">DELETE</span> to confirm\r\n                </Label>\r\n                <Input \r\n                  id=\"confirm-delete\" \r\n                  placeholder=\"Type DELETE\"\r\n                  className=\"font-mono\"\r\n                />\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\" \r\n                  onClick={() => setDeleteDialogOpen(false)}\r\n                  disabled={isLoading}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button \r\n                  variant=\"destructive\"\r\n                  onClick={handleDelete}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                      Deleting...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                      Delete Account\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Save Changes Confirmation */}\r\n          <Dialog open={saveChangesOpen} onOpenChange={setSaveChangesOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <Save className=\"mr-2 h-4 w-4\" />\r\n                Save Changes\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"sm\">\r\n              <DialogHeader>\r\n                <DialogTitle>Save Changes?</DialogTitle>\r\n                <DialogDescription>\r\n                  You have unsaved changes. Do you want to save them before leaving?\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <DialogFooter className=\"mt-4\">\r\n                <Button \r\n                  variant=\"outline\" \r\n                  onClick={() => setSaveChangesOpen(false)}\r\n                >\r\n                  Discard\r\n                </Button>\r\n                <Button \r\n                  variant=\"secondary\"\r\n                  onClick={() => setSaveChangesOpen(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={() => setSaveChangesOpen(false)}>\r\n                  Save Changes\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Archive Confirmation */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <Archive className=\"mr-2 h-4 w-4\" />\r\n                Archive\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Archive this item?</DialogTitle>\r\n                <DialogDescription>\r\n                  This item will be moved to your archive. You can restore it anytime from the archive section.\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\r\n                  <Info className=\"h-4 w-4\" />\r\n                  <span>Archived items are kept for 30 days before permanent deletion.</span>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>\r\n                  <Archive className=\"mr-2 h-4 w-4\" />\r\n                  Archive Item\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Logout Confirmation */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <LogOut className=\"mr-2 h-4 w-4\" />\r\n                Logout\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"sm\">\r\n              <DialogHeader>\r\n                <DialogTitle>Logout</DialogTitle>\r\n                <DialogDescription>\r\n                  Are you sure you want to logout?\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <DialogFooter className=\"mt-4\">\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button variant=\"destructive\">\r\n                  <LogOut className=\"mr-2 h-4 w-4\" />\r\n                  Logout\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scrollable Content */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Scrollable Content</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Dialogs with long content that requires scrolling\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Terms and Conditions */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <FileText className=\"mr-2 h-4 w-4\" />\r\n                Terms & Conditions\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"max-h-[80vh]\">\r\n              <DialogHeader>\r\n                <DialogTitle>Terms and Conditions</DialogTitle>\r\n                <DialogDescription>\r\n                  Last updated: March 15, 2024\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"overflow-y-auto max-h-[50vh] space-y-4 pr-4\">\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">1. Introduction</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Welcome to our service. By using our service, you agree to these terms. \r\n                    Please read them carefully. These Terms and Conditions (\"Terms\", \"Terms and Conditions\") \r\n                    govern your relationship with our website.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">2. Use License</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Permission is granted to temporarily download one copy of the materials \r\n                    (information or software) on our website for personal, non-commercial \r\n                    transitory viewing only. This is the grant of a license, not a transfer of title.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">3. Disclaimer</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    The materials on our website are provided on an 'as is' basis. We make no warranties, \r\n                    expressed or implied, and hereby disclaim and negate all other warranties including, \r\n                    without limitation, implied warranties or conditions of merchantability.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">4. Limitations</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    In no event shall our company or its suppliers be liable for any damages \r\n                    (including, without limitation, damages for loss of data or profit, or due to \r\n                    business interruption) arising out of the use or inability to use materials.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">5. Privacy Policy</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Your privacy is important to us. Our Privacy Policy explains how we collect, \r\n                    use, and protect your information when you use our service. By using our service, \r\n                    you agree to the collection and use of information in accordance with our Privacy Policy.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-2\">6. Governing Law</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    These terms and conditions are governed by and construed in accordance with \r\n                    the laws of the United States and you irrevocably submit to the exclusive \r\n                    jurisdiction of the courts in that State or location.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 pt-4\">\r\n                <Checkbox \r\n                  id=\"accept-terms\" \r\n                  checked={termsAccepted}\r\n                  onCheckedChange={(checked) => setTermsAccepted(checked as boolean)}\r\n                />\r\n                <Label \r\n                  htmlFor=\"accept-terms\" \r\n                  className=\"text-sm font-normal cursor-pointer\"\r\n                >\r\n                  I have read and agree to the terms and conditions\r\n                </Label>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Decline</Button>\r\n                <Button disabled={!termsAccepted}>Accept</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Help Documentation */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <HelpCircle className=\"mr-2 h-4 w-4\" />\r\n                Help Center\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"lg\" className=\"max-h-[80vh]\">\r\n              <DialogHeader>\r\n                <DialogTitle>Help Center</DialogTitle>\r\n                <DialogDescription>\r\n                  Find answers to common questions\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"overflow-y-auto max-h-[50vh] space-y-6 pr-4\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\r\n                      <User className=\"mr-2 h-4 w-4\" />\r\n                      Getting Started\r\n                    </h4>\r\n                    <div className=\"space-y-2 ml-6\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I create an account?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        What are the system requirements?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I reset my password?\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\r\n                      <Settings className=\"mr-2 h-4 w-4\" />\r\n                      Account Settings\r\n                    </h4>\r\n                    <div className=\"space-y-2 ml-6\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I change my email address?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I update my profile?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I delete my account?\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\r\n                      <CreditCard className=\"mr-2 h-4 w-4\" />\r\n                      Billing & Payments\r\n                    </h4>\r\n                    <div className=\"space-y-2 ml-6\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        What payment methods do you accept?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I update my payment information?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I cancel my subscription?\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-2 flex items-center\">\r\n                      <Shield className=\"mr-2 h-4 w-4\" />\r\n                      Security & Privacy\r\n                    </h4>\r\n                    <div className=\"space-y-2 ml-6\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How is my data protected?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        What is two-factor authentication?\r\n                      </p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        How do I report a security issue?\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">\r\n                  <MessageSquare className=\"mr-2 h-4 w-4\" />\r\n                  Contact Support\r\n                </Button>\r\n                <Button>Close</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Custom Footer Actions */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Custom Footer Actions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Dialogs with custom footer layouts and multiple actions\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Share Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Share2 className=\"mr-2 h-4 w-4\" />\r\n                Share\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Share this page</DialogTitle>\r\n                <DialogDescription>\r\n                  Anyone with the link can view this page\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"flex items-center space-x-2 py-4\">\r\n                <Input \r\n                  value=\"https://example.com/shared/abc123\" \r\n                  readOnly \r\n                  className=\"flex-1\"\r\n                />\r\n                <Button size=\"sm\" variant=\"secondary\">\r\n                  <Copy className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n              <div className=\"grid grid-cols-4 gap-4\">\r\n                <Button variant=\"outline\" size=\"sm\" className=\"flex flex-col items-center gap-2 h-auto py-4\">\r\n                  <Mail className=\"h-4 w-4\" />\r\n                  <span className=\"text-xs\">Email</span>\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"flex flex-col items-center gap-2 h-auto py-4\">\r\n                  <MessageSquare className=\"h-4 w-4\" />\r\n                  <span className=\"text-xs\">SMS</span>\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"flex flex-col items-center gap-2 h-auto py-4\">\r\n                  <Code className=\"h-4 w-4\" />\r\n                  <span className=\"text-xs\">Embed</span>\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"flex flex-col items-center gap-2 h-auto py-4\">\r\n                  <Globe className=\"h-4 w-4\" />\r\n                  <span className=\"text-xs\">More</span>\r\n                </Button>\r\n              </div>\r\n              <DialogFooter>\r\n                <div className=\"flex items-center justify-between w-full\">\r\n                  <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\r\n                    <Info className=\"h-4 w-4\" />\r\n                    <span>Link expires in 7 days</span>\r\n                  </div>\r\n                  <Button>Done</Button>\r\n                </div>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Multi-action Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <Download className=\"mr-2 h-4 w-4\" />\r\n                Export Options\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Export Data</DialogTitle>\r\n                <DialogDescription>\r\n                  Choose your export format and options\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-4 py-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label>Format</Label>\r\n                  <Select defaultValue=\"csv\">\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"csv\">CSV</SelectItem>\r\n                      <SelectItem value=\"excel\">Excel</SelectItem>\r\n                      <SelectItem value=\"pdf\">PDF</SelectItem>\r\n                      <SelectItem value=\"json\">JSON</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label>Date Range</Label>\r\n                  <Select defaultValue=\"all\">\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Time</SelectItem>\r\n                      <SelectItem value=\"year\">This Year</SelectItem>\r\n                      <SelectItem value=\"month\">This Month</SelectItem>\r\n                      <SelectItem value=\"week\">This Week</SelectItem>\r\n                      <SelectItem value=\"custom\">Custom Range</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Include</Label>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"include-images\" defaultChecked />\r\n                      <Label htmlFor=\"include-images\" className=\"text-sm font-normal cursor-pointer\">\r\n                        Images and attachments\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"include-comments\" defaultChecked />\r\n                      <Label htmlFor=\"include-comments\" className=\"text-sm font-normal cursor-pointer\">\r\n                        Comments and notes\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox id=\"include-metadata\" />\r\n                      <Label htmlFor=\"include-metadata\" className=\"text-sm font-normal cursor-pointer\">\r\n                        Metadata and timestamps\r\n                      </Label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <div className=\"flex items-center justify-between w-full\">\r\n                  <Button variant=\"ghost\" size=\"sm\">\r\n                    <Clock className=\"mr-2 h-4 w-4\" />\r\n                    Schedule Export\r\n                  </Button>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button variant=\"outline\">Cancel</Button>\r\n                    <Button>\r\n                      <Download className=\"mr-2 h-4 w-4\" />\r\n                      Export Now\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Nested Dialogs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Nested Dialogs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Dialogs that can open other dialogs\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Dialog open={nestedParentOpen} onOpenChange={setNestedParentOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button>Open Nested Dialog</Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Parent Dialog</DialogTitle>\r\n                <DialogDescription>\r\n                  This dialog can open another dialog\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <p className=\"text-sm text-muted-foreground mb-4\">\r\n                  Click the button below to open a nested dialog. The parent dialog will remain open in the background.\r\n                </p>\r\n                <Dialog open={nestedChildOpen} onOpenChange={setNestedChildOpen}>\r\n                  <DialogTrigger asChild>\r\n                    <Button variant=\"outline\">Open Child Dialog</Button>\r\n                  </DialogTrigger>\r\n                  <DialogContent>\r\n                    <DialogHeader>\r\n                      <DialogTitle>Child Dialog</DialogTitle>\r\n                      <DialogDescription>\r\n                        This is a nested dialog\r\n                      </DialogDescription>\r\n                    </DialogHeader>\r\n                    <div className=\"py-4\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        This dialog is opened from within another dialog. You can close this to return to the parent.\r\n                      </p>\r\n                    </div>\r\n                    <DialogFooter>\r\n                      <Button \r\n                        variant=\"outline\" \r\n                        onClick={() => setNestedChildOpen(false)}\r\n                      >\r\n                        Close Child\r\n                      </Button>\r\n                      <Button \r\n                        onClick={() => {\r\n                          setNestedChildOpen(false)\r\n                          setNestedParentOpen(false)\r\n                        }}\r\n                      >\r\n                        Close All\r\n                      </Button>\r\n                    </DialogFooter>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\" \r\n                  onClick={() => setNestedParentOpen(false)}\r\n                >\r\n                  Close Parent\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Full-screen Dialog */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Full-screen Dialog</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Dialog that takes up the entire viewport\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Dialog open={fullScreenOpen} onOpenChange={setFullScreenOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Maximize2 className=\"mr-2 h-4 w-4\" />\r\n                Open Fullscreen\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"full\" className=\"h-screen max-h-screen\">\r\n              <DialogHeader>\r\n                <DialogTitle>Full-screen View</DialogTitle>\r\n                <DialogDescription>\r\n                  This dialog takes up the entire screen\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"flex-1 overflow-auto py-4\">\r\n                <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                  {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                    <Card key={i}>\r\n                      <CardHeader>\r\n                        <CardTitle>Card {i}</CardTitle>\r\n                        <CardDescription>\r\n                          Example content in fullscreen mode\r\n                        </CardDescription>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"aspect-video bg-muted rounded flex items-center justify-center\">\r\n                          <ImageIcon className=\"h-12 w-12 text-muted-foreground\" />\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\"\r\n                  onClick={() => setFullScreenOpen(false)}\r\n                >\r\n                  <X className=\"mr-2 h-4 w-4\" />\r\n                  Close Fullscreen\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Alert Dialogs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Alert Dialogs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Non-dismissible dialogs for critical alerts\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <Dialog open={alertDialogOpen} onOpenChange={setAlertDialogOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"destructive\">\r\n                <AlertCircle className=\"mr-2 h-4 w-4\" />\r\n                Critical Alert\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent \r\n              onPointerDownOutside={(e) => e.preventDefault()}\r\n              onEscapeKeyDown={(e) => e.preventDefault()}\r\n            >\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center text-destructive\">\r\n                  <AlertCircle className=\"mr-2 h-5 w-5\" />\r\n                  Critical System Error\r\n                </DialogTitle>\r\n                <DialogDescription>\r\n                  An unexpected error has occurred. Please save your work and restart the application.\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <Alert variant=\"destructive\">\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    Error Code: SYS_CRITICAL_001<br />\r\n                    Unable to save changes. Data may be lost if you continue.\r\n                  </AlertDescription>\r\n                </Alert>\r\n                <div className=\"mt-4 space-y-2\">\r\n                  <p className=\"text-sm font-semibold\">Recommended Actions:</p>\r\n                  <ul className=\"text-sm text-muted-foreground space-y-1 list-disc list-inside\">\r\n                    <li>Save any unsaved work immediately</li>\r\n                    <li>Close all other applications</li>\r\n                    <li>Restart the application</li>\r\n                    <li>Contact support if the issue persists</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\"\r\n                  onClick={() => setAlertDialogOpen(false)}\r\n                >\r\n                  Ignore Risk\r\n                </Button>\r\n                <Button \r\n                  variant=\"destructive\"\r\n                  onClick={() => setAlertDialogOpen(false)}\r\n                >\r\n                  Restart Now\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Success Alert */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <CheckCircle2 className=\"mr-2 h-4 w-4\" />\r\n                Success Alert\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"sm\">\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center text-green-600\">\r\n                  <CheckCircle2 className=\"mr-2 h-5 w-5\" />\r\n                  Success!\r\n                </DialogTitle>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Your changes have been saved successfully. You can now continue with your work.\r\n                </p>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button className=\"w-full\">Continue</Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Warning Alert */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <AlertTriangle className=\"mr-2 h-4 w-4\" />\r\n                Warning Alert\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center text-yellow-600\">\r\n                  <AlertTriangle className=\"mr-2 h-5 w-5\" />\r\n                  Warning\r\n                </DialogTitle>\r\n                <DialogDescription>\r\n                  Your session will expire in 5 minutes\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"py-4\">\r\n                <Alert variant=\"warning\">\r\n                  <AlertTriangle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    Due to inactivity, your session will automatically expire. \r\n                    Any unsaved changes will be lost.\r\n                  </AlertDescription>\r\n                </Alert>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Logout Now</Button>\r\n                <Button>\r\n                  <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                  Extend Session\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-world Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Complete dialog implementations for common use cases\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {/* Profile Edit Dialog */}\r\n          <Dialog open={profileOpen} onOpenChange={setProfileOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Edit className=\"mr-2 h-4 w-4\" />\r\n                Edit Profile\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"lg\">\r\n              <DialogHeader>\r\n                <DialogTitle>Edit Profile</DialogTitle>\r\n                <DialogDescription>\r\n                  Update your profile information and preferences\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-6 py-4\">\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"relative\">\r\n                    <div className=\"h-20 w-20 rounded-full bg-muted flex items-center justify-center\">\r\n                      <User className=\"h-8 w-8 text-muted-foreground\" />\r\n                    </div>\r\n                    <Button \r\n                      size=\"icon\" \r\n                      variant=\"secondary\" \r\n                      className=\"absolute -bottom-1 -right-1 h-8 w-8 rounded-full\"\r\n                    >\r\n                      <Upload className=\"h-3 w-3\" />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <h4 className=\"font-semibold\">{formData.name}</h4>\r\n                    <p className=\"text-sm text-muted-foreground\">{formData.email}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid gap-4 md:grid-cols-2\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"profile-name\">Name</Label>\r\n                    <Input \r\n                      id=\"profile-name\" \r\n                      value={formData.name}\r\n                      onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"profile-email\">Email</Label>\r\n                    <Input \r\n                      id=\"profile-email\" \r\n                      type=\"email\" \r\n                      value={formData.email}\r\n                      onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"profile-bio\">Bio</Label>\r\n                  <Textarea \r\n                    id=\"profile-bio\" \r\n                    value={formData.bio}\r\n                    onChange={(e) => setFormData({...formData, bio: e.target.value})}\r\n                    className=\"min-h-[100px]\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-sm font-semibold\">Privacy Settings</h4>\r\n                  <div className=\"grid gap-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"space-y-0.5\">\r\n                        <Label htmlFor=\"profile-privacy\">Profile Visibility</Label>\r\n                        <p className=\"text-xs text-muted-foreground\">Control who can see your profile</p>\r\n                      </div>\r\n                      <Select \r\n                        value={formData.privacy}\r\n                        onValueChange={(value) => setFormData({...formData, privacy: value})}\r\n                      >\r\n                        <SelectTrigger className=\"w-[150px]\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"public\">Public</SelectItem>\r\n                          <SelectItem value=\"friends\">Friends Only</SelectItem>\r\n                          <SelectItem value=\"private\">Private</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"space-y-0.5\">\r\n                        <Label htmlFor=\"profile-notifications\">Email Notifications</Label>\r\n                        <p className=\"text-xs text-muted-foreground\">Receive updates via email</p>\r\n                      </div>\r\n                      <Switch \r\n                        id=\"profile-notifications\"\r\n                        checked={formData.notifications}\r\n                        onCheckedChange={(checked) => setFormData({...formData, notifications: checked})}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\" \r\n                  onClick={() => setProfileOpen(false)}\r\n                  disabled={isLoading}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button \r\n                  onClick={handleSaveProfile}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                      Saving...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Save className=\"mr-2 h-4 w-4\" />\r\n                      Save Changes\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Settings Dialog */}\r\n          <Dialog open={settingsOpen} onOpenChange={setSettingsOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <Settings className=\"mr-2 h-4 w-4\" />\r\n                Settings\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"xl\" className=\"max-h-[90vh]\">\r\n              <DialogHeader>\r\n                <DialogTitle>Settings</DialogTitle>\r\n                <DialogDescription>\r\n                  Manage your application preferences\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"flex gap-6 py-4\">\r\n                <div className=\"w-48 space-y-1\">\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <User className=\"mr-2 h-4 w-4\" />\r\n                    Account\r\n                  </Button>\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <Palette className=\"mr-2 h-4 w-4\" />\r\n                    Appearance\r\n                  </Button>\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <Bell className=\"mr-2 h-4 w-4\" />\r\n                    Notifications\r\n                  </Button>\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <Shield className=\"mr-2 h-4 w-4\" />\r\n                    Security\r\n                  </Button>\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <Globe className=\"mr-2 h-4 w-4\" />\r\n                    Language\r\n                  </Button>\r\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\r\n                    <Database className=\"mr-2 h-4 w-4\" />\r\n                    Data & Privacy\r\n                  </Button>\r\n                </div>\r\n                <div className=\"flex-1 space-y-6\">\r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-4\">Appearance</h4>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"grid gap-2\">\r\n                        <Label>Theme</Label>\r\n                        <div className=\"grid grid-cols-3 gap-2\">\r\n                          <Button \r\n                            variant={formData.theme === \"light\" ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => setFormData({...formData, theme: \"light\"})}\r\n                          >\r\n                            <Sun className=\"mr-2 h-4 w-4\" />\r\n                            Light\r\n                          </Button>\r\n                          <Button \r\n                            variant={formData.theme === \"dark\" ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => setFormData({...formData, theme: \"dark\"})}\r\n                          >\r\n                            <Moon className=\"mr-2 h-4 w-4\" />\r\n                            Dark\r\n                          </Button>\r\n                          <Button \r\n                            variant={formData.theme === \"system\" ? \"default\" : \"outline\"}\r\n                            size=\"sm\"\r\n                            onClick={() => setFormData({...formData, theme: \"system\"})}\r\n                          >\r\n                            <Monitor className=\"mr-2 h-4 w-4\" />\r\n                            System\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"grid gap-2\">\r\n                        <Label>Display Density</Label>\r\n                        <Select defaultValue=\"comfortable\">\r\n                          <SelectTrigger>\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"compact\">Compact</SelectItem>\r\n                            <SelectItem value=\"comfortable\">Comfortable</SelectItem>\r\n                            <SelectItem value=\"spacious\">Spacious</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <h4 className=\"font-semibold mb-4\">Language & Region</h4>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"grid gap-2\">\r\n                        <Label>Language</Label>\r\n                        <Select \r\n                          value={formData.language}\r\n                          onValueChange={(value) => setFormData({...formData, language: value})}\r\n                        >\r\n                          <SelectTrigger>\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"en\">English</SelectItem>\r\n                            <SelectItem value=\"es\">Español</SelectItem>\r\n                            <SelectItem value=\"fr\">Français</SelectItem>\r\n                            <SelectItem value=\"de\">Deutsch</SelectItem>\r\n                            <SelectItem value=\"ja\">日本語</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                      <div className=\"grid gap-2\">\r\n                        <Label>Time Zone</Label>\r\n                        <Select defaultValue=\"utc-5\">\r\n                          <SelectTrigger>\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"utc-8\">Pacific Time (UTC-8)</SelectItem>\r\n                            <SelectItem value=\"utc-5\">Eastern Time (UTC-5)</SelectItem>\r\n                            <SelectItem value=\"utc\">UTC</SelectItem>\r\n                            <SelectItem value=\"utc+1\">Central European Time (UTC+1)</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button \r\n                  variant=\"outline\"\r\n                  onClick={() => setSettingsOpen(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={() => setSettingsOpen(false)}>\r\n                  Save Settings\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Image Viewer Dialog */}\r\n          <Dialog open={imageViewerOpen} onOpenChange={setImageViewerOpen}>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <ImageIcon className=\"mr-2 h-4 w-4\" />\r\n                Image Viewer\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent size=\"full\" className=\"h-screen max-h-screen p-0\">\r\n              <div className=\"flex flex-col h-full\">\r\n                <div className=\"flex items-center justify-between p-4 border-b\">\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <h3 className=\"font-semibold\">{images[currentImageIndex].title}</h3>\r\n                    <Badge variant=\"secondary\">\r\n                      {currentImageIndex + 1} / {images.length}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Button size=\"icon\" variant=\"ghost\">\r\n                      <ZoomOut className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button size=\"icon\" variant=\"ghost\">\r\n                      <ZoomIn className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button size=\"icon\" variant=\"ghost\">\r\n                      <RotateCw className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button size=\"icon\" variant=\"ghost\">\r\n                      <Download className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <DialogClose asChild>\r\n                      <Button size=\"icon\" variant=\"ghost\">\r\n                        <X className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </DialogClose>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-1 bg-black relative\">\r\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                    <div className=\"bg-muted h-96 w-96 rounded flex items-center justify-center\">\r\n                      <ImageIcon className=\"h-24 w-24 text-muted-foreground\" />\r\n                    </div>\r\n                  </div>\r\n                  <Button \r\n                    size=\"icon\" \r\n                    variant=\"ghost\" \r\n                    className=\"absolute left-4 top-1/2 -translate-y-1/2 text-white hover:bg-white/20\"\r\n                    onClick={() => setCurrentImageIndex(Math.max(0, currentImageIndex - 1))}\r\n                    disabled={currentImageIndex === 0}\r\n                  >\r\n                    <ChevronLeft className=\"h-6 w-6\" />\r\n                  </Button>\r\n                  <Button \r\n                    size=\"icon\" \r\n                    variant=\"ghost\" \r\n                    className=\"absolute right-4 top-1/2 -translate-y-1/2 text-white hover:bg-white/20\"\r\n                    onClick={() => setCurrentImageIndex(Math.min(images.length - 1, currentImageIndex + 1))}\r\n                    disabled={currentImageIndex === images.length - 1}\r\n                  >\r\n                    <ChevronRight className=\"h-6 w-6\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"p-4 border-t\">\r\n                  <div className=\"flex gap-2 justify-center\">\r\n                    {images.map((_, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className={`h-2 w-2 rounded-full transition-colors ${\r\n                          index === currentImageIndex ? \"bg-primary\" : \"bg-muted-foreground/30\"\r\n                        }`}\r\n                        onClick={() => setCurrentImageIndex(index)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Feedback Dialog */}\r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button variant=\"outline\">\r\n                <MessageSquare className=\"mr-2 h-4 w-4\" />\r\n                Send Feedback\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent>\r\n              <DialogHeader>\r\n                <DialogTitle>Send Feedback</DialogTitle>\r\n                <DialogDescription>\r\n                  We'd love to hear your thoughts about our product\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"grid gap-4 py-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label>How would you rate your experience?</Label>\r\n                  <div className=\"flex gap-1\">\r\n                    {[1, 2, 3, 4, 5].map((rating) => (\r\n                      <Button\r\n                        key={rating}\r\n                        size=\"icon\"\r\n                        variant=\"ghost\"\r\n                        className=\"hover:text-yellow-500\"\r\n                      >\r\n                        <Star className=\"h-5 w-5\" />\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"feedback-type\">Feedback Type</Label>\r\n                  <Select>\r\n                    <SelectTrigger id=\"feedback-type\">\r\n                      <SelectValue placeholder=\"Select type\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"bug\">Bug Report</SelectItem>\r\n                      <SelectItem value=\"feature\">Feature Request</SelectItem>\r\n                      <SelectItem value=\"improvement\">Improvement</SelectItem>\r\n                      <SelectItem value=\"compliment\">Compliment</SelectItem>\r\n                      <SelectItem value=\"other\">Other</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"feedback-message\">Your Feedback</Label>\r\n                  <Textarea \r\n                    id=\"feedback-message\"\r\n                    placeholder=\"Tell us what you think...\"\r\n                    className=\"min-h-[120px]\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Checkbox id=\"feedback-followup\" />\r\n                  <Label \r\n                    htmlFor=\"feedback-followup\" \r\n                    className=\"text-sm font-normal cursor-pointer\"\r\n                  >\r\n                    I'd like to be contacted about my feedback\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n              <DialogFooter>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n                <Button>\r\n                  <Send className=\"mr-2 h-4 w-4\" />\r\n                  Send Feedback\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "input.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/input.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Input, Label, Button } from \"@lightmind/ui\"\r\nimport { \r\n  Search, \r\n  Mail, \r\n  Lock, \r\n  User, \r\n  Eye, \r\n  EyeOff,\r\n  X,\r\n  Calendar,\r\n  DollarSign,\r\n  CreditCard,\r\n  Phone,\r\n  MapPin,\r\n  Link,\r\n  AlertCircle,\r\n  Check,\r\n  Loader2,\r\n  AtSign,\r\n  Hash,\r\n  Globe,\r\n  Building,\r\n  Briefcase,\r\n  Home\r\n} from \"lucide-react\"\r\n\r\nexport function InputDemo() {\r\n  const [showPassword, setShowPassword] = React.useState(false)\r\n  const [searchValue, setSearchValue] = React.useState(\"\")\r\n  const [email, setEmail] = React.useState(\"\")\r\n  const [emailError, setEmailError] = React.useState(\"\")\r\n  const [formData, setFormData] = React.useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  })\r\n  const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n\r\n  const validateEmail = (value: string) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    if (!value) {\r\n      setEmailError(\"Email is required\")\r\n    } else if (!emailRegex.test(value)) {\r\n      setEmailError(\"Please enter a valid email address\")\r\n    } else {\r\n      setEmailError(\"\")\r\n    }\r\n  }\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true)\r\n    \r\n    // Simulate form submission\r\n    setTimeout(() => {\r\n      setIsSubmitting(false)\r\n      // Reset form\r\n      setFormData({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      })\r\n      setFormErrors({})\r\n    }, 2000)\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const errors: Record<string, string> = {}\r\n    \r\n    if (!formData.username) {\r\n      errors.username = \"Username is required\"\r\n    }\r\n    \r\n    if (!formData.email) {\r\n      errors.email = \"Email is required\"\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      errors.email = \"Invalid email address\"\r\n    }\r\n    \r\n    if (!formData.password) {\r\n      errors.password = \"Password is required\"\r\n    } else if (formData.password.length < 8) {\r\n      errors.password = \"Password must be at least 8 characters\"\r\n    }\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      errors.confirmPassword = \"Passwords do not match\"\r\n    }\r\n    \r\n    setFormErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Input Types */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Input Types</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Various HTML5 input types with proper attributes</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"text-input\">Text Input</Label>\r\n            <Input id=\"text-input\" type=\"text\" placeholder=\"Enter text...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"email-input\">Email Input</Label>\r\n            <Input id=\"email-input\" type=\"email\" placeholder=\"name@example.com\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"password-input\">Password Input</Label>\r\n            <Input id=\"password-input\" type=\"password\" placeholder=\"Enter password...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"number-input\">Number Input</Label>\r\n            <Input id=\"number-input\" type=\"number\" placeholder=\"0\" min=\"0\" max=\"100\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"tel-input\">Telephone Input</Label>\r\n            <Input id=\"tel-input\" type=\"tel\" placeholder=\"+1 (555) 000-0000\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"url-input\">URL Input</Label>\r\n            <Input id=\"url-input\" type=\"url\" placeholder=\"https://example.com\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"date-input\">Date Input</Label>\r\n            <Input id=\"date-input\" type=\"date\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"time-input\">Time Input</Label>\r\n            <Input id=\"time-input\" type=\"time\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Input States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Different input states for various scenarios</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Default State</Label>\r\n            <Input placeholder=\"Default input...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Focused State</Label>\r\n            <Input placeholder=\"Click to see focus state...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Disabled State</Label>\r\n            <Input placeholder=\"Disabled input...\" disabled />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Read-only State</Label>\r\n            <Input value=\"Read-only value\" readOnly />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Error State</Label>\r\n            <Input \r\n              placeholder=\"Invalid input...\" \r\n              className=\"border-destructive focus-visible:ring-destructive\"\r\n              aria-invalid=\"true\"\r\n            />\r\n            <p className=\"text-sm text-destructive\">This field has an error</p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Success State</Label>\r\n            <Input \r\n              placeholder=\"Valid input...\" \r\n              className=\"border-green-500 focus-visible:ring-green-500\"\r\n              aria-invalid=\"false\"\r\n            />\r\n            <p className=\"text-sm text-green-600\">Looking good!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input with Icons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Input with Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Inputs enhanced with leading and trailing icons</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Search Input</Label>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input \r\n                className=\"pl-10 pr-10\" \r\n                placeholder=\"Search...\" \r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n              {searchValue && (\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"absolute right-1 top-1/2 h-7 w-7 -translate-y-1/2 p-0\"\r\n                  onClick={() => setSearchValue(\"\")}\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Email with Icon</Label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input type=\"email\" className=\"pl-10\" placeholder=\"name@example.com\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Password with Toggle</Label>\r\n            <div className=\"relative\">\r\n              <Lock className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input \r\n                type={showPassword ? \"text\" : \"password\"} \r\n                className=\"pl-10 pr-10\" \r\n                placeholder=\"Enter password...\"\r\n              />\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"absolute right-1 top-1/2 h-7 w-7 -translate-y-1/2 p-0\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Username</Label>\r\n            <div className=\"relative\">\r\n              <AtSign className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input className=\"pl-10\" placeholder=\"johndoe\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Amount</Label>\r\n            <div className=\"relative\">\r\n              <DollarSign className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input type=\"number\" className=\"pl-10\" placeholder=\"0.00\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Phone Number</Label>\r\n            <div className=\"relative\">\r\n              <Phone className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input type=\"tel\" className=\"pl-10\" placeholder=\"+1 (555) 000-0000\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Input Sizes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Input Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Custom input sizes for different use cases</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label size=\"sm\">Small Input</Label>\r\n            <Input className=\"h-8 text-xs\" placeholder=\"Small size...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Default Input</Label>\r\n            <Input placeholder=\"Default size...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label size=\"lg\">Large Input</Label>\r\n            <Input className=\"h-12 text-base\" placeholder=\"Large size...\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Validation Example */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Validation</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Real-time validation with error messages</p>\r\n        \r\n        <div className=\"max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"validation-email\">Email Address</Label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input\r\n                id=\"validation-email\"\r\n                type=\"email\"\r\n                className={`pl-10 pr-10 ${emailError ? 'border-destructive focus-visible:ring-destructive' : email && !emailError ? 'border-green-500 focus-visible:ring-green-500' : ''}`}\r\n                placeholder=\"name@example.com\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value)\r\n                  validateEmail(e.target.value)\r\n                }}\r\n                onBlur={() => validateEmail(email)}\r\n                aria-invalid={!!emailError}\r\n                aria-describedby={emailError ? \"email-error\" : undefined}\r\n              />\r\n              {email && !emailError && (\r\n                <Check className=\"absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-green-500\" />\r\n              )}\r\n              {emailError && (\r\n                <AlertCircle className=\"absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-destructive\" />\r\n              )}\r\n            </div>\r\n            {emailError && (\r\n              <p id=\"email-error\" className=\"text-sm text-destructive\">{emailError}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search Inputs */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Search Inputs</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Various search input patterns</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Basic Search</Label>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input \r\n                type=\"search\" \r\n                className=\"pl-10\" \r\n                placeholder=\"Search...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Search with Clear</Label>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input \r\n                type=\"search\" \r\n                className=\"pl-10 pr-10\" \r\n                placeholder=\"Type to search...\"\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n              {searchValue && (\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  className=\"absolute right-1 top-1/2 h-7 w-7 -translate-y-1/2 p-0\"\r\n                  onClick={() => setSearchValue(\"\")}\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Search with Action</Label>\r\n            <div className=\"flex gap-2\">\r\n              <div className=\"relative flex-1\">\r\n                <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                <Input \r\n                  type=\"search\" \r\n                  className=\"pl-10\" \r\n                  placeholder=\"Search products...\"\r\n                />\r\n              </div>\r\n              <Button>Search</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-world Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Common input patterns in applications</p>\r\n        \r\n        <div className=\"space-y-8\">\r\n          {/* Login Form */}\r\n          <div className=\"max-w-md\">\r\n            <h4 className=\"text-lg font-medium mb-4\">Login Form</h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"login-email\">Email</Label>\r\n                <div className=\"relative\">\r\n                  <Mail className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"login-email\"\r\n                    type=\"email\" \r\n                    className=\"pl-10\" \r\n                    placeholder=\"name@example.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"login-password\">Password</Label>\r\n                <div className=\"relative\">\r\n                  <Lock className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"login-password\"\r\n                    type=\"password\" \r\n                    className=\"pl-10\" \r\n                    placeholder=\"Enter password...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <Button className=\"w-full\">Sign In</Button>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Registration Form */}\r\n          <div className=\"max-w-md\">\r\n            <h4 className=\"text-lg font-medium mb-4\">Registration Form</h4>\r\n            <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"reg-username\">Username</Label>\r\n                <div className=\"relative\">\r\n                  <User className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"reg-username\"\r\n                    className={`pl-10 ${formErrors.username ? 'border-destructive' : ''}`}\r\n                    placeholder=\"johndoe\"\r\n                    value={formData.username}\r\n                    onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n                  />\r\n                </div>\r\n                {formErrors.username && (\r\n                  <p className=\"text-sm text-destructive\">{formErrors.username}</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"reg-email\">Email</Label>\r\n                <div className=\"relative\">\r\n                  <Mail className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"reg-email\"\r\n                    type=\"email\"\r\n                    className={`pl-10 ${formErrors.email ? 'border-destructive' : ''}`}\r\n                    placeholder=\"name@example.com\"\r\n                    value={formData.email}\r\n                    onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n                  />\r\n                </div>\r\n                {formErrors.email && (\r\n                  <p className=\"text-sm text-destructive\">{formErrors.email}</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"reg-password\">Password</Label>\r\n                <div className=\"relative\">\r\n                  <Lock className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"reg-password\"\r\n                    type=\"password\"\r\n                    className={`pl-10 ${formErrors.password ? 'border-destructive' : ''}`}\r\n                    placeholder=\"Min 8 characters...\"\r\n                    value={formData.password}\r\n                    onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                  />\r\n                </div>\r\n                {formErrors.password && (\r\n                  <p className=\"text-sm text-destructive\">{formErrors.password}</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"reg-confirm\">Confirm Password</Label>\r\n                <div className=\"relative\">\r\n                  <Lock className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"reg-confirm\"\r\n                    type=\"password\"\r\n                    className={`pl-10 ${formErrors.confirmPassword ? 'border-destructive' : ''}`}\r\n                    placeholder=\"Confirm password...\"\r\n                    value={formData.confirmPassword}\r\n                    onChange={(e) => setFormData({...formData, confirmPassword: e.target.value})}\r\n                  />\r\n                </div>\r\n                {formErrors.confirmPassword && (\r\n                  <p className=\"text-sm text-destructive\">{formErrors.confirmPassword}</p>\r\n                )}\r\n              </div>\r\n              \r\n              <Button \r\n                type=\"submit\" \r\n                className=\"w-full\"\r\n                disabled={isSubmitting}\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  if (validateForm()) {\r\n                    handleFormSubmit(e)\r\n                  }\r\n                }}\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                    Creating Account...\r\n                  </>\r\n                ) : (\r\n                  'Create Account'\r\n                )}\r\n              </Button>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Payment Form */}\r\n          <div className=\"max-w-md\">\r\n            <h4 className=\"text-lg font-medium mb-4\">Payment Information</h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"card-number\">Card Number</Label>\r\n                <div className=\"relative\">\r\n                  <CreditCard className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"card-number\"\r\n                    className=\"pl-10\" \r\n                    placeholder=\"1234 5678 9012 3456\"\r\n                    maxLength={19}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"expiry\">Expiry Date</Label>\r\n                  <Input \r\n                    id=\"expiry\"\r\n                    placeholder=\"MM/YY\"\r\n                    maxLength={5}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"cvv\">CVV</Label>\r\n                  <Input \r\n                    id=\"cvv\"\r\n                    type=\"number\"\r\n                    placeholder=\"123\"\r\n                    maxLength={3}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"cardholder\">Cardholder Name</Label>\r\n                <Input \r\n                  id=\"cardholder\"\r\n                  placeholder=\"John Doe\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Address Form */}\r\n          <div className=\"max-w-md\">\r\n            <h4 className=\"text-lg font-medium mb-4\">Shipping Address</h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"street\">Street Address</Label>\r\n                <div className=\"relative\">\r\n                  <Home className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"street\"\r\n                    className=\"pl-10\" \r\n                    placeholder=\"123 Main Street\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"city\">City</Label>\r\n                  <div className=\"relative\">\r\n                    <Building className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                    <Input \r\n                      id=\"city\"\r\n                      className=\"pl-10\" \r\n                      placeholder=\"New York\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"state\">State</Label>\r\n                  <Input \r\n                    id=\"state\"\r\n                    placeholder=\"NY\"\r\n                    maxLength={2}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"zip\">ZIP Code</Label>\r\n                  <div className=\"relative\">\r\n                    <MapPin className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                    <Input \r\n                      id=\"zip\"\r\n                      className=\"pl-10\" \r\n                      placeholder=\"10001\"\r\n                      maxLength={5}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"country\">Country</Label>\r\n                  <div className=\"relative\">\r\n                    <Globe className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                    <Input \r\n                      id=\"country\"\r\n                      className=\"pl-10\" \r\n                      placeholder=\"United States\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Profile Form */}\r\n          <div className=\"max-w-md\">\r\n            <h4 className=\"text-lg font-medium mb-4\">Profile Information</h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"display-name\">Display Name</Label>\r\n                <div className=\"relative\">\r\n                  <User className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"display-name\"\r\n                    className=\"pl-10\" \r\n                    placeholder=\"John Doe\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"bio\">Bio</Label>\r\n                <Input \r\n                  id=\"bio\"\r\n                  placeholder=\"Tell us about yourself...\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"website\">Website</Label>\r\n                <div className=\"relative\">\r\n                  <Link className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"website\"\r\n                    type=\"url\"\r\n                    className=\"pl-10\" \r\n                    placeholder=\"https://example.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"company\">Company</Label>\r\n                <div className=\"relative\">\r\n                  <Briefcase className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                  <Input \r\n                    id=\"company\"\r\n                    className=\"pl-10\" \r\n                    placeholder=\"Acme Inc.\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced Patterns */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Advanced Patterns</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Complex input interactions and behaviors</p>\r\n        \r\n        <div className=\"grid gap-6 max-w-md\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Input with Prefix</Label>\r\n            <div className=\"flex\">\r\n              <span className=\"inline-flex items-center rounded-l-md border border-r-0 border-input bg-muted px-3 text-sm text-muted-foreground\">\r\n                https://\r\n              </span>\r\n              <Input \r\n                className=\"rounded-l-none\" \r\n                placeholder=\"example.com\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Input with Suffix</Label>\r\n            <div className=\"flex\">\r\n              <Input \r\n                className=\"rounded-r-none\" \r\n                placeholder=\"username\"\r\n              />\r\n              <span className=\"inline-flex items-center rounded-r-md border border-l-0 border-input bg-muted px-3 text-sm text-muted-foreground\">\r\n                @example.com\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Input Group</Label>\r\n            <div className=\"flex\">\r\n              <Button variant=\"outline\" className=\"rounded-r-none\">\r\n                <DollarSign className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Input \r\n                type=\"number\"\r\n                className=\"rounded-none\" \r\n                placeholder=\"0.00\"\r\n              />\r\n              <Button variant=\"outline\" className=\"rounded-l-none\">\r\n                USD\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Formatted Input</Label>\r\n            <div className=\"relative\">\r\n              <Hash className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n              <Input \r\n                className=\"pl-10 font-mono\" \r\n                placeholder=\"ABC-123-XYZ\"\r\n                style={{ textTransform: 'uppercase' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "radio-group.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/radio-group.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  RadioGroup,\r\n  RadioGroupItem,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Badge,\r\n  Separator,\r\n  Alert,\r\n  AlertDescription,\r\n  Input,\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n  ScrollArea\r\n} from \"@lightmind/ui\"\r\nimport { \r\n  CreditCard,\r\n  Wallet,\r\n  Banknote,\r\n  Bitcoin,\r\n  Zap,\r\n  Rocket,\r\n  Crown,\r\n  Shield,\r\n  Check,\r\n  X,\r\n  Info,\r\n  Settings,\r\n  Sun,\r\n  Moon,\r\n  Monitor,\r\n  Palette,\r\n  Type,\r\n  Globe,\r\n  Lock,\r\n  Users,\r\n  UserCheck,\r\n  UserX,\r\n  Cloud,\r\n  HardDrive,\r\n  Server,\r\n  Package,\r\n  Truck,\r\n  Calendar,\r\n  Clock,\r\n  Timer,\r\n  Building,\r\n  Home,\r\n  Briefcase,\r\n  Heart,\r\n  Star,\r\n  ThumbsUp,\r\n  MessageSquare,\r\n  Volume2,\r\n  VolumeX,\r\n  Wifi,\r\n  WifiOff,\r\n  BatteryLow,\r\n  Battery,\r\n  BatteryCharging,\r\n  Smartphone,\r\n  Laptop,\r\n  Headphones,\r\n  Mic,\r\n  MicOff,\r\n  Camera,\r\n  CameraOff,\r\n  Play,\r\n  Pause,\r\n  SkipForward,\r\n  SkipBack,\r\n  ChevronRight,\r\n  ArrowRight,\r\n  DollarSign,\r\n  Euro,\r\n  PoundSterling,\r\n  IndianRupee,\r\n  Sparkles,\r\n  Gauge,\r\n  Cpu,\r\n  Code,\r\n  GitBranch,\r\n  Bug,\r\n  FileText,\r\n  Mail,\r\n  Phone,\r\n  Video,\r\n  Layers,\r\n  LayoutGrid,\r\n  List,\r\n  BarChart3,\r\n  PieChart,\r\n  TrendingUp,\r\n  Activity,\r\n  Circle\r\n} from \"lucide-react\"\r\n\r\nexport function RadioGroupDemo() {\r\n  // State for controlled examples\r\n  const [paymentMethod, setPaymentMethod] = React.useState(\"card\")\r\n  const [subscription, setSubscription] = React.useState(\"pro\")\r\n  const [theme, setTheme] = React.useState(\"system\")\r\n  const [language, setLanguage] = React.useState(\"en\")\r\n  const [privacy, setPrivacy] = React.useState(\"friends\")\r\n  const [shippingSpeed, setShippingSpeed] = React.useState(\"standard\")\r\n  const [notificationChannel, setNotificationChannel] = React.useState(\"email\")\r\n  const [displayDensity, setDisplayDensity] = React.useState(\"comfortable\")\r\n  const [exportFormat, setExportFormat] = React.useState(\"pdf\")\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = React.useState({\r\n    plan: \"starter\",\r\n    billing: \"monthly\",\r\n    deployment: \"cloud\"\r\n  })\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    alert(`Form submitted!\\n${JSON.stringify(formData, null, 2)}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Usage */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Radio Groups</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple radio group implementations with different configurations\r\n        </p>\r\n        <div className=\"grid gap-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Default Radio Group</CardTitle>\r\n              <CardDescription>Basic radio group with labels</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup defaultValue=\"option-1\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"option-1\" id=\"option-1\" />\r\n                  <Label htmlFor=\"option-1\">Option 1</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"option-2\" id=\"option-2\" />\r\n                  <Label htmlFor=\"option-2\">Option 2</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"option-3\" id=\"option-3\" />\r\n                  <Label htmlFor=\"option-3\">Option 3</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Sizes</CardTitle>\r\n              <CardDescription>Different radio button sizes</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div>\r\n                <Label className=\"text-sm font-medium mb-3 block\">Small</Label>\r\n                <RadioGroup defaultValue=\"small-1\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"small-1\" id=\"small-1\" size=\"sm\" />\r\n                    <Label htmlFor=\"small-1\" className=\"text-sm\">Small option 1</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"small-2\" id=\"small-2\" size=\"sm\" />\r\n                    <Label htmlFor=\"small-2\" className=\"text-sm\">Small option 2</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n\r\n              <div>\r\n                <Label className=\"text-sm font-medium mb-3 block\">Default</Label>\r\n                <RadioGroup defaultValue=\"default-1\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"default-1\" id=\"default-1\" />\r\n                    <Label htmlFor=\"default-1\">Default option 1</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"default-2\" id=\"default-2\" />\r\n                    <Label htmlFor=\"default-2\">Default option 2</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n\r\n              <div>\r\n                <Label className=\"text-sm font-medium mb-3 block\">Large</Label>\r\n                <RadioGroup defaultValue=\"large-1\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"large-1\" id=\"large-1\" size=\"lg\" />\r\n                    <Label htmlFor=\"large-1\" className=\"text-lg\">Large option 1</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"large-2\" id=\"large-2\" size=\"lg\" />\r\n                    <Label htmlFor=\"large-2\" className=\"text-lg\">Large option 2</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Orientations */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Orientations</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Radio groups in vertical and horizontal layouts\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Vertical (Default)</CardTitle>\r\n              <CardDescription>Stacked radio options</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup defaultValue=\"v-1\" orientation=\"vertical\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"v-1\" id=\"v-1\" />\r\n                  <Label htmlFor=\"v-1\">First option</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"v-2\" id=\"v-2\" />\r\n                  <Label htmlFor=\"v-2\">Second option</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"v-3\" id=\"v-3\" />\r\n                  <Label htmlFor=\"v-3\">Third option</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Horizontal</CardTitle>\r\n              <CardDescription>Side-by-side radio options</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup defaultValue=\"h-1\" orientation=\"horizontal\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"h-1\" id=\"h-1\" />\r\n                  <Label htmlFor=\"h-1\">Option A</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"h-2\" id=\"h-2\" />\r\n                  <Label htmlFor=\"h-2\">Option B</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"h-3\" id=\"h-3\" />\r\n                  <Label htmlFor=\"h-3\">Option C</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* With Descriptions */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">With Descriptions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Radio options with labels and descriptive text\r\n        </p>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Choose Display Density</CardTitle>\r\n            <CardDescription>Select how compact you want the interface to appear</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <RadioGroup value={displayDensity} onValueChange={setDisplayDensity}>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <RadioGroupItem value=\"compact\" id=\"compact\" className=\"mt-1\" />\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"compact\" className=\"font-medium cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <Layers className=\"h-4 w-4\" />\r\n                        Compact\r\n                      </span>\r\n                    </Label>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Reduced spacing and smaller elements. Fits more content on screen.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <RadioGroupItem value=\"comfortable\" id=\"comfortable\" className=\"mt-1\" />\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"comfortable\" className=\"font-medium cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <LayoutGrid className=\"h-4 w-4\" />\r\n                        Comfortable\r\n                      </span>\r\n                    </Label>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Balanced spacing for optimal readability and usability.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <RadioGroupItem value=\"spacious\" id=\"spacious\" className=\"mt-1\" />\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"spacious\" className=\"font-medium cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <List className=\"h-4 w-4\" />\r\n                        Spacious\r\n                      </span>\r\n                    </Label>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Increased spacing for better touch targets and visual breathing room.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </RadioGroup>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Disabled States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Disabled States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Disabled radio groups and individual options\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Entire Group Disabled</CardTitle>\r\n              <CardDescription>All options are disabled</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup defaultValue=\"disabled-1\" disabled>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"disabled-1\" id=\"dis-group-1\" />\r\n                  <Label htmlFor=\"dis-group-1\" className=\"opacity-50\">Option 1 (Selected)</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"disabled-2\" id=\"dis-group-2\" />\r\n                  <Label htmlFor=\"dis-group-2\" className=\"opacity-50\">Option 2</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"disabled-3\" id=\"dis-group-3\" />\r\n                  <Label htmlFor=\"dis-group-3\" className=\"opacity-50\">Option 3</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Individual Items Disabled</CardTitle>\r\n              <CardDescription>Some options are unavailable</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup defaultValue=\"individual-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"individual-1\" id=\"ind-1\" />\r\n                  <Label htmlFor=\"ind-1\">Available option</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"individual-2\" id=\"ind-2\" />\r\n                  <Label htmlFor=\"ind-2\">Selected option</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"individual-3\" id=\"ind-3\" disabled />\r\n                  <Label htmlFor=\"ind-3\" className=\"opacity-50\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      Unavailable option\r\n                      <Badge variant=\"secondary\" className=\"text-xs\">Coming soon</Badge>\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* With Icons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">With Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Radio groups enhanced with icons for better visual recognition\r\n        </p>\r\n        <div className=\"grid gap-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Theme Selection</CardTitle>\r\n              <CardDescription>Choose your preferred color theme</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={theme} onValueChange={setTheme} orientation=\"horizontal\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"light\" id=\"theme-light\" />\r\n                  <Label htmlFor=\"theme-light\" className=\"cursor-pointer\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Sun className=\"h-4 w-4\" />\r\n                      Light\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"dark\" id=\"theme-dark\" />\r\n                  <Label htmlFor=\"theme-dark\" className=\"cursor-pointer\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Moon className=\"h-4 w-4\" />\r\n                      Dark\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"system\" id=\"theme-system\" />\r\n                  <Label htmlFor=\"theme-system\" className=\"cursor-pointer\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Monitor className=\"h-4 w-4\" />\r\n                      System\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Export Format</CardTitle>\r\n              <CardDescription>Select the format for your export</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={exportFormat} onValueChange={setExportFormat}>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"pdf\" id=\"format-pdf\" />\r\n                    <Label htmlFor=\"format-pdf\" className=\"cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <FileText className=\"h-4 w-4 text-red-600\" />\r\n                        PDF Document\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"excel\" id=\"format-excel\" />\r\n                    <Label htmlFor=\"format-excel\" className=\"cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <BarChart3 className=\"h-4 w-4 text-green-600\" />\r\n                        Excel Spreadsheet\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"csv\" id=\"format-csv\" />\r\n                    <Label htmlFor=\"format-csv\" className=\"cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <FileText className=\"h-4 w-4 text-blue-600\" />\r\n                        CSV File\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"json\" id=\"format-json\" />\r\n                    <Label htmlFor=\"format-json\" className=\"cursor-pointer\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        <Code className=\"h-4 w-4 text-purple-600\" />\r\n                        JSON Data\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controlled vs Uncontrolled */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Controlled vs Uncontrolled</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Examples of controlled and uncontrolled radio group implementations\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Uncontrolled</CardTitle>\r\n              <CardDescription>Using defaultValue prop</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <RadioGroup defaultValue=\"uncontrolled-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"uncontrolled-1\" id=\"unc-1\" />\r\n                  <Label htmlFor=\"unc-1\">First choice</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"uncontrolled-2\" id=\"unc-2\" />\r\n                  <Label htmlFor=\"unc-2\">Second choice (default)</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"uncontrolled-3\" id=\"unc-3\" />\r\n                  <Label htmlFor=\"unc-3\">Third choice</Label>\r\n                </div>\r\n              </RadioGroup>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                This radio group manages its own state internally\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Controlled</CardTitle>\r\n              <CardDescription>Using value and onValueChange</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <RadioGroup value={notificationChannel} onValueChange={setNotificationChannel}>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"email\" id=\"notif-email\" />\r\n                  <Label htmlFor=\"notif-email\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Mail className=\"h-4 w-4\" />\r\n                      Email\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"sms\" id=\"notif-sms\" />\r\n                  <Label htmlFor=\"notif-sms\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <MessageSquare className=\"h-4 w-4\" />\r\n                      SMS\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"push\" id=\"notif-push\" />\r\n                  <Label htmlFor=\"notif-push\">\r\n                    <span className=\"flex items-center gap-2\">\r\n                      <Smartphone className=\"h-4 w-4\" />\r\n                      Push\r\n                    </span>\r\n                  </Label>\r\n                </div>\r\n              </RadioGroup>\r\n              <div className=\"pt-2\">\r\n                <Badge variant=\"outline\">\r\n                  Selected: {notificationChannel}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-World Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-World Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common radio group patterns used in applications\r\n        </p>\r\n        \r\n        <div className=\"space-y-6\">\r\n          {/* Payment Method */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Payment Method</CardTitle>\r\n              <CardDescription>Select how you'd like to pay</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={paymentMethod} onValueChange={setPaymentMethod}>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-start space-x-3 p-4 border rounded-lg hover:bg-accent/50 transition-colors\">\r\n                    <RadioGroupItem value=\"card\" id=\"payment-card\" className=\"mt-1\" />\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label htmlFor=\"payment-card\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <CreditCard className=\"h-4 w-4\" />\r\n                          Credit or Debit Card\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Pay securely with your credit or debit card\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-start space-x-3 p-4 border rounded-lg hover:bg-accent/50 transition-colors\">\r\n                    <RadioGroupItem value=\"paypal\" id=\"payment-paypal\" className=\"mt-1\" />\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label htmlFor=\"payment-paypal\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Wallet className=\"h-4 w-4\" />\r\n                          PayPal\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Fast and secure payment with PayPal\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-start space-x-3 p-4 border rounded-lg hover:bg-accent/50 transition-colors\">\r\n                    <RadioGroupItem value=\"bank\" id=\"payment-bank\" className=\"mt-1\" />\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label htmlFor=\"payment-bank\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Banknote className=\"h-4 w-4\" />\r\n                          Bank Transfer\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Direct transfer from your bank account\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-start space-x-3 p-4 border rounded-lg hover:bg-accent/50 transition-colors\">\r\n                    <RadioGroupItem value=\"crypto\" id=\"payment-crypto\" className=\"mt-1\" />\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label htmlFor=\"payment-crypto\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Bitcoin className=\"h-4 w-4\" />\r\n                          Cryptocurrency\r\n                          <Badge className=\"text-xs\">New</Badge>\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Pay with Bitcoin, Ethereum, or other cryptocurrencies\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button className=\"w-full\">\r\n                Continue with {paymentMethod === 'card' ? 'Card' : paymentMethod === 'paypal' ? 'PayPal' : paymentMethod === 'bank' ? 'Bank Transfer' : 'Crypto'}\r\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Subscription Plans */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Choose Your Plan</CardTitle>\r\n              <CardDescription>Select the plan that best fits your needs</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={subscription} onValueChange={setSubscription}>\r\n                <div className=\"grid gap-4\">\r\n                  <div className=\"relative\">\r\n                    <div className={`flex items-start space-x-3 p-4 border-2 rounded-lg transition-colors ${\r\n                      subscription === 'free' ? 'border-primary bg-primary/5' : 'border-border'\r\n                    }`}>\r\n                      <RadioGroupItem value=\"free\" id=\"plan-free\" className=\"mt-1\" />\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <Label htmlFor=\"plan-free\" className=\"font-medium cursor-pointer\">\r\n                            <span className=\"flex items-center gap-2\">\r\n                              <Zap className=\"h-4 w-4\" />\r\n                              Free\r\n                            </span>\r\n                          </Label>\r\n                          <span className=\"text-2xl font-bold\">$0</span>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground mt-1\">\r\n                          Perfect for trying out our service\r\n                        </p>\r\n                        <ul className=\"text-sm text-muted-foreground mt-2 space-y-1\">\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> 5 projects\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Basic features\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <X className=\"h-3 w-3\" /> Priority support\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"relative\">\r\n                    <div className={`flex items-start space-x-3 p-4 border-2 rounded-lg transition-colors ${\r\n                      subscription === 'pro' ? 'border-primary bg-primary/5' : 'border-border'\r\n                    }`}>\r\n                      <RadioGroupItem value=\"pro\" id=\"plan-pro\" className=\"mt-1\" />\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <Label htmlFor=\"plan-pro\" className=\"font-medium cursor-pointer\">\r\n                            <span className=\"flex items-center gap-2\">\r\n                              <Rocket className=\"h-4 w-4\" />\r\n                              Pro\r\n                              <Badge variant=\"default\" className=\"text-xs\">Popular</Badge>\r\n                            </span>\r\n                          </Label>\r\n                          <span className=\"text-2xl font-bold\">$19<span className=\"text-sm font-normal text-muted-foreground\">/mo</span></span>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground mt-1\">\r\n                          Great for growing teams\r\n                        </p>\r\n                        <ul className=\"text-sm text-muted-foreground mt-2 space-y-1\">\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Unlimited projects\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Advanced features\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Priority support\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"relative\">\r\n                    <div className={`flex items-start space-x-3 p-4 border-2 rounded-lg transition-colors ${\r\n                      subscription === 'enterprise' ? 'border-primary bg-primary/5' : 'border-border'\r\n                    }`}>\r\n                      <RadioGroupItem value=\"enterprise\" id=\"plan-enterprise\" className=\"mt-1\" />\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <Label htmlFor=\"plan-enterprise\" className=\"font-medium cursor-pointer\">\r\n                            <span className=\"flex items-center gap-2\">\r\n                              <Crown className=\"h-4 w-4\" />\r\n                              Enterprise\r\n                            </span>\r\n                          </Label>\r\n                          <span className=\"text-2xl font-bold\">$99<span className=\"text-sm font-normal text-muted-foreground\">/mo</span></span>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground mt-1\">\r\n                          For large organizations\r\n                        </p>\r\n                        <ul className=\"text-sm text-muted-foreground mt-2 space-y-1\">\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Everything in Pro\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Custom integrations\r\n                          </li>\r\n                          <li className=\"flex items-center gap-1\">\r\n                            <Check className=\"h-3 w-3\" /> Dedicated support\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Settings Example */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Privacy Settings</CardTitle>\r\n              <CardDescription>Control who can see your profile</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={privacy} onValueChange={setPrivacy}>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <RadioGroupItem value=\"public\" id=\"privacy-public\" />\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor=\"privacy-public\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Globe className=\"h-4 w-4\" />\r\n                          Public\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Anyone can view your profile\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <RadioGroupItem value=\"friends\" id=\"privacy-friends\" />\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor=\"privacy-friends\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Users className=\"h-4 w-4\" />\r\n                          Friends Only\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Only your friends can view your profile\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <RadioGroupItem value=\"private\" id=\"privacy-private\" />\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor=\"privacy-private\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Lock className=\"h-4 w-4\" />\r\n                          Private\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Only you can view your profile\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Shipping Speed */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Shipping Speed</CardTitle>\r\n              <CardDescription>Choose your delivery preference</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <RadioGroup value={shippingSpeed} onValueChange={setShippingSpeed} orientation=\"horizontal\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className={`relative flex flex-col items-center space-y-2 p-4 border-2 rounded-lg cursor-pointer transition-colors ${\r\n                    shippingSpeed === 'standard' ? 'border-primary bg-primary/5' : 'border-border hover:border-primary/50'\r\n                  }`}>\r\n                    <RadioGroupItem value=\"standard\" id=\"ship-standard\" className=\"sr-only\" />\r\n                    <Label htmlFor=\"ship-standard\" className=\"cursor-pointer text-center\">\r\n                      <div className=\"flex flex-col items-center space-y-2\">\r\n                        <Truck className=\"h-8 w-8\" />\r\n                        <div>\r\n                          <p className=\"font-medium\">Standard</p>\r\n                          <p className=\"text-sm text-muted-foreground\">5-7 days</p>\r\n                          <p className=\"text-lg font-bold mt-1\">Free</p>\r\n                        </div>\r\n                      </div>\r\n                    </Label>\r\n                  </div>\r\n\r\n                  <div className={`relative flex flex-col items-center space-y-2 p-4 border-2 rounded-lg cursor-pointer transition-colors ${\r\n                    shippingSpeed === 'express' ? 'border-primary bg-primary/5' : 'border-border hover:border-primary/50'\r\n                  }`}>\r\n                    <RadioGroupItem value=\"express\" id=\"ship-express\" className=\"sr-only\" />\r\n                    <Label htmlFor=\"ship-express\" className=\"cursor-pointer text-center\">\r\n                      <div className=\"flex flex-col items-center space-y-2\">\r\n                        <Package className=\"h-8 w-8\" />\r\n                        <div>\r\n                          <p className=\"font-medium\">Express</p>\r\n                          <p className=\"text-sm text-muted-foreground\">2-3 days</p>\r\n                          <p className=\"text-lg font-bold mt-1\">$9.99</p>\r\n                        </div>\r\n                      </div>\r\n                    </Label>\r\n                  </div>\r\n\r\n                  <div className={`relative flex flex-col items-center space-y-2 p-4 border-2 rounded-lg cursor-pointer transition-colors ${\r\n                    shippingSpeed === 'overnight' ? 'border-primary bg-primary/5' : 'border-border hover:border-primary/50'\r\n                  }`}>\r\n                    <RadioGroupItem value=\"overnight\" id=\"ship-overnight\" className=\"sr-only\" />\r\n                    <Label htmlFor=\"ship-overnight\" className=\"cursor-pointer text-center\">\r\n                      <div className=\"flex flex-col items-center space-y-2\">\r\n                        <Zap className=\"h-8 w-8\" />\r\n                        <div>\r\n                          <p className=\"font-medium\">Overnight</p>\r\n                          <p className=\"text-sm text-muted-foreground\">Next day</p>\r\n                          <p className=\"text-lg font-bold mt-1\">$24.99</p>\r\n                        </div>\r\n                      </div>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n              </RadioGroup>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Integration</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Using radio groups within forms with validation\r\n        </p>\r\n        <Card className=\"max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle>Create New Project</CardTitle>\r\n            <CardDescription>Configure your project settings</CardDescription>\r\n          </CardHeader>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-3\">\r\n                <Label>Project Name</Label>\r\n                <Input placeholder=\"My Awesome Project\" required />\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              <div className=\"space-y-3\">\r\n                <Label>Plan Type</Label>\r\n                <RadioGroup \r\n                  value={formData.plan} \r\n                  onValueChange={(value) => setFormData(prev => ({ ...prev, plan: value }))}\r\n                  required\r\n                >\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"starter\" id=\"form-starter\" />\r\n                    <Label htmlFor=\"form-starter\">Starter - Perfect for small projects</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"professional\" id=\"form-professional\" />\r\n                    <Label htmlFor=\"form-professional\">Professional - For growing teams</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"business\" id=\"form-business\" />\r\n                    <Label htmlFor=\"form-business\">Business - Advanced features & support</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              <div className=\"space-y-3\">\r\n                <Label>Billing Cycle</Label>\r\n                <RadioGroup \r\n                  value={formData.billing} \r\n                  onValueChange={(value) => setFormData(prev => ({ ...prev, billing: value }))}\r\n                  orientation=\"horizontal\"\r\n                >\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"monthly\" id=\"form-monthly\" />\r\n                    <Label htmlFor=\"form-monthly\">Monthly</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"yearly\" id=\"form-yearly\" />\r\n                    <Label htmlFor=\"form-yearly\">\r\n                      <span className=\"flex items-center gap-2\">\r\n                        Yearly\r\n                        <Badge variant=\"secondary\" className=\"text-xs\">Save 20%</Badge>\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              <div className=\"space-y-3\">\r\n                <Label>Deployment Type</Label>\r\n                <RadioGroup \r\n                  value={formData.deployment} \r\n                  onValueChange={(value) => setFormData(prev => ({ ...prev, deployment: value }))}\r\n                >\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <RadioGroupItem value=\"cloud\" id=\"form-cloud\" className=\"mt-1\" />\r\n                    <div className=\"space-y-1\">\r\n                      <Label htmlFor=\"form-cloud\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Cloud className=\"h-4 w-4\" />\r\n                          Cloud Hosted\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        We manage everything for you\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <RadioGroupItem value=\"self-hosted\" id=\"form-self\" className=\"mt-1\" />\r\n                    <div className=\"space-y-1\">\r\n                      <Label htmlFor=\"form-self\" className=\"font-medium cursor-pointer\">\r\n                        <span className=\"flex items-center gap-2\">\r\n                          <Server className=\"h-4 w-4\" />\r\n                          Self-Hosted\r\n                        </span>\r\n                      </Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Deploy on your own infrastructure\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button type=\"button\" variant=\"ghost\">Cancel</Button>\r\n              <Button type=\"submit\">Create Project</Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Accessibility */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Accessibility</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Radio groups are built with accessibility in mind\r\n        </p>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-base\">Keyboard Navigation & Screen Readers</CardTitle>\r\n            <CardDescription>Fully accessible radio group interactions</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <Alert>\r\n              <Info className=\"h-4 w-4\" />\r\n              <AlertDescription>\r\n                <strong>Keyboard shortcuts:</strong>\r\n                <ul className=\"mt-2 space-y-1 text-sm\">\r\n                  <li>• <kbd>Tab</kbd> - Focus the radio group</li>\r\n                  <li>• <kbd>Arrow Keys</kbd> - Navigate between options</li>\r\n                  <li>• <kbd>Space</kbd> - Select the focused option</li>\r\n                  <li>• <kbd>Enter</kbd> - Submit form (when in a form)</li>\r\n                </ul>\r\n              </AlertDescription>\r\n            </Alert>\r\n            \r\n            <div className=\"space-y-4 pt-4\">\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"text-sm font-medium\">Built-in Accessibility Features</h4>\r\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n                  <li>• Proper ARIA roles and states</li>\r\n                  <li>• Keyboard navigation support</li>\r\n                  <li>• Screen reader announcements</li>\r\n                  <li>• Focus management</li>\r\n                  <li>• Required field indicators</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <Label>Try navigating with your keyboard:</Label>\r\n                <RadioGroup defaultValue=\"a11y-1\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"a11y-1\" id=\"access-1\" />\r\n                    <Label htmlFor=\"access-1\">First option (try arrow keys)</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"a11y-2\" id=\"access-2\" />\r\n                    <Label htmlFor=\"access-2\">Second option</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"a11y-3\" id=\"access-3\" />\r\n                    <Label htmlFor=\"access-3\">Third option</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Complex Layout Example */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Complex Layouts</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Radio groups in more complex UI patterns\r\n        </p>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Language & Region Settings</CardTitle>\r\n            <CardDescription>Customize your language and regional preferences</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Tabs defaultValue=\"language\" className=\"w-full\">\r\n              <TabsList className=\"grid w-full grid-cols-2\">\r\n                <TabsTrigger value=\"language\">Language</TabsTrigger>\r\n                <TabsTrigger value=\"region\">Region</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"language\" className=\"mt-4\">\r\n                <RadioGroup value={language} onValueChange={setLanguage}>\r\n                  <ScrollArea className=\"h-[300px] pr-4\">\r\n                    <div className=\"space-y-2\">\r\n                      {[\r\n                        { code: 'en', name: 'English', native: 'English' },\r\n                        { code: 'es', name: 'Spanish', native: 'Español' },\r\n                        { code: 'fr', name: 'French', native: 'Français' },\r\n                        { code: 'de', name: 'German', native: 'Deutsch' },\r\n                        { code: 'it', name: 'Italian', native: 'Italiano' },\r\n                        { code: 'pt', name: 'Portuguese', native: 'Português' },\r\n                        { code: 'ru', name: 'Russian', native: 'Русский' },\r\n                        { code: 'ja', name: 'Japanese', native: '日本語' },\r\n                        { code: 'ko', name: 'Korean', native: '한국어' },\r\n                        { code: 'zh', name: 'Chinese', native: '中文' },\r\n                      ].map((lang) => (\r\n                        <div key={lang.code} className=\"flex items-center space-x-2 py-2\">\r\n                          <RadioGroupItem value={lang.code} id={`lang-${lang.code}`} />\r\n                          <Label htmlFor={`lang-${lang.code}`} className=\"flex-1 cursor-pointer\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <span>{lang.name}</span>\r\n                              <span className=\"text-sm text-muted-foreground\">{lang.native}</span>\r\n                            </div>\r\n                          </Label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </ScrollArea>\r\n                </RadioGroup>\r\n              </TabsContent>\r\n              <TabsContent value=\"region\" className=\"mt-4\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Currency</Label>\r\n                    <RadioGroup defaultValue=\"usd\" className=\"mt-2\">\r\n                      <div className=\"grid grid-cols-2 gap-2\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"usd\" id=\"currency-usd\" />\r\n                          <Label htmlFor=\"currency-usd\" className=\"cursor-pointer\">\r\n                            <span className=\"flex items-center gap-1\">\r\n                              <DollarSign className=\"h-3 w-3\" />\r\n                              USD\r\n                            </span>\r\n                          </Label>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"eur\" id=\"currency-eur\" />\r\n                          <Label htmlFor=\"currency-eur\" className=\"cursor-pointer\">\r\n                            <span className=\"flex items-center gap-1\">\r\n                              <Euro className=\"h-3 w-3\" />\r\n                              EUR\r\n                            </span>\r\n                          </Label>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"gbp\" id=\"currency-gbp\" />\r\n                          <Label htmlFor=\"currency-gbp\" className=\"cursor-pointer\">\r\n                            <span className=\"flex items-center gap-1\">\r\n                              <PoundSterling className=\"h-3 w-3\" />\r\n                              GBP\r\n                            </span>\r\n                          </Label>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"inr\" id=\"currency-inr\" />\r\n                          <Label htmlFor=\"currency-inr\" className=\"cursor-pointer\">\r\n                            <span className=\"flex items-center gap-1\">\r\n                              <IndianRupee className=\"h-3 w-3\" />\r\n                              INR\r\n                            </span>\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    </RadioGroup>\r\n                  </div>\r\n                  <Separator />\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Date Format</Label>\r\n                    <RadioGroup defaultValue=\"mdy\" className=\"mt-2\">\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"mdy\" id=\"date-mdy\" />\r\n                          <Label htmlFor=\"date-mdy\">MM/DD/YYYY</Label>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"dmy\" id=\"date-dmy\" />\r\n                          <Label htmlFor=\"date-dmy\">DD/MM/YYYY</Label>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <RadioGroupItem value=\"ymd\" id=\"date-ymd\" />\r\n                          <Label htmlFor=\"date-ymd\">YYYY-MM-DD</Label>\r\n                        </div>\r\n                      </div>\r\n                    </RadioGroup>\r\n                  </div>\r\n                </div>\r\n              </TabsContent>\r\n            </Tabs>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "select.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/select.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  Select, \r\n  SelectContent, \r\n  SelectGroup, \r\n  SelectItem, \r\n  SelectLabel, \r\n  SelectSeparator, \r\n  SelectTrigger, \r\n  SelectValue,\r\n  Label,\r\n  Button,\r\n  Badge\r\n} from \"@lightmind/ui\"\r\nimport { \r\n  Globe, \r\n  Mail, \r\n  Phone, \r\n  MapPin, \r\n  Calendar,\r\n  Clock,\r\n  User,\r\n  Building,\r\n  CreditCard,\r\n  Package,\r\n  Palette,\r\n  Monitor,\r\n  Smartphone,\r\n  Tablet,\r\n  Check,\r\n  X,\r\n  AlertCircle,\r\n  Info,\r\n  Flag,\r\n  Languages,\r\n  Briefcase,\r\n  Home,\r\n  Filter,\r\n  SortAsc,\r\n  Tag,\r\n  DollarSign,\r\n  Euro,\r\n  PoundSterling,\r\n  IndianRupee,\r\n  Zap\r\n} from \"lucide-react\"\r\n\r\nexport function SelectDemo() {\r\n  const [country, setCountry] = React.useState(\"\")\r\n  const [timezone, setTimezone] = React.useState(\"\")\r\n  const [priority, setPriority] = React.useState(\"\")\r\n  const [status, setStatus] = React.useState(\"\")\r\n  const [size, setSize] = React.useState(\"default\")\r\n  const [formData, setFormData] = React.useState({\r\n    role: \"\",\r\n    department: \"\",\r\n    office: \"\"\r\n  })\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Select */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Select</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple dropdown selection with various options\r\n        </p>\r\n        <div className=\"grid gap-6 max-w-2xl\">\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"fruit\">Select a fruit</Label>\r\n            <Select>\r\n              <SelectTrigger id=\"fruit\">\r\n                <SelectValue placeholder=\"Choose a fruit\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"apple\">Apple</SelectItem>\r\n                <SelectItem value=\"banana\">Banana</SelectItem>\r\n                <SelectItem value=\"orange\">Orange</SelectItem>\r\n                <SelectItem value=\"grape\">Grape</SelectItem>\r\n                <SelectItem value=\"strawberry\">Strawberry</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"color\">Favorite color</Label>\r\n            <Select defaultValue=\"blue\">\r\n              <SelectTrigger id=\"color\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"red\">Red</SelectItem>\r\n                <SelectItem value=\"blue\">Blue</SelectItem>\r\n                <SelectItem value=\"green\">Green</SelectItem>\r\n                <SelectItem value=\"yellow\">Yellow</SelectItem>\r\n                <SelectItem value=\"purple\">Purple</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Select with Groups */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Grouped Options</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Organize related options into logical groups\r\n        </p>\r\n        <div className=\"grid gap-6 max-w-2xl\">\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"device\">Select a device</Label>\r\n            <Select>\r\n              <SelectTrigger id=\"device\">\r\n                <SelectValue placeholder=\"Choose your device\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectGroup>\r\n                  <SelectLabel>Mobile Devices</SelectLabel>\r\n                  <SelectItem value=\"iphone\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Smartphone className=\"h-4 w-4\" />\r\n                      iPhone\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"android\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Smartphone className=\"h-4 w-4\" />\r\n                      Android Phone\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"ipad\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Tablet className=\"h-4 w-4\" />\r\n                      iPad\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Desktop</SelectLabel>\r\n                  <SelectItem value=\"windows\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Monitor className=\"h-4 w-4\" />\r\n                      Windows PC\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"mac\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Monitor className=\"h-4 w-4\" />\r\n                      Mac\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"linux\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Monitor className=\"h-4 w-4\" />\r\n                      Linux\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"contact\">Contact method</Label>\r\n            <Select>\r\n              <SelectTrigger id=\"contact\">\r\n                <SelectValue placeholder=\"How should we contact you?\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectGroup>\r\n                  <SelectLabel>Digital</SelectLabel>\r\n                  <SelectItem value=\"email\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Mail className=\"h-4 w-4\" />\r\n                      Email\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"phone\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Phone className=\"h-4 w-4\" />\r\n                      Phone Call\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"sms\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Smartphone className=\"h-4 w-4\" />\r\n                      SMS\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Traditional</SelectLabel>\r\n                  <SelectItem value=\"mail\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Mail className=\"h-4 w-4\" />\r\n                      Postal Mail\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"in-person\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <User className=\"h-4 w-4\" />\r\n                      In Person\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Select Sizes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Select Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Three size options to fit different UI contexts\r\n        </p>\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          <div className=\"grid gap-2\">\r\n            <Label size=\"lg\">Large</Label>\r\n            <Select>\r\n              <SelectTrigger size=\"lg\" className=\"w-[200px]\">\r\n                <SelectValue placeholder=\"Large select\" />\r\n              </SelectTrigger>\r\n              <SelectContent size=\"lg\">\r\n                <SelectItem value=\"option1\">Option 1</SelectItem>\r\n                <SelectItem value=\"option2\">Option 2</SelectItem>\r\n                <SelectItem value=\"option3\">Option 3</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label>Default</Label>\r\n            <Select>\r\n              <SelectTrigger className=\"w-[200px]\">\r\n                <SelectValue placeholder=\"Default select\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"option1\">Option 1</SelectItem>\r\n                <SelectItem value=\"option2\">Option 2</SelectItem>\r\n                <SelectItem value=\"option3\">Option 3</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label size=\"sm\">Small</Label>\r\n            <Select>\r\n              <SelectTrigger size=\"sm\" className=\"w-[200px]\">\r\n                <SelectValue placeholder=\"Small select\" />\r\n              </SelectTrigger>\r\n              <SelectContent size=\"sm\">\r\n                <SelectItem value=\"option1\">Option 1</SelectItem>\r\n                <SelectItem value=\"option2\">Option 2</SelectItem>\r\n                <SelectItem value=\"option3\">Option 3</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Select States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Select States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Different visual states for user feedback\r\n        </p>\r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"grid gap-2\">\r\n            <Label>Default State</Label>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select an option\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"option1\">Option 1</SelectItem>\r\n                <SelectItem value=\"option2\">Option 2</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label>With Value</Label>\r\n            <Select defaultValue=\"selected\">\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"selected\">Selected Option</SelectItem>\r\n                <SelectItem value=\"other\">Other Option</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label>Disabled State</Label>\r\n            <Select disabled>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Disabled select\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"option1\">Option 1</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label>Error State</Label>\r\n            <Select>\r\n              <SelectTrigger className=\"border-destructive focus:ring-destructive\">\r\n                <SelectValue placeholder=\"Select a valid option\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"valid1\">Valid Option 1</SelectItem>\r\n                <SelectItem value=\"valid2\">Valid Option 2</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            <p className=\"text-sm text-destructive mt-1\">\r\n              <AlertCircle className=\"inline h-3 w-3 mr-1\" />\r\n              Please select a valid option\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-world Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common select patterns used in applications\r\n        </p>\r\n        \r\n        {/* Country Selector */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <Label htmlFor=\"country\">Country</Label>\r\n            <Select value={country} onValueChange={setCountry}>\r\n              <SelectTrigger id=\"country\">\r\n                <SelectValue placeholder=\"Select your country\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"us\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    United States\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"uk\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    United Kingdom\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"ca\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    Canada\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"au\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    Australia\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"de\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    Germany\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"fr\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    France\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"jp\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    Japan\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"in\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    India\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            {country && (\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Selected: {country.toUpperCase()}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Timezone Picker */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <Label htmlFor=\"timezone\">Timezone</Label>\r\n            <Select value={timezone} onValueChange={setTimezone}>\r\n              <SelectTrigger id=\"timezone\">\r\n                <SelectValue placeholder=\"Select timezone\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectGroup>\r\n                  <SelectLabel>North America</SelectLabel>\r\n                  <SelectItem value=\"pst\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      Pacific Time (PST)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"mst\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      Mountain Time (MST)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"cst\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      Central Time (CST)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"est\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      Eastern Time (EST)\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Europe</SelectLabel>\r\n                  <SelectItem value=\"gmt\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      GMT (London)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"cet\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      CET (Paris)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"eet\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      EET (Athens)\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Asia Pacific</SelectLabel>\r\n                  <SelectItem value=\"ist\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      IST (Mumbai)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"jst\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      JST (Tokyo)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"aest\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4\" />\r\n                      AEST (Sydney)\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Priority Selector with Colors */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <Label htmlFor=\"priority\">Priority Level</Label>\r\n            <Select value={priority} onValueChange={setPriority}>\r\n              <SelectTrigger id=\"priority\">\r\n                <SelectValue placeholder=\"Set priority\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"critical\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Zap className=\"h-4 w-4 text-red-500\" />\r\n                    <span className=\"text-red-600 font-medium\">Critical</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"high\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <AlertCircle className=\"h-4 w-4 text-orange-500\" />\r\n                    <span className=\"text-orange-600 font-medium\">High</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"medium\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Info className=\"h-4 w-4 text-yellow-500\" />\r\n                    <span className=\"text-yellow-600 font-medium\">Medium</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"low\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Info className=\"h-4 w-4 text-blue-500\" />\r\n                    <span className=\"text-blue-600 font-medium\">Low</span>\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Status Selector */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <Label htmlFor=\"status\">Status</Label>\r\n            <Select value={status} onValueChange={setStatus}>\r\n              <SelectTrigger id=\"status\">\r\n                <SelectValue placeholder=\"Select status\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"active\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-green-500\" />\r\n                    Active\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"pending\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-yellow-500\" />\r\n                    Pending\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"completed\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-blue-500\" />\r\n                    Completed\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"archived\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-gray-500\" />\r\n                    Archived\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"cancelled\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-red-500\" />\r\n                    Cancelled\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Currency Selector */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <Label htmlFor=\"currency\">Currency</Label>\r\n            <Select defaultValue=\"usd\">\r\n              <SelectTrigger id=\"currency\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"usd\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <DollarSign className=\"h-4 w-4\" />\r\n                    USD - US Dollar\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"eur\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Euro className=\"h-4 w-4\" />\r\n                    EUR - Euro\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"gbp\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <PoundSterling className=\"h-4 w-4\" />\r\n                    GBP - British Pound\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"inr\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <IndianRupee className=\"h-4 w-4\" />\r\n                    INR - Indian Rupee\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Integration</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Using selects in forms with controlled state\r\n        </p>\r\n        <div className=\"max-w-md space-y-4 p-6 border rounded-lg\">\r\n          <h4 className=\"font-semibold\">Employee Information</h4>\r\n          \r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"role\">Role</Label>\r\n            <Select \r\n              value={formData.role} \r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, role: value }))}\r\n            >\r\n              <SelectTrigger id=\"role\">\r\n                <SelectValue placeholder=\"Select role\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"developer\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Briefcase className=\"h-4 w-4\" />\r\n                    Developer\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"designer\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Palette className=\"h-4 w-4\" />\r\n                    Designer\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"manager\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <User className=\"h-4 w-4\" />\r\n                    Manager\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"sales\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Package className=\"h-4 w-4\" />\r\n                    Sales\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"department\">Department</Label>\r\n            <Select \r\n              value={formData.department} \r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, department: value }))}\r\n            >\r\n              <SelectTrigger id=\"department\">\r\n                <SelectValue placeholder=\"Select department\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"engineering\">Engineering</SelectItem>\r\n                <SelectItem value=\"design\">Design</SelectItem>\r\n                <SelectItem value=\"marketing\">Marketing</SelectItem>\r\n                <SelectItem value=\"sales\">Sales</SelectItem>\r\n                <SelectItem value=\"hr\">Human Resources</SelectItem>\r\n                <SelectItem value=\"finance\">Finance</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <Label htmlFor=\"office\">Office Location</Label>\r\n            <Select \r\n              value={formData.office} \r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, office: value }))}\r\n            >\r\n              <SelectTrigger id=\"office\">\r\n                <SelectValue placeholder=\"Select office\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectGroup>\r\n                  <SelectLabel>United States</SelectLabel>\r\n                  <SelectItem value=\"sf\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Building className=\"h-4 w-4\" />\r\n                      San Francisco, CA\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"ny\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Building className=\"h-4 w-4\" />\r\n                      New York, NY\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"austin\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Building className=\"h-4 w-4\" />\r\n                      Austin, TX\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Remote</SelectLabel>\r\n                  <SelectItem value=\"remote-us\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Home className=\"h-4 w-4\" />\r\n                      Remote (US)\r\n                    </div>\r\n                  </SelectItem>\r\n                  <SelectItem value=\"remote-global\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Globe className=\"h-4 w-4\" />\r\n                      Remote (Global)\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectGroup>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 pt-4\">\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={() => setFormData({ role: \"\", department: \"\", office: \"\" })}\r\n            >\r\n              Reset\r\n            </Button>\r\n            <Button \r\n              disabled={!formData.role || !formData.department || !formData.office}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n\r\n          {(formData.role || formData.department || formData.office) && (\r\n            <div className=\"mt-4 p-3 bg-muted rounded-md text-sm\">\r\n              <p className=\"font-medium mb-1\">Form Data:</p>\r\n              <pre className=\"text-xs\">{JSON.stringify(formData, null, 2)}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced Patterns */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Advanced Patterns</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Complex select implementations for specific use cases\r\n        </p>\r\n        \r\n        <div className=\"space-y-6\">\r\n          {/* Filter Select */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <Filter className=\"h-4 w-4\" />\r\n              <Label>Filter Products</Label>\r\n            </div>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Apply filters\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectGroup>\r\n                  <SelectLabel>Price Range</SelectLabel>\r\n                  <SelectItem value=\"0-50\">Under $50</SelectItem>\r\n                  <SelectItem value=\"50-100\">$50 - $100</SelectItem>\r\n                  <SelectItem value=\"100-200\">$100 - $200</SelectItem>\r\n                  <SelectItem value=\"200+\">Over $200</SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Category</SelectLabel>\r\n                  <SelectItem value=\"electronics\">Electronics</SelectItem>\r\n                  <SelectItem value=\"clothing\">Clothing</SelectItem>\r\n                  <SelectItem value=\"books\">Books</SelectItem>\r\n                  <SelectItem value=\"home\">Home & Garden</SelectItem>\r\n                </SelectGroup>\r\n                <SelectSeparator />\r\n                <SelectGroup>\r\n                  <SelectLabel>Rating</SelectLabel>\r\n                  <SelectItem value=\"4+\">4 Stars & Up</SelectItem>\r\n                  <SelectItem value=\"3+\">3 Stars & Up</SelectItem>\r\n                  <SelectItem value=\"2+\">2 Stars & Up</SelectItem>\r\n                </SelectGroup>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Sort Select */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <SortAsc className=\"h-4 w-4\" />\r\n              <Label>Sort By</Label>\r\n            </div>\r\n            <Select defaultValue=\"relevance\">\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"relevance\">Most Relevant</SelectItem>\r\n                <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\r\n                <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\r\n                <SelectItem value=\"rating\">Customer Rating</SelectItem>\r\n                <SelectItem value=\"newest\">Newest First</SelectItem>\r\n                <SelectItem value=\"bestselling\">Best Selling</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Language Selector with Flags */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <Languages className=\"h-4 w-4\" />\r\n              <Label>Language</Label>\r\n            </div>\r\n            <Select defaultValue=\"en\">\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"en\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇺🇸</span>\r\n                    English\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"es\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇪🇸</span>\r\n                    Español\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"fr\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇫🇷</span>\r\n                    Français\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"de\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇩🇪</span>\r\n                    Deutsch\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"it\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇮🇹</span>\r\n                    Italiano\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"pt\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇵🇹</span>\r\n                    Português\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"jp\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇯🇵</span>\r\n                    日本語\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"cn\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-lg\">🇨🇳</span>\r\n                    中文\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {/* Tags/Labels Selector */}\r\n          <div className=\"grid gap-2 max-w-md\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <Tag className=\"h-4 w-4\" />\r\n              <Label>Add Tags</Label>\r\n            </div>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select tags\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"bug\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"destructive\" className=\"h-5\">Bug</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"feature\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge className=\"bg-blue-500 h-5\">Feature</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"enhancement\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge className=\"bg-green-500 h-5\">Enhancement</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"documentation\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"h-5\">Documentation</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"help-wanted\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge className=\"bg-yellow-500 h-5\">Help Wanted</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"good-first-issue\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge className=\"bg-purple-500 h-5\">Good First Issue</Badge>\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "stat-card.demo",
    "type": "registry:example",
    "dependencies": [
      "lucide-react"
    ],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/stat-card.demo.tsx",
        "content": "import { StatCard } from \"@lightmind/ui\"\r\nimport { Users, DollarSign, ShoppingCart, TrendingUp } from \"lucide-react\"\r\n\r\nexport function StatCardDemo() {\r\n  return (\r\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n      <StatCard\r\n        title=\"Total Revenue\"\r\n        value=\"$45,231.89\"\r\n        description=\"from last month\"\r\n        trend={{ value: 20.1 }}\r\n        icon={<DollarSign className=\"h-4 w-4\" />}\r\n      />\r\n      <StatCard\r\n        title=\"Users\"\r\n        value=\"+2,350\"\r\n        description=\"new this month\"\r\n        trend={{ value: 180.1 }}\r\n        icon={<Users className=\"h-4 w-4\" />}\r\n      />\r\n      <StatCard\r\n        title=\"Sales\"\r\n        value=\"+12,234\"\r\n        trend={{ value: -19.0 }}\r\n        icon={<ShoppingCart className=\"h-4 w-4\" />}\r\n      />\r\n      <StatCard\r\n        title=\"Active Now\"\r\n        value=\"573\"\r\n        description=\"In the last hour\"\r\n        trend={{ value: 0 }}\r\n        icon={<TrendingUp className=\"h-4 w-4\" />}\r\n      />\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": []
  },
  {
    "name": "switch.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/switch.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { \r\n  Switch,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Badge,\r\n  Alert,\r\n  AlertDescription,\r\n  Input,\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@lightmind/ui\"\r\nimport { \r\n  Check,\r\n  X,\r\n  Moon,\r\n  Sun,\r\n  Bell,\r\n  BellOff,\r\n  Wifi,\r\n  WifiOff,\r\n  Volume2,\r\n  VolumeX,\r\n  Shield,\r\n  ShieldOff,\r\n  Eye,\r\n  EyeOff,\r\n  Lock,\r\n  Unlock,\r\n  Power,\r\n  PowerOff,\r\n  Mic,\r\n  MicOff,\r\n  Camera,\r\n  CameraOff,\r\n  Bluetooth,\r\n  BluetoothOff,\r\n  Plane,\r\n  PlaneOff,\r\n  MapPin,\r\n  MapPinOff,\r\n  Download,\r\n  Upload,\r\n  Zap,\r\n  ZapOff,\r\n  Mail,\r\n  MailOpen,\r\n  MessageSquare,\r\n  MessageSquareOff,\r\n  Smartphone,\r\n  Monitor,\r\n  Laptop,\r\n  Save,\r\n  Globe,\r\n  GlobeOff,\r\n  User,\r\n  UserX,\r\n  PlayCircle,\r\n  PauseCircle,\r\n  Info,\r\n  Settings,\r\n  Database,\r\n  Cloud,\r\n  CloudOff,\r\n  AlertCircle,\r\n  CheckCircle2,\r\n  XCircle,\r\n  HelpCircle,\r\n  Activity,\r\n  Heart,\r\n  Star,\r\n  Sparkles,\r\n  Code,\r\n  Palette,\r\n  Music,\r\n  Video,\r\n  FileText,\r\n  Archive,\r\n  Trash2,\r\n  RefreshCw,\r\n  Share2,\r\n  Printer,\r\n  Battery,\r\n  BatteryLow,\r\n  ArrowRight,\r\n  BarChart3,\r\n  Gift\r\n} from \"lucide-react\"\r\n\r\n// Simple Separator component\r\nconst Separator = () => <div className=\"my-4 h-[1px] bg-border\" />\r\n\r\nexport function SwitchDemo() {\r\n  // State for controlled examples\r\n  const [switchStates, setSwitchStates] = React.useState({\r\n    basic: false,\r\n    darkMode: false,\r\n    notifications: true,\r\n    autoSave: true,\r\n    publicProfile: false,\r\n  })\r\n\r\n  // State for settings panel\r\n  const [activeTab, setActiveTab] = React.useState(\"general\")\r\n  const [settings, setSettings] = React.useState({\r\n    general: {\r\n      darkMode: false,\r\n      sounds: true,\r\n      animations: true,\r\n      autoUpdate: true,\r\n    },\r\n    privacy: {\r\n      publicProfile: false,\r\n      showActivity: true,\r\n      allowMessages: true,\r\n      dataCollection: false,\r\n    },\r\n    notifications: {\r\n      email: true,\r\n      push: true,\r\n      sms: false,\r\n      desktop: true,\r\n    },\r\n    features: {\r\n      beta: false,\r\n      experimental: false,\r\n      analytics: true,\r\n      telemetry: false,\r\n    }\r\n  })\r\n\r\n  // State for device settings\r\n  const [deviceSettings, setDeviceSettings] = React.useState({\r\n    wifi: true,\r\n    bluetooth: false,\r\n    location: true,\r\n    airplane: false,\r\n    doNotDisturb: false,\r\n    powerSaving: false,\r\n  })\r\n\r\n  // State for accessibility\r\n  const [accessibilitySettings, setAccessibilitySettings] = React.useState({\r\n    screenReader: false,\r\n    highContrast: false,\r\n    reduceMotion: false,\r\n    largeText: false,\r\n  })\r\n\r\n  const handleSettingChange = (category: string, setting: string, value: boolean) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [category]: {\r\n        ...prev[category as keyof typeof prev],\r\n        [setting]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Switches */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Switches</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Simple toggle switches for binary states\r\n        </p>\r\n        <div className=\"grid gap-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Sizes</CardTitle>\r\n              <CardDescription>Available switch sizes</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex flex-wrap gap-8 items-center\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Switch id=\"size-sm\" size=\"sm\" />\r\n                  <Label htmlFor=\"size-sm\" className=\"text-sm\">Small</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Switch id=\"size-default\" />\r\n                  <Label htmlFor=\"size-default\">Default</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Switch id=\"size-lg\" size=\"lg\" />\r\n                  <Label htmlFor=\"size-lg\" className=\"text-lg\">Large</Label>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Variants</CardTitle>\r\n              <CardDescription>Different visual styles</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"variant-default\">Default variant</Label>\r\n                <Switch id=\"variant-default\" defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"variant-destructive\">Destructive variant</Label>\r\n                <Switch id=\"variant-destructive\" variant=\"destructive\" defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"variant-success\">Success variant</Label>\r\n                <Switch id=\"variant-success\" variant=\"success\" defaultChecked />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">States</CardTitle>\r\n              <CardDescription>Different switch states</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"state-off\">Off state</Label>\r\n                <Switch id=\"state-off\" />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"state-on\">On state</Label>\r\n                <Switch id=\"state-on\" defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"state-disabled-off\" className=\"opacity-50\">Disabled (off)</Label>\r\n                <Switch id=\"state-disabled-off\" disabled />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"state-disabled-on\" className=\"opacity-50\">Disabled (on)</Label>\r\n                <Switch id=\"state-disabled-on\" disabled defaultChecked />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Switches with Icons */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Switches with Icons</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Enhanced visual feedback with icons\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Common Controls</CardTitle>\r\n              <CardDescription>Frequently used toggles with icons</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-dark\" className=\"flex items-center gap-2\">\r\n                  <Moon className=\"h-4 w-4\" />\r\n                  Dark Mode\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-dark\"\r\n                  checkedIcon={<Moon className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<Sun className=\"h-3 w-3\" />}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-notifications\" className=\"flex items-center gap-2\">\r\n                  <Bell className=\"h-4 w-4\" />\r\n                  Notifications\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-notifications\"\r\n                  checkedIcon={<Bell className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<BellOff className=\"h-3 w-3\" />}\r\n                  defaultChecked\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-wifi\" className=\"flex items-center gap-2\">\r\n                  <Wifi className=\"h-4 w-4\" />\r\n                  Wi-Fi\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-wifi\"\r\n                  checkedIcon={<Wifi className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<WifiOff className=\"h-3 w-3\" />}\r\n                  defaultChecked\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-sound\" className=\"flex items-center gap-2\">\r\n                  <Volume2 className=\"h-4 w-4\" />\r\n                  Sound\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-sound\"\r\n                  checkedIcon={<Volume2 className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<VolumeX className=\"h-3 w-3\" />}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Security & Privacy</CardTitle>\r\n              <CardDescription>Privacy controls with status icons</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-shield\" className=\"flex items-center gap-2\">\r\n                  <Shield className=\"h-4 w-4\" />\r\n                  Security Shield\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-shield\"\r\n                  variant=\"success\"\r\n                  checkedIcon={<Shield className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<ShieldOff className=\"h-3 w-3\" />}\r\n                  defaultChecked\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-privacy\" className=\"flex items-center gap-2\">\r\n                  <Eye className=\"h-4 w-4\" />\r\n                  Profile Visibility\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-privacy\"\r\n                  checkedIcon={<Eye className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<EyeOff className=\"h-3 w-3\" />}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-lock\" className=\"flex items-center gap-2\">\r\n                  <Lock className=\"h-4 w-4\" />\r\n                  Account Lock\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-lock\"\r\n                  variant=\"destructive\"\r\n                  checkedIcon={<Lock className=\"h-3 w-3\" />}\r\n                  uncheckedIcon={<Unlock className=\"h-3 w-3\" />}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"icon-check\" className=\"flex items-center gap-2\">\r\n                  <CheckCircle2 className=\"h-4 w-4\" />\r\n                  Verified\r\n                </Label>\r\n                <Switch \r\n                  id=\"icon-check\"\r\n                  size=\"sm\"\r\n                  variant=\"success\"\r\n                  checkedIcon={<Check className=\"h-2 w-2\" />}\r\n                  uncheckedIcon={<X className=\"h-2 w-2\" />}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Switches with Descriptions */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">With Descriptions</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Switches with labels and additional context\r\n        </p>\r\n        <Card>\r\n          <CardContent className=\"pt-6 space-y-6\">\r\n            <div className=\"flex items-start justify-between gap-4\">\r\n              <div className=\"space-y-1\">\r\n                <Label htmlFor=\"desc-1\" className=\"font-medium\">\r\n                  <span className=\"flex items-center gap-2\">\r\n                    <Mail className=\"h-4 w-4\" />\r\n                    Email Notifications\r\n                  </span>\r\n                </Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Receive email updates about your account activity and important announcements\r\n                </p>\r\n              </div>\r\n              <Switch id=\"desc-1\" defaultChecked />\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"flex items-start justify-between gap-4\">\r\n              <div className=\"space-y-1\">\r\n                <Label htmlFor=\"desc-2\" className=\"font-medium\">\r\n                  <span className=\"flex items-center gap-2\">\r\n                    <Shield className=\"h-4 w-4\" />\r\n                    Two-Factor Authentication\r\n                  </span>\r\n                </Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Add an extra layer of security by requiring a verification code in addition to your password\r\n                </p>\r\n              </div>\r\n              <Switch id=\"desc-2\" variant=\"success\" defaultChecked />\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"flex items-start justify-between gap-4\">\r\n              <div className=\"space-y-1\">\r\n                <Label htmlFor=\"desc-3\" className=\"font-medium\">\r\n                  <span className=\"flex items-center gap-2\">\r\n                    <Database className=\"h-4 w-4\" />\r\n                    Auto-save\r\n                  </span>\r\n                </Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Automatically save your work every 5 minutes to prevent data loss\r\n                </p>\r\n              </div>\r\n              <Switch id=\"desc-3\" />\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"flex items-start justify-between gap-4\">\r\n              <div className=\"space-y-1\">\r\n                <Label htmlFor=\"desc-4\" className=\"font-medium\">\r\n                  <span className=\"flex items-center gap-2\">\r\n                    <Sparkles className=\"h-4 w-4\" />\r\n                    Beta Features\r\n                  </span>\r\n                </Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Get early access to new features before they're released to everyone\r\n                </p>\r\n                <Alert className=\"mt-2\">\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription className=\"text-xs\">\r\n                    Beta features may be unstable and could change without notice\r\n                  </AlertDescription>\r\n                </Alert>\r\n              </div>\r\n              <Switch id=\"desc-4\" variant=\"destructive\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Controlled vs Uncontrolled */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Controlled vs Uncontrolled</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Examples of controlled and uncontrolled switch implementations\r\n        </p>\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Uncontrolled</CardTitle>\r\n              <CardDescription>Using defaultChecked prop</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"uncontrolled-1\">Push notifications</Label>\r\n                <Switch id=\"uncontrolled-1\" defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"uncontrolled-2\">Auto-play videos</Label>\r\n                <Switch id=\"uncontrolled-2\" />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"uncontrolled-3\">Location services</Label>\r\n                <Switch id=\"uncontrolled-3\" defaultChecked />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Controlled</CardTitle>\r\n              <CardDescription>Using checked prop and state</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"controlled-1\">\r\n                  Dark mode {switchStates.darkMode && <Badge className=\"ml-2\">Active</Badge>}\r\n                </Label>\r\n                <Switch \r\n                  id=\"controlled-1\"\r\n                  checked={switchStates.darkMode}\r\n                  onCheckedChange={(checked) => \r\n                    setSwitchStates(prev => ({ ...prev, darkMode: checked }))\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"controlled-2\">\r\n                  Notifications {switchStates.notifications && <Badge variant=\"secondary\" className=\"ml-2\">On</Badge>}\r\n                </Label>\r\n                <Switch \r\n                  id=\"controlled-2\"\r\n                  checked={switchStates.notifications}\r\n                  onCheckedChange={(checked) => \r\n                    setSwitchStates(prev => ({ ...prev, notifications: checked }))\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"text-sm text-muted-foreground mt-4\">\r\n                State: {JSON.stringify({ darkMode: switchStates.darkMode, notifications: switchStates.notifications })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-World Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-World Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Common switch patterns used in applications\r\n        </p>\r\n        \r\n        {/* Settings Panel */}\r\n        <div className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Application Settings</CardTitle>\r\n              <CardDescription>Configure your app preferences</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Simple tab implementation */}\r\n              <div className=\"w-full\">\r\n                <div className=\"flex space-x-1 border-b mb-4\">\r\n                  {[\"general\", \"privacy\", \"notifications\", \"features\"].map((tab) => (\r\n                    <button\r\n                      key={tab}\r\n                      className={cn(\r\n                        \"px-4 py-2 text-sm font-medium capitalize transition-colors\",\r\n                        activeTab === tab\r\n                          ? \"border-b-2 border-primary text-primary\"\r\n                          : \"text-muted-foreground hover:text-foreground\"\r\n                      )}\r\n                      onClick={() => setActiveTab(tab)}\r\n                    >\r\n                      {tab}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* Tab content */}\r\n                {activeTab === \"general\" && (\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(settings.general).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <div className=\"space-y-0.5\">\r\n                          <Label htmlFor={`general-${key}`} className=\"text-sm font-medium\">\r\n                            {key === 'darkMode' && 'Dark Mode'}\r\n                            {key === 'sounds' && 'Sound Effects'}\r\n                            {key === 'animations' && 'Animations'}\r\n                            {key === 'autoUpdate' && 'Auto-Update'}\r\n                          </Label>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            {key === 'darkMode' && 'Use dark theme throughout the app'}\r\n                            {key === 'sounds' && 'Play sounds for actions and notifications'}\r\n                            {key === 'animations' && 'Enable smooth transitions and effects'}\r\n                            {key === 'autoUpdate' && 'Automatically download and install updates'}\r\n                          </p>\r\n                        </div>\r\n                        <Switch \r\n                          id={`general-${key}`}\r\n                          checked={value}\r\n                          onCheckedChange={(checked) => handleSettingChange('general', key, checked)}\r\n                          size=\"sm\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === \"privacy\" && (\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(settings.privacy).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <div className=\"space-y-0.5\">\r\n                          <Label htmlFor={`privacy-${key}`} className=\"text-sm font-medium\">\r\n                            {key === 'publicProfile' && 'Public Profile'}\r\n                            {key === 'showActivity' && 'Show Activity Status'}\r\n                            {key === 'allowMessages' && 'Allow Direct Messages'}\r\n                            {key === 'dataCollection' && 'Analytics & Diagnostics'}\r\n                          </Label>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            {key === 'publicProfile' && 'Let others find and view your profile'}\r\n                            {key === 'showActivity' && 'Show when you\\'re online or active'}\r\n                            {key === 'allowMessages' && 'Receive messages from other users'}\r\n                            {key === 'dataCollection' && 'Help improve the app by sharing usage data'}\r\n                          </p>\r\n                        </div>\r\n                        <Switch \r\n                          id={`privacy-${key}`}\r\n                          checked={value}\r\n                          onCheckedChange={(checked) => handleSettingChange('privacy', key, checked)}\r\n                          size=\"sm\"\r\n                          variant={key === 'dataCollection' && !value ? 'destructive' : 'default'}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === \"notifications\" && (\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(settings.notifications).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <Label htmlFor={`notif-${key}`} className=\"flex items-center gap-2\">\r\n                          {key === 'email' && <Mail className=\"h-4 w-4\" />}\r\n                          {key === 'push' && <Smartphone className=\"h-4 w-4\" />}\r\n                          {key === 'sms' && <MessageSquare className=\"h-4 w-4\" />}\r\n                          {key === 'desktop' && <Monitor className=\"h-4 w-4\" />}\r\n                          <span className=\"capitalize\">\r\n                            {key === 'sms' ? 'SMS' : key} Notifications\r\n                          </span>\r\n                        </Label>\r\n                        <Switch \r\n                          id={`notif-${key}`}\r\n                          checked={value}\r\n                          onCheckedChange={(checked) => handleSettingChange('notifications', key, checked)}\r\n                          checkedIcon={<Bell className=\"h-3 w-3\" />}\r\n                          uncheckedIcon={<BellOff className=\"h-3 w-3\" />}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                    <Alert>\r\n                      <Info className=\"h-4 w-4\" />\r\n                      <AlertDescription className=\"text-sm\">\r\n                        You can customize which types of notifications you receive in each category\r\n                      </AlertDescription>\r\n                    </Alert>\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === \"features\" && (\r\n                  <div className=\"space-y-4\">\r\n                    {Object.entries(settings.features).map(([key, value]) => (\r\n                      <div key={key} className=\"flex items-center justify-between\">\r\n                        <div className=\"space-y-0.5\">\r\n                          <Label htmlFor={`feature-${key}`} className=\"text-sm font-medium flex items-center gap-2\">\r\n                            {key === 'beta' && <Sparkles className=\"h-4 w-4 text-purple-500\" />}\r\n                            {key === 'experimental' && <Zap className=\"h-4 w-4 text-yellow-500\" />}\r\n                            {key === 'analytics' && <Activity className=\"h-4 w-4 text-blue-500\" />}\r\n                            {key === 'telemetry' && <Database className=\"h-4 w-4 text-green-500\" />}\r\n                            <span>\r\n                              {key === 'beta' && 'Beta Features'}\r\n                              {key === 'experimental' && 'Experimental Mode'}\r\n                              {key === 'analytics' && 'Usage Analytics'}\r\n                              {key === 'telemetry' && 'Performance Telemetry'}\r\n                            </span>\r\n                          </Label>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            {key === 'beta' && 'Try new features before they\\'re released'}\r\n                            {key === 'experimental' && 'Enable cutting-edge experimental features'}\r\n                            {key === 'analytics' && 'Help us understand how you use the app'}\r\n                            {key === 'telemetry' && 'Share performance data to improve stability'}\r\n                          </p>\r\n                        </div>\r\n                        <Switch \r\n                          id={`feature-${key}`}\r\n                          checked={value}\r\n                          onCheckedChange={(checked) => handleSettingChange('features', key, checked)}\r\n                          size=\"sm\"\r\n                          variant={key === 'experimental' ? 'destructive' : 'default'}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button variant=\"ghost\">Reset to Defaults</Button>\r\n              <Button>Save Changes</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {/* Device Settings */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Quick Settings</CardTitle>\r\n              <CardDescription>Toggle device settings and connections</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n                {Object.entries(deviceSettings).map(([key, value]) => (\r\n                  <div key={key} className=\"flex flex-col items-center space-y-2 p-4 border rounded-lg\">\r\n                    <Switch \r\n                      id={`device-${key}`}\r\n                      checked={value}\r\n                      onCheckedChange={(checked) => \r\n                        setDeviceSettings(prev => ({ ...prev, [key]: checked }))\r\n                      }\r\n                      size=\"lg\"\r\n                      checkedIcon={\r\n                        key === 'wifi' ? <Wifi className=\"h-3 w-3\" /> :\r\n                        key === 'bluetooth' ? <Bluetooth className=\"h-3 w-3\" /> :\r\n                        key === 'location' ? <MapPin className=\"h-3 w-3\" /> :\r\n                        key === 'airplane' ? <Plane className=\"h-3 w-3\" /> :\r\n                        key === 'doNotDisturb' ? <BellOff className=\"h-3 w-3\" /> :\r\n                        <BatteryLow className=\"h-3 w-3\" />\r\n                      }\r\n                      uncheckedIcon={\r\n                        key === 'wifi' ? <WifiOff className=\"h-3 w-3\" /> :\r\n                        key === 'bluetooth' ? <BluetoothOff className=\"h-3 w-3\" /> :\r\n                        key === 'location' ? <MapPinOff className=\"h-3 w-3\" /> :\r\n                        key === 'airplane' ? <PlaneOff className=\"h-3 w-3\" /> :\r\n                        key === 'doNotDisturb' ? <Bell className=\"h-3 w-3\" /> :\r\n                        <Battery className=\"h-3 w-3\" />\r\n                      }\r\n                      variant={key === 'powerSaving' && value ? 'destructive' : 'default'}\r\n                    />\r\n                    <Label htmlFor={`device-${key}`} className=\"text-sm text-center\">\r\n                      {key === 'wifi' && 'Wi-Fi'}\r\n                      {key === 'bluetooth' && 'Bluetooth'}\r\n                      {key === 'location' && 'Location'}\r\n                      {key === 'airplane' && 'Airplane Mode'}\r\n                      {key === 'doNotDisturb' && 'Do Not Disturb'}\r\n                      {key === 'powerSaving' && 'Power Saving'}\r\n                    </Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Feature Toggles */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Feature Availability</CardTitle>\r\n              <CardDescription>Manage feature flags for your application</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid gap-4\">\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n                      <CheckCircle2 className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Payment Processing</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Accept credit card payments</p>\r\n                    </div>\r\n                  </div>\r\n                  <Switch defaultChecked variant=\"success\" />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg\">\r\n                      <AlertCircle className=\"h-5 w-5 text-yellow-600 dark:text-yellow-400\" />\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Maintenance Mode</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Show maintenance page to users</p>\r\n                    </div>\r\n                  </div>\r\n                  <Switch variant=\"destructive\" />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n                      <Sparkles className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">AI Features</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Enable AI-powered suggestions</p>\r\n                    </div>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg opacity-50\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"p-2 bg-gray-100 dark:bg-gray-900 rounded-lg\">\r\n                      <XCircle className=\"h-5 w-5 text-gray-600 dark:text-gray-400\" />\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">Legacy API</p>\r\n                      <p className=\"text-sm text-muted-foreground\">Deprecated - will be removed soon</p>\r\n                    </div>\r\n                  </div>\r\n                  <Switch disabled />\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Integration</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Using switches within forms with validation\r\n        </p>\r\n        <Card className=\"max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle>Create New Project</CardTitle>\r\n            <CardDescription>Configure your project settings</CardDescription>\r\n          </CardHeader>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            alert('Form submitted! Check console for values')\r\n            console.log('Form values:', switchStates)\r\n          }}>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"project-name\">Project Name</Label>\r\n                <Input id=\"project-name\" placeholder=\"My Awesome Project\" required />\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-sm font-medium\">Project Settings</h4>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <Label htmlFor=\"form-public\">Public Repository</Label>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Anyone can see this repository\r\n                    </p>\r\n                  </div>\r\n                  <Switch \r\n                    id=\"form-public\"\r\n                    checked={switchStates.publicProfile}\r\n                    onCheckedChange={(checked) => \r\n                      setSwitchStates(prev => ({ ...prev, publicProfile: checked }))\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <Label htmlFor=\"form-autosave\">Auto-save</Label>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Automatically save changes as you work\r\n                    </p>\r\n                  </div>\r\n                  <Switch \r\n                    id=\"form-autosave\"\r\n                    checked={switchStates.autoSave}\r\n                    onCheckedChange={(checked) => \r\n                      setSwitchStates(prev => ({ ...prev, autoSave: checked }))\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <Label htmlFor=\"form-basic\">Initialize with README</Label>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Add a README file to your repository\r\n                    </p>\r\n                  </div>\r\n                  <Switch \r\n                    id=\"form-basic\"\r\n                    checked={switchStates.basic}\r\n                    onCheckedChange={(checked) => \r\n                      setSwitchStates(prev => ({ ...prev, basic: checked }))\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              <Alert>\r\n                <Info className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  You can change these settings at any time in your project configuration.\r\n                </AlertDescription>\r\n              </Alert>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button type=\"button\" variant=\"ghost\">Cancel</Button>\r\n              <Button type=\"submit\">\r\n                Create Project\r\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Preferences Example */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Preferences Panel</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Complex preference management with multiple switch groups\r\n        </p>\r\n        <Card className=\"max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle>Email Preferences</CardTitle>\r\n            <CardDescription>Choose which emails you'd like to receive</CardDescription>\r\n          </CardHeader>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            alert('Preferences saved!')\r\n          }}>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"text-sm font-medium\">Content Types</h4>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <Label htmlFor=\"news\" className=\"flex items-center gap-2\">\r\n                        <FileText className=\"h-4 w-4\" />\r\n                        News & Updates\r\n                      </Label>\r\n                      <Switch id=\"news\" defaultChecked />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <Label htmlFor=\"tutorials\" className=\"flex items-center gap-2\">\r\n                        <Code className=\"h-4 w-4\" />\r\n                        Tutorials & Guides\r\n                      </Label>\r\n                      <Switch id=\"tutorials\" />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <Label htmlFor=\"offers\" className=\"flex items-center gap-2\">\r\n                        <Gift className=\"h-4 w-4\" />\r\n                        Special Offers\r\n                      </Label>\r\n                      <Switch id=\"offers\" defaultChecked />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <Separator />\r\n\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"text-sm font-medium\">Frequency</h4>\r\n                  <RadioGroup defaultValue=\"weekly\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"daily\" id=\"daily\" />\r\n                      <Label htmlFor=\"daily\">Daily digest</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"weekly\" id=\"weekly\" />\r\n                      <Label htmlFor=\"weekly\">Weekly summary</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"monthly\" id=\"monthly\" />\r\n                      <Label htmlFor=\"monthly\">Monthly newsletter</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between\">\r\n              <Button type=\"button\" variant=\"ghost\">Cancel</Button>\r\n              <Button type=\"submit\">Save Preferences</Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Accessibility */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Accessibility</h3>\r\n        <p className=\"text-muted-foreground mb-6\">\r\n          Switch components are built with accessibility in mind\r\n        </p>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-base\">Accessibility Features</CardTitle>\r\n            <CardDescription>Enhance user experience for all users</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <Alert>\r\n              <Info className=\"h-4 w-4\" />\r\n              <AlertDescription>\r\n                <strong>Keyboard Support:</strong>\r\n                <ul className=\"mt-2 space-y-1 text-sm\">\r\n                  <li>• <kbd>Tab</kbd> - Navigate between switches</li>\r\n                  <li>• <kbd>Space</kbd> - Toggle switch state</li>\r\n                  <li>• <kbd>Enter</kbd> - Submit form (when in a form)</li>\r\n                </ul>\r\n              </AlertDescription>\r\n            </Alert>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"text-sm font-medium\">Accessibility Settings</h4>\r\n              {Object.entries(accessibilitySettings).map(([key, value]) => (\r\n                <div key={key} className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <Label htmlFor={`a11y-${key}`} className=\"text-sm font-medium\">\r\n                      {key === 'screenReader' && 'Screen Reader Support'}\r\n                      {key === 'highContrast' && 'High Contrast Mode'}\r\n                      {key === 'reduceMotion' && 'Reduce Motion'}\r\n                      {key === 'largeText' && 'Large Text'}\r\n                    </Label>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      {key === 'screenReader' && 'Optimize for screen reader users'}\r\n                      {key === 'highContrast' && 'Increase color contrast for better visibility'}\r\n                      {key === 'reduceMotion' && 'Minimize animations and transitions'}\r\n                      {key === 'largeText' && 'Increase text size throughout the app'}\r\n                    </p>\r\n                  </div>\r\n                  <Switch \r\n                    id={`a11y-${key}`}\r\n                    checked={value}\r\n                    onCheckedChange={(checked) => \r\n                      setAccessibilitySettings(prev => ({ ...prev, [key]: checked }))\r\n                    }\r\n                    aria-label={`Toggle ${key.replace(/([A-Z])/g, ' $1').toLowerCase()}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"text-sm font-medium\">ARIA Attributes</h4>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                All switches include proper ARIA labels and states for assistive technologies\r\n              </p>\r\n              <div className=\"space-y-3 mt-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <Label htmlFor=\"aria-example\">With aria-label</Label>\r\n                  <Switch \r\n                    id=\"aria-example\" \r\n                    aria-label=\"Toggle example feature\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <Label htmlFor=\"aria-described\">With description</Label>\r\n                  <Switch \r\n                    id=\"aria-described\" \r\n                    aria-describedby=\"switch-description\"\r\n                  />\r\n                </div>\r\n                <p id=\"switch-description\" className=\"text-sm text-muted-foreground\">\r\n                  This switch has additional context via aria-describedby\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Helper function for class names\r\nfunction cn(...inputs: (string | undefined | null | false)[]) {\r\n  return inputs.filter(Boolean).join(' ')\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "textarea.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/textarea.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Textarea, Label, Button } from \"@lightmind/ui\"\r\nimport { \r\n  Send, \r\n  AlertCircle, \r\n  Info,\r\n  MessageSquare,\r\n  FileText,\r\n  User,\r\n  Mail,\r\n  Heart,\r\n  Star,\r\n  Code,\r\n  Hash,\r\n  AtSign,\r\n  Bold,\r\n  Italic,\r\n  List,\r\n  Link,\r\n  Image,\r\n  Smile\r\n} from \"lucide-react\"\r\n\r\nexport function TextareaDemo() {\r\n  const [comment, setComment] = React.useState(\"\")\r\n  const [bio, setBio] = React.useState(\"\")\r\n  const [feedback, setFeedback] = React.useState(\"\")\r\n  const [description, setDescription] = React.useState(\"\")\r\n  const [notes, setNotes] = React.useState(\"\")\r\n  const [markdown, setMarkdown] = React.useState(\"\")\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true)\r\n    \r\n    // Simulate form submission\r\n    setTimeout(() => {\r\n      setIsSubmitting(false)\r\n      setComment(\"\")\r\n      setFeedback(\"\")\r\n    }, 2000)\r\n  }\r\n\r\n  const validateBio = (value: string) => {\r\n    if (!value) {\r\n      setErrors(prev => ({ ...prev, bio: \"Bio is required\" }))\r\n    } else if (value.length < 10) {\r\n      setErrors(prev => ({ ...prev, bio: \"Bio must be at least 10 characters\" }))\r\n    } else if (value.length > 500) {\r\n      setErrors(prev => ({ ...prev, bio: \"Bio must be less than 500 characters\" }))\r\n    } else {\r\n      setErrors(prev => ({ ...prev, bio: \"\" }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Basic Textarea */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Textarea</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Standard textarea with various configurations</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"basic-textarea\">Basic Textarea</Label>\r\n            <Textarea \r\n              id=\"basic-textarea\"\r\n              placeholder=\"Type your message here...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"rows-textarea\">Custom Rows</Label>\r\n            <Textarea \r\n              id=\"rows-textarea\"\r\n              placeholder=\"This textarea has 5 rows...\"\r\n              rows={5}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"value-textarea\">With Default Value</Label>\r\n            <Textarea \r\n              id=\"value-textarea\"\r\n              defaultValue=\"This textarea comes with a default value that you can edit.\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Textarea Sizes */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Textarea Sizes</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Different size variations for various use cases</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label size=\"sm\">Small Textarea</Label>\r\n            <Textarea \r\n              size=\"sm\"\r\n              placeholder=\"Small size textarea...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Default Textarea</Label>\r\n            <Textarea \r\n              placeholder=\"Default size textarea...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label size=\"lg\">Large Textarea</Label>\r\n            <Textarea \r\n              size=\"lg\"\r\n              placeholder=\"Large size textarea...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Textarea States */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Textarea States</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Different states for various scenarios</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Default State</Label>\r\n            <Textarea placeholder=\"Default textarea...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Focused State</Label>\r\n            <Textarea placeholder=\"Click to see focus state...\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Disabled State</Label>\r\n            <Textarea \r\n              placeholder=\"This textarea is disabled...\" \r\n              disabled \r\n              value=\"You cannot edit this content\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Read-only State</Label>\r\n            <Textarea \r\n              value=\"This is read-only content. You can select and copy but not edit.\"\r\n              readOnly\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Error State</Label>\r\n            <Textarea \r\n              placeholder=\"Invalid input...\" \r\n              className=\"border-destructive focus-visible:ring-destructive\"\r\n              aria-invalid=\"true\"\r\n              aria-describedby=\"error-message\"\r\n            />\r\n            <p id=\"error-message\" className=\"text-sm text-destructive flex items-center gap-1\">\r\n              <AlertCircle className=\"h-3 w-3\" />\r\n              This field contains an error\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Success State</Label>\r\n            <Textarea \r\n              placeholder=\"Valid input...\" \r\n              className=\"border-green-500 focus-visible:ring-green-500\"\r\n              defaultValue=\"This looks good!\"\r\n            />\r\n            <p className=\"text-sm text-green-600\">Looking good!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resize Behavior */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Resize Behavior</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Control how users can resize the textarea</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Vertical Resize (Default)</Label>\r\n            <Textarea \r\n              resize=\"vertical\"\r\n              placeholder=\"You can resize this vertically...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Horizontal Resize</Label>\r\n            <Textarea \r\n              resize=\"horizontal\"\r\n              placeholder=\"You can resize this horizontally...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Both Directions</Label>\r\n            <Textarea \r\n              resize=\"both\"\r\n              placeholder=\"You can resize this in both directions...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>No Resize</Label>\r\n            <Textarea \r\n              resize=\"none\"\r\n              placeholder=\"This textarea cannot be resized...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Character Count */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Character Count & Limits</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Show character count and enforce limits</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label>With Character Count</Label>\r\n            <Textarea \r\n              characterCount\r\n              placeholder=\"Start typing to see character count...\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>With Character Limit</Label>\r\n            <Textarea \r\n              characterCount\r\n              maxLength={100}\r\n              placeholder=\"Maximum 100 characters...\"\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Try typing more than 100 characters\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Tweet-style Limit</Label>\r\n            <Textarea \r\n              characterCount\r\n              maxLength={280}\r\n              placeholder=\"What's happening?\"\r\n              className=\"resize-none\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Auto-resize */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Auto-resize Functionality</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Textarea that grows with content</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Basic Auto-resize</Label>\r\n            <Textarea \r\n              autoResize\r\n              placeholder=\"This textarea will grow as you type...\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              The textarea automatically adjusts its height\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Auto-resize with Min/Max Rows</Label>\r\n            <Textarea \r\n              autoResize\r\n              minRows={2}\r\n              maxRows={6}\r\n              placeholder=\"Min 2 rows, max 6 rows...\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Grows between 2 and 6 rows\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Auto-resize with Character Limit</Label>\r\n            <Textarea \r\n              autoResize\r\n              characterCount\r\n              maxLength={500}\r\n              minRows={3}\r\n              maxRows={8}\r\n              placeholder=\"Auto-resize with 500 character limit...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* With Helper Text */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">With Helper Text</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Textareas with hints and descriptions</p>\r\n        \r\n        <div className=\"grid gap-4 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"helper-textarea\">Description</Label>\r\n            <Textarea \r\n              id=\"helper-textarea\"\r\n              placeholder=\"Enter a detailed description...\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground flex items-start gap-1\">\r\n              <Info className=\"h-3 w-3 mt-0.5\" />\r\n              Provide as much detail as possible\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"optional-textarea\">\r\n              Additional Notes\r\n              <span className=\"text-muted-foreground text-sm font-normal ml-2\">(Optional)</span>\r\n            </Label>\r\n            <Textarea \r\n              id=\"optional-textarea\"\r\n              placeholder=\"Any additional information...\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"required-textarea\">\r\n              Feedback\r\n              <span className=\"text-destructive ml-1\">*</span>\r\n            </Label>\r\n            <Textarea \r\n              id=\"required-textarea\"\r\n              placeholder=\"Your feedback is important to us...\"\r\n              required\r\n              aria-required=\"true\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Required field\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-world Examples */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Examples</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Common textarea patterns in applications</p>\r\n        \r\n        <div className=\"space-y-8\">\r\n          {/* Comment Box */}\r\n          <div className=\"max-w-2xl\">\r\n            <h4 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\r\n              <MessageSquare className=\"h-5 w-5\" />\r\n              Comment Box\r\n            </h4>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"comment\">Leave a comment</Label>\r\n                <Textarea \r\n                  id=\"comment\"\r\n                  autoResize\r\n                  minRows={3}\r\n                  maxRows={10}\r\n                  placeholder=\"What are your thoughts?\"\r\n                  value={comment}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex gap-2\">\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Bold className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Italic className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Link className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Image className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n                <Button type=\"submit\" disabled={!comment || isSubmitting}>\r\n                  <Send className=\"mr-2 h-4 w-4\" />\r\n                  Post Comment\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Bio Field */}\r\n          <div className=\"max-w-2xl\">\r\n            <h4 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\r\n              <User className=\"h-5 w-5\" />\r\n              Profile Bio\r\n            </h4>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"bio\">Bio</Label>\r\n              <Textarea \r\n                id=\"bio\"\r\n                characterCount\r\n                maxLength={500}\r\n                rows={4}\r\n                placeholder=\"Tell us about yourself...\"\r\n                value={bio}\r\n                onChange={(e) => {\r\n                  setBio(e.target.value)\r\n                  validateBio(e.target.value)\r\n                }}\r\n                onBlur={() => validateBio(bio)}\r\n                className={errors.bio ? \"border-destructive focus-visible:ring-destructive\" : \"\"}\r\n                aria-invalid={!!errors.bio}\r\n                aria-describedby={errors.bio ? \"bio-error\" : undefined}\r\n              />\r\n              {errors.bio && (\r\n                <p id=\"bio-error\" className=\"text-sm text-destructive\">{errors.bio}</p>\r\n              )}\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Brief description for your profile. URLs are hyperlinked.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Feedback Form */}\r\n          <div className=\"max-w-2xl\">\r\n            <h4 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\r\n              <Star className=\"h-5 w-5\" />\r\n              Feedback Form\r\n            </h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"feedback-type\">Feedback Type</Label>\r\n                <div className=\"flex gap-2 mb-4\">\r\n                  <Button type=\"button\" variant=\"outline\" size=\"sm\">Bug Report</Button>\r\n                  <Button type=\"button\" variant=\"outline\" size=\"sm\">Feature Request</Button>\r\n                  <Button type=\"button\" variant=\"outline\" size=\"sm\">General Feedback</Button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"feedback-details\">Details</Label>\r\n                <Textarea \r\n                  id=\"feedback-details\"\r\n                  autoResize\r\n                  minRows={4}\r\n                  placeholder=\"Please provide detailed feedback...\"\r\n                  value={feedback}\r\n                  onChange={(e) => setFeedback(e.target.value)}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"feedback-email\">Email (Optional)</Label>\r\n                <div className=\"relative\">\r\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n                  <Textarea \r\n                    id=\"feedback-email\"\r\n                    className=\"pl-10 min-h-[40px]\"\r\n                    rows={1}\r\n                    placeholder=\"your@email.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <Button type=\"submit\" className=\"w-full\">\r\n                Submit Feedback\r\n              </Button>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Code Editor */}\r\n          <div className=\"max-w-2xl\">\r\n            <h4 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\r\n              <Code className=\"h-5 w-5\" />\r\n              Code Editor\r\n            </h4>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"code-editor\">Code</Label>\r\n                <select className=\"text-sm border rounded px-2 py-1\">\r\n                  <option>JavaScript</option>\r\n                  <option>TypeScript</option>\r\n                  <option>Python</option>\r\n                  <option>HTML</option>\r\n                  <option>CSS</option>\r\n                </select>\r\n              </div>\r\n              <Textarea \r\n                id=\"code-editor\"\r\n                className=\"font-mono text-sm\"\r\n                rows={10}\r\n                placeholder=\"// Enter your code here...\"\r\n                style={{ tabSize: 2 }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Issue Description */}\r\n          <div className=\"max-w-2xl\">\r\n            <h4 className=\"text-lg font-medium mb-4 flex items-center gap-2\">\r\n              <FileText className=\"h-5 w-5\" />\r\n              Issue Description\r\n            </h4>\r\n            <form className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"issue-title\">Title</Label>\r\n                <input \r\n                  id=\"issue-title\"\r\n                  className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                  placeholder=\"Brief description of the issue\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"issue-description\">Description</Label>\r\n                <Textarea \r\n                  id=\"issue-description\"\r\n                  autoResize\r\n                  minRows={5}\r\n                  characterCount\r\n                  maxLength={2000}\r\n                  placeholder=\"## Problem&#10;&#10;Describe the issue...&#10;&#10;## Steps to Reproduce&#10;&#10;1. Step one&#10;2. Step two&#10;&#10;## Expected Behavior&#10;&#10;What should happen...&#10;&#10;## Actual Behavior&#10;&#10;What actually happens...\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex gap-2\">\r\n                <Button type=\"submit\">Create Issue</Button>\r\n                <Button type=\"button\" variant=\"outline\">Cancel</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Markdown Editor */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Markdown Editor</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Textarea with markdown preview</p>\r\n        \r\n        <div className=\"max-w-4xl\">\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label>Write</Label>\r\n                <div className=\"flex gap-1\">\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Bold className=\"h-3 w-3\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Italic className=\"h-3 w-3\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <List className=\"h-3 w-3\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Link className=\"h-3 w-3\" />\r\n                  </Button>\r\n                  <Button type=\"button\" variant=\"ghost\" size=\"sm\">\r\n                    <Code className=\"h-3 w-3\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Textarea \r\n                autoResize\r\n                minRows={10}\r\n                placeholder=\"Write your markdown here...\"\r\n                value={markdown}\r\n                onChange={(e) => setMarkdown(e.target.value)}\r\n                className=\"font-mono text-sm\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label>Preview</Label>\r\n              <div className=\"min-h-[240px] rounded-md border bg-muted/50 p-4\">\r\n                <div className=\"prose prose-sm dark:prose-invert max-w-none\">\r\n                  {markdown ? (\r\n                    <p className=\"text-muted-foreground whitespace-pre-wrap\">{markdown}</p>\r\n                  ) : (\r\n                    <p className=\"text-muted-foreground\">Nothing to preview</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Form Integration</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Textarea in a complete form context</p>\r\n        \r\n        <div className=\"max-w-2xl\">\r\n          <form className=\"space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"form-name\">Name</Label>\r\n              <input \r\n                id=\"form-name\"\r\n                className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                placeholder=\"John Doe\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"form-email\">Email</Label>\r\n              <input \r\n                id=\"form-email\"\r\n                type=\"email\"\r\n                className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                placeholder=\"john@example.com\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"form-subject\">Subject</Label>\r\n              <input \r\n                id=\"form-subject\"\r\n                className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                placeholder=\"How can we help?\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"form-message\">Message</Label>\r\n              <Textarea \r\n                id=\"form-message\"\r\n                autoResize\r\n                minRows={4}\r\n                characterCount\r\n                maxLength={1000}\r\n                placeholder=\"Tell us more about your inquiry...\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"form-attachments\">Additional Information</Label>\r\n              <Textarea \r\n                id=\"form-attachments\"\r\n                rows={3}\r\n                placeholder=\"Any other details you'd like to share? (Optional)\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex gap-2\">\r\n              <Button type=\"submit\">Send Message</Button>\r\n              <Button type=\"button\" variant=\"outline\">Save Draft</Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced Patterns */}\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Advanced Patterns</h3>\r\n        <p className=\"text-muted-foreground mb-6\">Complex textarea interactions</p>\r\n        \r\n        <div className=\"grid gap-6 max-w-2xl\">\r\n          <div className=\"space-y-2\">\r\n            <Label>With Emoji Picker</Label>\r\n            <div className=\"relative\">\r\n              <Textarea \r\n                placeholder=\"Type a message...\"\r\n                className=\"pr-12\"\r\n              />\r\n              <Button \r\n                type=\"button\"\r\n                variant=\"ghost\" \r\n                size=\"sm\"\r\n                className=\"absolute bottom-2 right-2\"\r\n              >\r\n                <Smile className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>With Mention Support</Label>\r\n            <Textarea \r\n              placeholder=\"Type @ to mention someone...\"\r\n              className=\"min-h-[100px]\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Use @ to mention users and # for tags\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label>Multi-language Support</Label>\r\n            <Textarea \r\n              placeholder=\"支持多语言输入...\"\r\n              dir=\"auto\"\r\n              className=\"min-h-[100px]\"\r\n            />\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Automatically detects text direction\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  },
  {
    "name": "tooltip.demo",
    "type": "registry:example",
    "dependencies": [],
    "devDependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "registry/examples/tooltip.demo.tsx",
        "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger, TooltipArrow, Button, Badge, Input } from \"@lightmind/ui\"\r\nimport { \r\n  HelpCircle, \r\n  Info, \r\n  AlertCircle, \r\n  CheckCircle2,\r\n  Copy,\r\n  Download,\r\n  Share2,\r\n  Settings,\r\n  User,\r\n  Mail,\r\n  Calendar,\r\n  Globe,\r\n  Lock,\r\n  Zap,\r\n  Star,\r\n  Heart,\r\n  MessageSquare,\r\n  MoreVertical,\r\n  ChevronRight,\r\n  ExternalLink,\r\n  Code,\r\n  FileText,\r\n  Image as ImageIcon\r\n} from \"lucide-react\"\r\n\r\nexport function TooltipDemo() {\r\n  const [clickCount, setClickCount] = React.useState(0)\r\n  const [copiedId, setCopiedId] = React.useState<string | null>(null)\r\n\r\n  const handleCopy = (text: string, id: string) => {\r\n    navigator.clipboard.writeText(text)\r\n    setCopiedId(id)\r\n    setTimeout(() => setCopiedId(null), 2000)\r\n  }\r\n\r\n  return (\r\n    <TooltipProvider delayDuration={300}>\r\n      <div className=\"space-y-12\">\r\n        {/* Basic Usage */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Basic Usage</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Simple tooltips with text content</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Hover me</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>This is a basic tooltip</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"secondary\">\r\n                  <Settings className=\"mr-2 h-4 w-4\" />\r\n                  Settings\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Configure your preferences</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"icon\">\r\n                  <HelpCircle className=\"h-4 w-4\" />\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Get help</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tooltip Positions */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Positions</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Tooltips can be positioned in different directions</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-8 items-center justify-center p-8 border rounded-lg\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Top</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent side=\"top\">\r\n                <p>Tooltip on top</p>\r\n                <TooltipArrow />\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Right</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent side=\"right\">\r\n                <p>Tooltip on right</p>\r\n                <TooltipArrow />\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Bottom</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent side=\"bottom\">\r\n                <p>Tooltip on bottom</p>\r\n                <TooltipArrow />\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Left</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent side=\"left\">\r\n                <p>Tooltip on left</p>\r\n                <TooltipArrow />\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Different Triggers */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Trigger Types</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Different ways to trigger tooltips</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Hover (default)</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Shown on hover</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button \r\n                  variant=\"outline\"\r\n                  onClick={() => setClickCount(c => c + 1)}\r\n                >\r\n                  Click trigger\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Clicked {clickCount} times</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Input \r\n                  placeholder=\"Focus me\" \r\n                  className=\"w-40\"\r\n                />\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Shown on focus</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Custom Delay Times */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Delay Duration</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Control when tooltips appear</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <TooltipProvider delayDuration={0}>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">Instant (0ms)</Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>No delay</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n\r\n            <TooltipProvider delayDuration={500}>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">Medium (500ms)</Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Half second delay</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n\r\n            <TooltipProvider delayDuration={1000}>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">Long (1000ms)</Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>One second delay</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Rich Content */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Rich Content</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Tooltips with complex content</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  <User className=\"mr-2 h-4 w-4\" />\r\n                  User Info\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent className=\"max-w-xs\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"font-semibold\">John Doe</div>\r\n                  <div className=\"text-sm text-muted-foreground\">john.doe@example.com</div>\r\n                  <div className=\"flex items-center gap-2 text-xs\">\r\n                    <Badge variant=\"secondary\">Pro</Badge>\r\n                    <span>Member since 2023</span>\r\n                  </div>\r\n                </div>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  <Zap className=\"mr-2 h-4 w-4\" />\r\n                  Performance\r\n                </Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-green-500\" />\r\n                    <span className=\"text-sm\">All systems operational</span>\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    Response time: 42ms\r\n                  </div>\r\n                </div>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <div className=\"inline-flex items-center gap-2 rounded-md border px-3 py-2\">\r\n                  <Star className=\"h-4 w-4 text-yellow-500\" />\r\n                  <span>4.8</span>\r\n                </div>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"font-semibold\">Customer Rating</div>\r\n                  <div className=\"flex gap-1\">\r\n                    {[1, 2, 3, 4, 5].map((star) => (\r\n                      <Star \r\n                        key={star} \r\n                        className={`h-4 w-4 ${star <= 4 ? 'fill-yellow-500 text-yellow-500' : 'text-muted-foreground'}`} \r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    Based on 1,234 reviews\r\n                  </div>\r\n                </div>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Disabled State */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Disabled State</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Tooltips on disabled elements</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <span className=\"inline-block\">\r\n                  <Button disabled variant=\"outline\">\r\n                    Disabled Button\r\n                  </Button>\r\n                </span>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>This feature is currently unavailable</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <span className=\"inline-block\">\r\n                  <Button disabled>\r\n                    <Lock className=\"mr-2 h-4 w-4\" />\r\n                    Premium Only\r\n                  </Button>\r\n                </span>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Upgrade to Pro to unlock this feature</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Different UI Elements */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Various UI Elements</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Tooltips on different types of elements</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-6 items-center\">\r\n            {/* Icon buttons */}\r\n            <div className=\"flex gap-2\">\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\">\r\n                    <Copy className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Copy to clipboard</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\">\r\n                    <Share2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Share</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\">\r\n                    <Download className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Download</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            {/* Links */}\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <a href=\"#\" className=\"text-primary underline inline-flex items-center gap-1\">\r\n                  Learn more\r\n                  <ExternalLink className=\"h-3 w-3\" />\r\n                </a>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Opens in a new tab</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            {/* Badges */}\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Badge variant=\"secondary\" className=\"cursor-help\">\r\n                  Beta\r\n                </Badge>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>This feature is in beta testing</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            {/* Images */}\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center cursor-pointer\">\r\n                  <ImageIcon className=\"h-5 w-5 text-white\" />\r\n                </div>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Profile picture</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-world Examples */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Real-world Examples</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Common tooltip patterns in applications</p>\r\n          \r\n          <div className=\"space-y-6\">\r\n            {/* Help icons */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <label className=\"text-sm font-medium\">API Key</label>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <HelpCircle className=\"h-4 w-4 text-muted-foreground cursor-help\" />\r\n                </TooltipTrigger>\r\n                <TooltipContent className=\"max-w-xs\">\r\n                  <p>Your API key is used to authenticate requests. Keep it secret!</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            {/* Truncated text */}\r\n            <div className=\"flex items-center gap-4\">\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"max-w-[200px] truncate cursor-help\">\r\n                    This is a very long filename that will be truncated in the UI but shown in tooltip.txt\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>This is a very long filename that will be truncated in the UI but shown in tooltip.txt</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button \r\n                    variant=\"ghost\" \r\n                    size=\"icon\"\r\n                    onClick={() => handleCopy(\"This is a very long filename that will be truncated in the UI but shown in tooltip.txt\", \"filename\")}\r\n                  >\r\n                    {copiedId === \"filename\" ? (\r\n                      <CheckCircle2 className=\"h-4 w-4 text-green-500\" />\r\n                    ) : (\r\n                      <Copy className=\"h-4 w-4\" />\r\n                    )}\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>{copiedId === \"filename\" ? \"Copied!\" : \"Copy filename\"}</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            {/* Feature explanations */}\r\n            <div className=\"p-4 border rounded-lg space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"font-medium\">Two-factor authentication</span>\r\n                  <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                      <Info className=\"h-4 w-4 text-muted-foreground cursor-help\" />\r\n                    </TooltipTrigger>\r\n                    <TooltipContent className=\"max-w-xs\">\r\n                      <p>Add an extra layer of security to your account by requiring a verification code in addition to your password.</p>\r\n                    </TooltipContent>\r\n                  </Tooltip>\r\n                </div>\r\n                <Badge variant=\"outline\" className=\"text-green-600\">Enabled</Badge>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"font-medium\">Email notifications</span>\r\n                  <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                      <AlertCircle className=\"h-4 w-4 text-yellow-600 cursor-help\" />\r\n                    </TooltipTrigger>\r\n                    <TooltipContent className=\"max-w-xs\">\r\n                      <p>You have 5 unread notifications. Click to view them.</p>\r\n                    </TooltipContent>\r\n                  </Tooltip>\r\n                </div>\r\n                <Badge variant=\"outline\">5 new</Badge>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Status indicators */}\r\n            <div className=\"flex gap-4\">\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-2 cursor-help\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-green-500 animate-pulse\" />\r\n                    <span className=\"text-sm\">Online</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Last seen: Just now</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-2 cursor-help\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-yellow-500\" />\r\n                    <span className=\"text-sm\">Away</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Last seen: 5 minutes ago</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-2 cursor-help\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-gray-500\" />\r\n                    <span className=\"text-sm\">Offline</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Last seen: 2 hours ago</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tooltip Variants */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Tooltip Variants</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Different visual styles for tooltips</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Default</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent>\r\n                <p>Default tooltip style</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Inverse</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent variant=\"inverse\">\r\n                <p>Inverse tooltip style</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Destructive</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent variant=\"destructive\">\r\n                <p>Warning: This action cannot be undone</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Success</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent variant=\"success\">\r\n                <p>Operation completed successfully</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Warning</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent variant=\"warning\">\r\n                <p>Please review before proceeding</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tooltip Sizes */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Tooltip Sizes</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Different sizes for various use cases</p>\r\n          \r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Small</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent size=\"sm\">\r\n                <p>Compact tooltip</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Default</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent size=\"default\">\r\n                <p>Standard tooltip size</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <Button variant=\"outline\">Large</Button>\r\n              </TooltipTrigger>\r\n              <TooltipContent size=\"lg\">\r\n                <p>Large tooltip with more padding</p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Accessibility */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Accessibility</h3>\r\n          <p className=\"text-muted-foreground mb-6\">Keyboard navigation and screen reader support</p>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"p-4 bg-muted rounded-lg\">\r\n              <p className=\"text-sm mb-2\">Try navigating with keyboard:</p>\r\n              <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n                <li>• Press <kbd className=\"px-1.5 py-0.5 bg-background rounded text-xs\">Tab</kbd> to focus elements</li>\r\n                <li>• Tooltips appear on focus for keyboard users</li>\r\n                <li>• Screen readers announce tooltip content</li>\r\n                <li>• Press <kbd className=\"px-1.5 py-0.5 bg-background rounded text-xs\">Escape</kbd> to dismiss tooltips</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"flex gap-4\">\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    <Calendar className=\"mr-2 h-4 w-4\" />\r\n                    Schedule\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Schedule a meeting (Ctrl+K)</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    <Mail className=\"mr-2 h-4 w-4\" />\r\n                    Messages\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>View messages (Ctrl+M)</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"outline\">\r\n                    <Globe className=\"mr-2 h-4 w-4\" />\r\n                    Language\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Change language (Ctrl+L)</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Complex Interactive Example */}\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold tracking-tight mb-2\">Interactive Example</h3>\r\n          <p className=\"text-muted-foreground mb-6\">A more complex example with multiple tooltips</p>\r\n          \r\n          <div className=\"p-6 border rounded-lg space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-500 flex items-center justify-center text-white font-semibold\">\r\n                  JD\r\n                </div>\r\n                <div>\r\n                  <div className=\"font-semibold flex items-center gap-2\">\r\n                    John Doe\r\n                    <Tooltip>\r\n                      <TooltipTrigger asChild>\r\n                        <Badge variant=\"secondary\" className=\"cursor-help\">Pro</Badge>\r\n                      </TooltipTrigger>\r\n                      <TooltipContent>\r\n                        <p>Pro member since January 2023</p>\r\n                      </TooltipContent>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className=\"text-sm text-muted-foreground\">john.doe@example.com</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex gap-1\">\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <MessageSquare className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>Send message</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <Heart className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>Add to favorites</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>More options</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-3 gap-3 pt-4 border-t\">\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"text-center cursor-help\">\r\n                    <div className=\"text-2xl font-bold\">128</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Projects</div>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Total projects created</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"text-center cursor-help\">\r\n                    <div className=\"text-2xl font-bold\">24.5K</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Stars</div>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>GitHub stars earned</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"text-center cursor-help\">\r\n                    <div className=\"text-2xl font-bold\">99.9%</div>\r\n                    <div className=\"text-sm text-muted-foreground\">Uptime</div>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Service availability this month</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TooltipProvider>\r\n  )\r\n}",
        "type": "registry:example"
      }
    ],
    "category": "examples",
    "tags": [
      "client"
    ]
  }
]